<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-crossorigin" />
    
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>奔跑的太阳花 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=Y1yBNCRf3ODEjYGJn208vPUnnX-rIyYVsZ75AvRbzGM" />
    <link id="MainCss" rel="stylesheet" href="/skins/codinglife/bundle-codinglife.min.css?v=2uJkpdACLVfstRQ7zeCFK19brTwKuDEaNBLgKz9nm3A" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/codinglife/bundle-codinglife-mobile.min.css?v=DwDRKMd1bmjnJZ4iQqrTCO9QLlYb6OZaUAzHoHIIihg" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/lguow/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/lguow/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/lguow/wlwmanifest.xml" />
    <script>
        var currentBlogId = 417528;
        var currentBlogApp = 'lguow';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'CodingLife';
        var visitorUserId = '';
    </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=2Mic1VLeHXarpdzASbXqFMIMVLEBiWXNO5yiTHUcmhw"></script>
    
    
    
</head>
<body class="has-navbar">
    <a name="top"></a>
    <div id="top_nav" class="navbar forpc">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/lguow/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/lguow/">奔跑的太阳花</a>
</h1>
<h2>业精于勤，荒于嬉；形成于思，毁于随</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/lguow/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E5%A5%94%E8%B7%91%E7%9A%84%E5%A4%AA%E9%98%B3%E8%8A%B1">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/lguow/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		





		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/01/03.html">2020年1月3日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/12146316.html">
    <span>
            <span>[置顶]</span>
        自己实现 一个 Vue框架，包含了Vue的核心原理
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：Vue工作机制 vue工作机制 Vue响应式的原理 依赖收集与追踪 编译compile html: &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;!-- 插值        <a href="https://www.cnblogs.com/lguow/p/12146316.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-01-03 18:32
奔跑的太阳花
<span data-post-id="12146316" class="post-view-count">阅读(882)</span> 
<span data-post-id="12146316" class="post-comment-count">评论(0)</span> 
<span data-post-id="12146316" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12146316" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2021/05/20.html">2021年5月20日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/14791199.html">
    <span>
        微信小程序 自定义下拉加载 对于ios弹性事件的处理
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：自己做了个下拉加载组件 发现在ios弹性情况下不会出现预期的效果，在网上找了很久，自己也思考了很久总结了三个方法，来实现ios的兼容。 首先思考：ios为什么会出现情况？发现：在ios弹性触发的情况下 微信的监听页面滑动事件（onPageScroll）的 e.scrollTop会出现负数，且 ios        <a href="https://www.cnblogs.com/lguow/p/14791199.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-05-20 19:32
奔跑的太阳花
<span data-post-id="14791199" class="post-view-count">阅读(0)</span> 
<span data-post-id="14791199" class="post-comment-count">评论(0)</span> 
<span data-post-id="14791199" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14791199" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2021/04/28.html">2021年4月28日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/14713079.html">
    <span>
        微信小程序进行地图导航使用地图功能
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：之前我写过的文章当中，提过小程序的打包大小。所以特地去下载一个区域的地图的这种方法，是不存在的。 我用的导航主要使用的是应用外的导航，这篇文章可能对于非常熟悉小程序的小伙伴来说就是小case，所以只适合对于小程序开发不算特别熟悉的小伙伴看。 毕竟有些功能我也是第一次自己慢慢写，喜欢的话会找时间出一个        <a href="https://www.cnblogs.com/lguow/p/14713079.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-28 10:31
奔跑的太阳花
<span data-post-id="14713079" class="post-view-count">阅读(29)</span> 
<span data-post-id="14713079" class="post-comment-count">评论(0)</span> 
<span data-post-id="14713079" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14713079" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2021/03/04.html">2021年3月4日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/14481084.html">
    <span>
        css技巧---电子表体字体引入
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1、字体下载 https://files-cdn.cnblogs.com/files/lguow/digifaw.rar （免费分享，点个赞再走呗） 2、引入 @font-face { font-family: digifaw; src: url(&#39;../../../common/font/digi        <a href="https://www.cnblogs.com/lguow/p/14481084.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-03-04 16:20
奔跑的太阳花
<span data-post-id="14481084" class="post-view-count">阅读(49)</span> 
<span data-post-id="14481084" class="post-comment-count">评论(0)</span> 
<span data-post-id="14481084" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14481084" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2021/01/31.html">2021年1月31日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/14353617.html">
    <span>
        解决for循环，暂停3s,在执行下次循环
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：这里用到while循环，这是同步的，利用while循环阻塞代码进程，已达到暂停的效果。 function sleep(numberMillis) { var now = new Date(); var exitTime = now.getTime() + numberMillis; while (t        <a href="https://www.cnblogs.com/lguow/p/14353617.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-01-31 19:24
奔跑的太阳花
<span data-post-id="14353617" class="post-view-count">阅读(53)</span> 
<span data-post-id="14353617" class="post-comment-count">评论(0)</span> 
<span data-post-id="14353617" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14353617" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/14351936.html">
    <span>
        node 将汉字转化为拼音
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：使用npm包：pinyin，这还是一个两年前发布的神库吧。 1、安装 yarn add pinying 1 2、使用 const pinyin = require(&quot;pinyin&quot;); console.log(pinyin(&quot;中心&quot;)); // [ [ &#39;zhōng&#39; ], [ &#39;xīn&#39; ] ]         <a href="https://www.cnblogs.com/lguow/p/14351936.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-01-31 11:41
奔跑的太阳花
<span data-post-id="14351936" class="post-view-count">阅读(58)</span> 
<span data-post-id="14351936" class="post-comment-count">评论(0)</span> 
<span data-post-id="14351936" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14351936" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/14351762.html">
    <span>
        针对CMS中的tag标签理解
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：针对CMS的tag标签有以下解释： 什么tag标签？ TAG标签是一种由自定义的一种标签，要比分类更加的准确，可以概括文章主要内容的关键词。 运用TAG标签，可以使网站的文章更容易被搜索引擎检索到。百度的搜索引擎尤其喜欢。 tag标签有什么用？ 通过给文章、产品定制标签 第一：可以让更多的人精准的找        <a href="https://www.cnblogs.com/lguow/p/14351762.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-01-31 10:51
奔跑的太阳花
<span data-post-id="14351762" class="post-view-count">阅读(45)</span> 
<span data-post-id="14351762" class="post-comment-count">评论(0)</span> 
<span data-post-id="14351762" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14351762" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2021/01/13.html">2021年1月13日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/14272449.html">
    <span>
        基于Node 的爬虫 
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：// superagent 是用来发起请求的，是一个轻量的,渐进式的ajax api,可读性好,学习曲线低,内部依赖nodejs原生的请求api,适用于nodejs环境下.，也可以使用http发起请求 // superagent-charset防止爬取下来的数据乱码，更改字符格式 // cheeri        <a href="https://www.cnblogs.com/lguow/p/14272449.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-01-13 15:40
奔跑的太阳花
<span data-post-id="14272449" class="post-view-count">阅读(56)</span> 
<span data-post-id="14272449" class="post-comment-count">评论(0)</span> 
<span data-post-id="14272449" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14272449" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/14272431.html">
    <span>
        正则表达式匹配img标签
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：let str = &#39;&lt;img style=&quot;20px;height: 20px;&quot; src=&quot;imgaddress.png&quot; alt=&quot;&quot;&gt;平安&#39; let reg =/&lt;img.*?src=[\&quot;|\&#39;]?(.*?)[\&quot;|\&#39;]?\s.*?&gt;/i let value = str.replace(        <a href="https://www.cnblogs.com/lguow/p/14272431.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-01-13 15:39
奔跑的太阳花
<span data-post-id="14272431" class="post-view-count">阅读(86)</span> 
<span data-post-id="14272431" class="post-comment-count">评论(0)</span> 
<span data-post-id="14272431" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14272431" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/12/03.html">2020年12月3日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/14080858.html">
    <span>
        ElementUI el-tree 树形控件给节点添加图标
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：ElementUI el-tree 树形控件给节点添加图标 原文链接：https://www.cnblogs.com/cupid10/p/13820823.html TreeData为后端获取到的数据 &lt;el-tree :expand-on-click-node=&quot;false&quot; style=&quot;wid        <a href="https://www.cnblogs.com/lguow/p/14080858.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-12-03 16:03
奔跑的太阳花
<span data-post-id="14080858" class="post-view-count">阅读(859)</span> 
<span data-post-id="14080858" class="post-comment-count">评论(0)</span> 
<span data-post-id="14080858" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14080858" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/11/21.html">2020年11月21日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/14016444.html">
    <span>
        node使用art-template生成静态页面
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：art-template页面模板 &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;        <a href="https://www.cnblogs.com/lguow/p/14016444.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-11-21 17:32
奔跑的太阳花
<span data-post-id="14016444" class="post-view-count">阅读(120)</span> 
<span data-post-id="14016444" class="post-comment-count">评论(0)</span> 
<span data-post-id="14016444" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14016444" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/10/15.html">2020年10月15日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13818787.html">
    <span>
        将用驼峰命名的字符串转为下划线命名（面试题）
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：实现将对象下所有key由驼峰/Pascal转成下划线分割： toSnakeCase({ UserName: &#39;toutiao&#39;, group: { GroupName: &#39;douyin&#39; } }) =&gt; { user_name: &#39;toutiao&#39;, group: { group_name: &#39;do        <a href="https://www.cnblogs.com/lguow/p/13818787.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-10-15 09:39
奔跑的太阳花
<span data-post-id="13818787" class="post-view-count">阅读(329)</span> 
<span data-post-id="13818787" class="post-comment-count">评论(0)</span> 
<span data-post-id="13818787" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13818787" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/10/12.html">2020年10月12日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13803799.html">
    <span>
        vuex的优缺点
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：vuex的优点 1.解决了非父子组件的消息传递（将数据存放在state中） 2.减少了AJAX请求次数，有些情景可以直接从内存中的state获取 vuex的缺点 1.刷新浏览器，vuex中的state会重新变为初始状态 解决方案vuex-along ,vuex-persistedstate http        <a href="https://www.cnblogs.com/lguow/p/13803799.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-10-12 16:50
奔跑的太阳花
<span data-post-id="13803799" class="post-view-count">阅读(563)</span> 
<span data-post-id="13803799" class="post-comment-count">评论(0)</span> 
<span data-post-id="13803799" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13803799" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/09/30.html">2020年9月30日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13753908.html">
    <span>
        egg-jwt登录验证生成token
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：egg-jwt&#160;是一个生成token的插件 token的规则： 服务器返回的token数据基本结构是&#160;Header.Payload.Signature，&#160;header、payload、signature三部分以&#39;.&#39;隔开。 例如： 1 2 3 eyJhbGciOiJIUzI1NiIsInR5cCI6        <a href="https://www.cnblogs.com/lguow/p/13753908.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-09-30 12:17
奔跑的太阳花
<span data-post-id="13753908" class="post-view-count">阅读(474)</span> 
<span data-post-id="13753908" class="post-comment-count">评论(0)</span> 
<span data-post-id="13753908" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13753908" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13753900.html">
    <span>
        vuex 的实现原理
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：一、Vuex是什么 Vuex是专门为Vuejs应用程序设计的状态管理工具。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。 1、Vuex的构成 由上图，我们可以看出Vuex有以下几个部分构成： 1）state state是存储的单一状态，是存储的基本数据。        <a href="https://www.cnblogs.com/lguow/p/13753900.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-09-30 12:14
奔跑的太阳花
<span data-post-id="13753900" class="post-view-count">阅读(220)</span> 
<span data-post-id="13753900" class="post-comment-count">评论(0)</span> 
<span data-post-id="13753900" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13753900" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/09/20.html">2020年9月20日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13700866.html">
    <span>
        nodejs egg多静态文件入口配置
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：由于egg多静态资源入口在一开始的时候是没有的，是后来增加的；但是文档写得不是太清楚所以小白不容易弄懂。在config.default.js文件中增加这个，将项目根目录下的public、publicData这两个文件夹作为静态资源入口；运行的时候egg会将这两个文件夹的资源放到prefix: &#39;/p        <a href="https://www.cnblogs.com/lguow/p/13700866.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-09-20 16:32
奔跑的太阳花
<span data-post-id="13700866" class="post-view-count">阅读(280)</span> 
<span data-post-id="13700866" class="post-comment-count">评论(0)</span> 
<span data-post-id="13700866" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13700866" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/09/17.html">2020年9月17日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13683509.html">
    <span>
        MySQL 库操作
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：库操作 阅读目录 一 系统数据库 二 创建数据库 三 数据库相关操作 一 系统数据库 information_schema： 虚拟库，不占用磁盘空间，存储的是数据库启动后的一些参数，如用户表信息、列信息、权限信息、字符信息等performance_schema：&#160;MySQL 5.5开始新增一个数据库        <a href="https://www.cnblogs.com/lguow/p/13683509.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-09-17 09:52
奔跑的太阳花
<span data-post-id="13683509" class="post-view-count">阅读(74)</span> 
<span data-post-id="13683509" class="post-comment-count">评论(0)</span> 
<span data-post-id="13683509" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13683509" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/08/24.html">2020年8月24日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13553103.html">
    <span>
        nodejs微服务
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：近来公司增加了nodejs微服务 它的主要任务是接收来自于现场的采集数据：作业记录和流转记录，动态构建一个基地的全景实时数据 暂时不涉及数据库。 如果要进行数据库操作，不建议使用本模块，由Springboot来设计一个Java版的模块。此模块只是进行实时内存数据的更新，并提供给新的中控界面进行使用。        <a href="https://www.cnblogs.com/lguow/p/13553103.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-08-24 12:03
奔跑的太阳花
<span data-post-id="13553103" class="post-view-count">阅读(242)</span> 
<span data-post-id="13553103" class="post-comment-count">评论(0)</span> 
<span data-post-id="13553103" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13553103" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/08/21.html">2020年8月21日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13542350.html">
    <span>
        node 操作文件流 fs 同步与异步 流式文件的写入与读取
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：fs fs ( File System ) 文件系统 在node中通过fs模块来和系统中的文件进行交互 通过fs模块可以对磁盘中的文件做各种增删改查的操作 写入文件 1.同步写入 2.异步写入 3.简单写入 4.流式写入 读取文件 在fs模块中所有的方法都有两个版本 不带sync的，异步方法 带sy        <a href="https://www.cnblogs.com/lguow/p/13542350.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-08-21 17:56
奔跑的太阳花
<span data-post-id="13542350" class="post-view-count">阅读(652)</span> 
<span data-post-id="13542350" class="post-comment-count">评论(0)</span> 
<span data-post-id="13542350" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13542350" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13542334.html">
    <span>
        node判断文件目录是否存在
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：&#39;use strict&#39;; //这是一个简单的应用 var path = require(&#39;path&#39;); var fs = require(&quot;fs&quot;) ; global.l = console.log; //检查某个目录是否存在 var stat = fs.statSync(path.join(_        <a href="https://www.cnblogs.com/lguow/p/13542334.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-08-21 17:53
奔跑的太阳花
<span data-post-id="13542334" class="post-view-count">阅读(2319)</span> 
<span data-post-id="13542334" class="post-comment-count">评论(0)</span> 
<span data-post-id="13542334" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13542334" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/08/19.html">2020年8月19日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13528624.html">
    <span>
        Nodejs 使用 Chrome DevTools 调试 --inspect-brk
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：参考链接： https://cnodejs.org/topic/5a9661ff71327bb413bbff5b https://github.com/nswbmw/node-in-debugging/blob/master/4.2%20Chrome%20DevTools.md （补充：推荐结合no        <a href="https://www.cnblogs.com/lguow/p/13528624.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-08-19 12:29
奔跑的太阳花
<span data-post-id="13528624" class="post-view-count">阅读(222)</span> 
<span data-post-id="13528624" class="post-comment-count">评论(0)</span> 
<span data-post-id="13528624" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13528624" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/08/18.html">2020年8月18日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13524808.html">
    <span>
        innerHTML,innerText,outerHTML,outerText的区别
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：那好，经过这么一比较，我们就可以得出结论了 innerHTML 输出当前标签的文本内容，如果标签内有子标签，会连子标签本身和子标签内的文本内容一起输出 innerText 只输出当前标签内的文本内容，如果标签内有子标签，那么也只输出子标签内的文本内容 outerHTML 输出当前标签的本身和标签内的        <a href="https://www.cnblogs.com/lguow/p/13524808.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-08-18 17:43
奔跑的太阳花
<span data-post-id="13524808" class="post-view-count">阅读(94)</span> 
<span data-post-id="13524808" class="post-comment-count">评论(0)</span> 
<span data-post-id="13524808" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13524808" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/08/06.html">2020年8月6日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13447205.html">
    <span>
        margin-top失效及解决办法
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：现象：当两个空的块级元素嵌套时，如果内部的块设置有margin-top属性，而且父元素没有下边解决方法所述的特征，那么内部块的margin-top属性会绑架父元素（即将margin-top传递凌驾给了父元素）。就好比一个小兵，看到上级有漏洞，就假传圣旨，利用漏洞扩张自己的权利。只要设置父元素的bor        <a href="https://www.cnblogs.com/lguow/p/13447205.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-08-06 16:35
奔跑的太阳花
<span data-post-id="13447205" class="post-view-count">阅读(279)</span> 
<span data-post-id="13447205" class="post-comment-count">评论(0)</span> 
<span data-post-id="13447205" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13447205" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/07/31.html">2020年7月31日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13410828.html">
    <span>
        vue自定义移动端touch事件之点击、滑动、长按事件
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：篇文章主要介绍了vue自定义移动端touch事件之点击、滑动、长按事件的实例代码,需要的朋友可以参考下 用法： **HTML** &lt;div id=&quot;app&quot; class=&quot;box&quot; v-tap=&quot;vuetouch&quot; //vuetouch为函数名，如没有参数，可直接写函数名 v-longtap=&quot;{f        <a href="https://www.cnblogs.com/lguow/p/13410828.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-07-31 17:12
奔跑的太阳花
<span data-post-id="13410828" class="post-view-count">阅读(2215)</span> 
<span data-post-id="13410828" class="post-comment-count">评论(0)</span> 
<span data-post-id="13410828" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13410828" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/07/30.html">2020年7月30日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13405005.html">
    <span>
        .bat文件在执行后打开的命令行窗口不自动关闭
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：可以有以下几种方式： （1）在要运行的test1.bat文件的同层目录新建一个test2.bat文件，内容如下： start test1.bat 然后执行此文件即可。 （2）在要执行的.bat文件加入 pause命令，然后执行 ping 192.168.8.8 pause （3）在要执行的.bat文        <a href="https://www.cnblogs.com/lguow/p/13405005.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-07-30 17:04
奔跑的太阳花
<span data-post-id="13405005" class="post-view-count">阅读(654)</span> 
<span data-post-id="13405005" class="post-comment-count">评论(0)</span> 
<span data-post-id="13405005" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13405005" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/07/29.html">2020年7月29日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13398263.html">
    <span>
        微信H5页面禁止转发分享功能&amp;&amp; 关闭微信内部浏览器
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：微信官方文档:https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421141115 方法一: 加一段js代码 WeixinJSBridge 是微信浏览器内部私有接口 document.addEventListener(&#39;WeixinJSB        <a href="https://www.cnblogs.com/lguow/p/13398263.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-07-29 17:09
奔跑的太阳花
<span data-post-id="13398263" class="post-view-count">阅读(1778)</span> 
<span data-post-id="13398263" class="post-comment-count">评论(0)</span> 
<span data-post-id="13398263" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13398263" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13396004.html">
    <span>
        推荐几个移动端前端UI框架
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：（免费分享，点个赞再走呗） SUI&#160;Mobile http://m.sui.taobao.org/components/#popup SUI&#160;Mobile&#160;是一套基于&#160;Framework7&#160;开发的UI库。 MUI http://dev.dcloud.net.cn/mui/ 最接近原生APP体验的高性        <a href="https://www.cnblogs.com/lguow/p/13396004.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-07-29 11:15
奔跑的太阳花
<span data-post-id="13396004" class="post-view-count">阅读(3084)</span> 
<span data-post-id="13396004" class="post-comment-count">评论(0)</span> 
<span data-post-id="13396004" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13396004" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/07/22.html">2020年7月22日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13361764.html">
    <span>
        利用Vue的插件机制，实现项目公共代码管理
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：import Vue from &quot;vue&quot;; import axios from &quot;axios&quot;; import { apis } from &quot;@/static/js/apis.js&quot;; // import NoData from &quot;@/components/NoData.vue&quot;; let myV        <a href="https://www.cnblogs.com/lguow/p/13361764.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-07-22 16:50
奔跑的太阳花
<span data-post-id="13361764" class="post-view-count">阅读(176)</span> 
<span data-post-id="13361764" class="post-comment-count">评论(0)</span> 
<span data-post-id="13361764" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13361764" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/07/16.html">2020年7月16日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13322380.html">
    <span>
        vue中移动端自适应的postcss-plugin-px2rem插件
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：flexible 主要是用来响应式改变根元素的字体大小 安装命令&#160;npm install lib-flexible --save 在main.js里面导入命令import &#39;lib-flexible&#39; 要把index.html里面的&lt;meta name=&#39;viewport&#39;&gt;标签删除;因为会自动添加        <a href="https://www.cnblogs.com/lguow/p/13322380.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-07-16 14:13
奔跑的太阳花
<span data-post-id="13322380" class="post-view-count">阅读(433)</span> 
<span data-post-id="13322380" class="post-comment-count">评论(0)</span> 
<span data-post-id="13322380" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13322380" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13321623.html">
    <span>
        vue实现动态改变title
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：想要实现vue动态改变页面title，需要给每个页面设置标题。并且在路由发生变化时修改页面title router - index.js const router = new Router({ mode: &#39;history&#39;, routes: [ { path: &#39;/index&#39;, name: &#39;i        <a href="https://www.cnblogs.com/lguow/p/13321623.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-07-16 11:16
奔跑的太阳花
<span data-post-id="13321623" class="post-view-count">阅读(794)</span> 
<span data-post-id="13321623" class="post-comment-count">评论(0)</span> 
<span data-post-id="13321623" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13321623" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/07/15.html">2020年7月15日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13306619.html">
    <span>
        css文字超出显示省略号
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：单行： white-space:nowrap; overflow:hidden; text-overflow:ellipsis; 多行： word-break: break-all; text-overflow: ellipsis; overflow: hidden; display: -webki        <a href="https://www.cnblogs.com/lguow/p/13306619.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-07-15 17:06
奔跑的太阳花
<span data-post-id="13306619" class="post-view-count">阅读(88)</span> 
<span data-post-id="13306619" class="post-comment-count">评论(0)</span> 
<span data-post-id="13306619" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13306619" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/07/09.html">2020年7月9日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13272283.html">
    <span>
        浅谈服务端渲染(SSR)
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：最近在把一个c端的项目重构成首屏服务端渲染（SSR：server side render） 项目用到的技术： React 、webpack、koa2、webpack 对于重构成SSR，redux并不是必须的，所以没用redux 本篇文章先讲述一些理论的东西，之后会写代码篇 一、 什么是服务端渲染 简        <a href="https://www.cnblogs.com/lguow/p/13272283.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-07-09 10:46
奔跑的太阳花
<span data-post-id="13272283" class="post-view-count">阅读(64)</span> 
<span data-post-id="13272283" class="post-comment-count">评论(0)</span> 
<span data-post-id="13272283" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13272283" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/07/06.html">2020年7月6日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13254446.html">
    <span>
        Vue-cli3 WARNING in asset size limit: The following asset(s) exceed the recommended size limit (244 KiB)
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：在vue.config.js里 添加 configureWebpack : { performance: { hints:&#39;warning&#39;, //入口起点的最大体积 整数类型（以字节为单位） maxEntrypointSize: 50000000, //生成文件的最大体积 整数类型（以字节为单位         <a href="https://www.cnblogs.com/lguow/p/13254446.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-07-06 14:01
奔跑的太阳花
<span data-post-id="13254446" class="post-view-count">阅读(1843)</span> 
<span data-post-id="13254446" class="post-comment-count">评论(0)</span> 
<span data-post-id="13254446" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13254446" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/07/03.html">2020年7月3日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13228797.html">
    <span>
        javascript保留两位小数的几种实现
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：一、四舍五入 以下处理结果会四舍五入: var num =2.446242342; num = num.toFixed(2); // 输出结果为 2.45 二、不四舍五入 以下处理结果不会四舍五入。 第一种，先把小数变整数： Math.floor(15.7784514000 * 100) / 100        <a href="https://www.cnblogs.com/lguow/p/13228797.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-07-03 10:19
奔跑的太阳花
<span data-post-id="13228797" class="post-view-count">阅读(139)</span> 
<span data-post-id="13228797" class="post-comment-count">评论(0)</span> 
<span data-post-id="13228797" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13228797" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/06/30.html">2020年6月30日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13214579.html">
    <span>
        JavaScript 判断对象中是否有某属性
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：判断对象中是否有某属性的常见方式总结，不同的场景要使用不同的方式。 一、点( . )或者方括号( [ ] ) 通过点或者方括号可以获取对象的属性值，如果对象上不存在该属性，则会返回undefined。当然，这里的“不存在”指的是对象自身和原型链上都不存在，如果原型链有该属性，则会返回原型链上的属性值        <a href="https://www.cnblogs.com/lguow/p/13214579.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-06-30 16:41
奔跑的太阳花
<span data-post-id="13214579" class="post-view-count">阅读(671)</span> 
<span data-post-id="13214579" class="post-comment-count">评论(2)</span> 
<span data-post-id="13214579" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13214579" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/06/28.html">2020年6月28日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/13203451.html">
    <span>
        前端总结数据结构与算法基础
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：翻书问题或者走台阶问题。 问：共有n个台阶，每次只能上1个台阶或者2个台阶，共有多少种方法爬完台阶？共有n页书，每次只能翻1页或者2页书，共有多少种方法翻完全书？ ps：本质上是斐波那契数列问题。假设只有一个台阶，则只有一种跳法，f(1)=1；如果两个台阶，那么有两种跳法：1,一次跳一级，2,一次跳        <a href="https://www.cnblogs.com/lguow/p/13203451.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-06-28 16:09
奔跑的太阳花
<span data-post-id="13203451" class="post-view-count">阅读(211)</span> 
<span data-post-id="13203451" class="post-comment-count">评论(0)</span> 
<span data-post-id="13203451" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13203451" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/05/31.html">2020年5月31日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/12997266.html">
    <span>
        Vue-Cli 3.0 中配置高德地图的两种方式
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：vue 中使用高德地图有两种方式 一、vue-amap 组件 官网：&#160;https://elemefe.github.io/vue-amap/#/ 开始的时候是打算用这个组件做地图功能的，但是尝试之后存在些问题，所以就放弃了，可能是我的使用方式不对。我所遇到的问题： 1. 安装之后使用，始终提示跨域问        <a href="https://www.cnblogs.com/lguow/p/12997266.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-31 13:11
奔跑的太阳花
<span data-post-id="12997266" class="post-view-count">阅读(731)</span> 
<span data-post-id="12997266" class="post-comment-count">评论(0)</span> 
<span data-post-id="12997266" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12997266" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/05/28.html">2020年5月28日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/12980781.html">
    <span>
        element-ui table 点击某行高亮（修改背景色）
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：（免费分享，点个赞再走呗） 在el-table标签中添加highlight-current-row &lt;el-table highlight-current-row &gt; 在style 里面设置全局样式： /* 用来设置当前页面element全局table 选中某行时的背景色*/ .el-table__        <a href="https://www.cnblogs.com/lguow/p/12980781.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-28 14:43
奔跑的太阳花
<span data-post-id="12980781" class="post-view-count">阅读(4676)</span> 
<span data-post-id="12980781" class="post-comment-count">评论(0)</span> 
<span data-post-id="12980781" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12980781" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/05/25.html">2020年5月25日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/12957494.html">
    <span>
        input type=&quot;file&quot;获取文件名方法
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：&lt;div class=&quot;file-box&quot;&gt; &lt;form id=&quot;uploadForm&quot;&gt; &lt;input type=&quot;text&quot; id=&quot;textfield&quot; class=&quot;txt&quot; /&gt; &lt;input type=&quot;button&quot; class=&quot;btn&quot; value=&quot;浏览...&quot; /&gt; &lt;inpu        <a href="https://www.cnblogs.com/lguow/p/12957494.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-25 16:12
奔跑的太阳花
<span data-post-id="12957494" class="post-view-count">阅读(1148)</span> 
<span data-post-id="12957494" class="post-comment-count">评论(0)</span> 
<span data-post-id="12957494" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12957494" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/05/15.html">2020年5月15日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/12895537.html">
    <span>
        使用 http-proxy-middleware 做转发, post 请求转发失败
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：nodejs 服务器在之前使用了 bodyParser 把 body 的数据解析出来，以供处理。 但是后来有些接口需要转发到其他的域名对应的服务器，不想在前端写死，就在 nodejs 服务上引用了 http-proxy-middleware 做代理转发。get 请求的时候没什么问题，但是 post         <a href="https://www.cnblogs.com/lguow/p/12895537.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-15 16:09
奔跑的太阳花
<span data-post-id="12895537" class="post-view-count">阅读(1185)</span> 
<span data-post-id="12895537" class="post-comment-count">评论(0)</span> 
<span data-post-id="12895537" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12895537" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/lguow/archive/2020/05/13.html">2020年5月13日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/lguow/p/12880384.html">
    <span>
        core-js@2 core-js@3报错问题 
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：WARNING: We noticed you&#39;re using the `useBuiltIns` option without declaring a core-js version. Currently, we assume version 2.x when no version is pas        <a href="https://www.cnblogs.com/lguow/p/12880384.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-13 09:23
奔跑的太阳花
<span data-post-id="12880384" class="post-view-count">阅读(1612)</span> 
<span data-post-id="12880384" class="post-comment-count">评论(0)</span> 
<span data-post-id="12880384" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12880384" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        
    <a href="https://www.cnblogs.com/lguow/default.html?page=2">
        下一页
    </a>

    </div>    
</div>






<script>
    updatePostStats(
        $(".post-view-count").map(function () { return this.dataset.postId }).get(),
        function(id, count) { $(".post-view-count[data-post-id=" + id + "]").text("阅读(" + count + ")") },
        function(id, count) { $(".post-comment-count[data-post-id=" + id + "]").text("评论(" + count + ")") },
        function(id, count) { $(".post-digg-count[data-post-id=" + id + "]").text("推荐(" + count + ")") });
</script>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2021 奔跑的太阳花
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAjteEylVxgTUQITezYX4WxT4b3TMHJ90C8_30enB7J7pMKwUqi5Dgl3NMxQ1Xj5Cx9Hda9xciqqHWwBtHrY-Scg51reHd-E-shy2kItLsKgLf0UT3vD5p_CWOQ7tf4143O8" />
</body>
</html>
