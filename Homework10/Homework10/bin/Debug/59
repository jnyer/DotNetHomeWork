<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="never" />
    <meta name="description" content="前言 最近用 Python 写了几个简单的脚本来处理一些数据，因为只是简单功能所以我就直接使用 print 来打印日志。 任务运行时偶尔会出现一些异常： 因为我在不同地方都有打印日志，导致每次报错的地" />
    <meta property="og:description" content="前言 最近用 Python 写了几个简单的脚本来处理一些数据，因为只是简单功能所以我就直接使用 print 来打印日志。 任务运行时偶尔会出现一些异常： 因为我在不同地方都有打印日志，导致每次报错的地" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>自带的 print 函数居然会报错？ - crossoverJie - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=Y1yBNCRf3ODEjYGJn208vPUnnX-rIyYVsZ75AvRbzGM" />
    <link id="MainCss" rel="stylesheet" href="/skins/loveisintheair/bundle-loveisintheair.min.css?v=2eeF5VFetkv0ebUrveBo_MjLCMmhO1B4PudZOUBLn1Y" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/crossoverJie/custom.css?v=H/XiXITCicADmCaA3IlWnJkLhys=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/loveisintheair/bundle-loveisintheair-mobile.min.css?v=YRGfW14H7zygWA_SxKeRyr-kyP2kOiJ7vj7-MC3lxPs" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/crossoverJie/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/crossoverJie/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/crossoverJie/wlwmanifest.xml" />
    <script>
        var currentBlogId = 441144;
        var currentBlogApp = 'crossoverJie';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'LoveIsIntheAir';
        var visitorUserId = '';
    </script>
        <script>
            var currentPostDateAdded = '2021-05-18 07:35';
        </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=2Mic1VLeHXarpdzASbXqFMIMVLEBiWXNO5yiTHUcmhw"></script>
    
    
    
</head>
<body class="has-navbar">
    <a name="top"></a>
    <div id="top_nav" class="navbar forpc">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    <div id="page_begin_html">
        <a class="git-link" href="https://github.com/crossoverjie"></a>
    </div>
    
<!--done-->
<center>
<div id="home">
<div id="header">
	<div id="blogTitle">
	<a href="https://www.cnblogs.com/crossoverJie/"><img id="blogLogo" src="/skins/loveisintheair/images/logo.gif" alt="" /></a>			
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/crossoverJie/">crossoverJie</a>
</h1>
<h2>You never know what you can do till you try.</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
	<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
	<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/crossoverJie/">
首页</a>
</li>
	<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
	<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/crossoverJie">
联系</a></li>
	<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
	<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/crossoverJie/rss/">
订阅</a>
	
<a id="blog_nav_rss_image" href="https://www.cnblogs.com/crossoverJie/rss/">
    <img src="/skins/loveisintheair/images/xml.gif" alt="订阅" />
</a></li>
</ul>


		<div class="blogStats">
			
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div class="clear"></div>
	<div id="topicList">
		<div id="post_detail">
<!--done-->
<div id="topics">
	<div class="post">
		<h1 class = "postTitle">
			
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/crossoverJie/p/14782361.html">
    <span>自带的 print 函数居然会报错？</span>
    



</a>

		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gqduiqi5evj31o00u0n84.jpg" alt="" loading="lazy"></p>
<h1 id="前言">前言</h1>
<p>最近用 <code>Python</code> 写了几个简单的脚本来处理一些数据，因为只是简单功能所以我就直接使用 <code>print</code> 来打印日志。</p>
<p>任务运行时偶尔会出现一些异常：</p>
<p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gqexrlit2ij316406mgpd.jpg" alt="" loading="lazy"></p>
<p>因为我在不同地方都有打印日志，导致每次报错的地方都不太一样，从而导致程序运行结果非常诡异；有时候是这段代码没有运行，下一次就可能是另外一段代码没有触发。</p>
<p>虽说当时有注意到 <code>Broken pipe</code> 这个关键异常，但没有特别在意，因为代码中也有一些发送 <code>http</code> 请求的地方，一直以为是网络 <code>IO</code> 出现了问题，压根没往 <code>print</code> 这个最基本的打印函数上思考🤔。</p>
<p>直到这个问题反复出现我才认真看了这个异常，定睛一看 <code>print</code> 不也是 <code>IO</code> 操作嘛，难道真的是自带的  <code>print</code> 函数都出问题了？</p>
<hr>
<p>但在本地、测试环境我运行无数次也没能发现异常；于是我找运维拿到了线上的运行方式。</p>
<p>原来为了方便维护大家提交上来的脚本任务，运维自己有维护一个统一的脚本，在这个脚本中使用：</p>
<pre><code class="language-python">cmd = 'python /xxx/test.py'
os.popen(cmd)
</code></pre>
<p>来触发任务，这也是与我在本地、开发环境的唯一区别。</p>
<h1 id="popen-原理">popen 原理</h1>
<p>为此我在开发环境模拟出了异常：</p>
<p>test.py:</p>
<pre><code class="language-python">import time
if __name__ == '__main__':
    time.sleep(20)
    print '1000'*1024
</code></pre>
<p>task.py:</p>
<pre><code class="language-python">import os
import time
if __name__ == '__main__':
    start = int(time.time())
    cmd = 'python test.py'
    os.popen(cmd)
    end = int(time.time())
    print 'end****{}s'.format(end-start)
</code></pre>
<p>运行:</p>
<pre><code class="language-python">python task.py
</code></pre>
<p>等待 20s 必然会复现这个异常：</p>
<pre><code class="language-pytho">Traceback (most recent call last):
  File "test.py", line 4, in &lt;module&gt;
    print '1000'*1024
IOError: [Errno 32] Broken pipe
</code></pre>
<p>为什么会出现这个异常呢？</p>
<p>首先得了解 <code>os.popen(command[, mode[, bufsize]])</code> 这个函数的运行原理。<br>
<img src="https://tva1.sinaimg.cn/large/008i3skNly1gqj4cfyd33j32j605iacq.jpg" alt="" loading="lazy"></p>
<p>根据官方文档的解释，该函数会执行 <code>fork</code> 一个子进程执行 <code>command</code> 这个命令，同时将子进程的标准输出通过管道连接到父进程；</p>
<p>也就该方法返回的文件描述符。</p>
<p>这里画个图能更好地理解其中的原理：<br>
<img src="https://tva1.sinaimg.cn/large/008i3skNly1gqjc7gr4q8j314n0rsgot.jpg" alt="" loading="lazy"></p>
<p>在这里的使用场景中并没有获取 <code>popen()</code> 的返回值，所以 <code>command</code> 的执行本质上是异步的；</p>
<p>也就是说当 <code>task.py</code> 执行完毕后会自动关闭读取端的管道。<br>
<img src="https://tva1.sinaimg.cn/large/008i3skNly1gqjcct53t6j315l0rsdjw.jpg" alt="" loading="lazy"><br>
如图所示，关闭之后子进程会向 <code>pipe</code> 中输出  <code>print '1000'*1024</code>，由于这里输出的内容较多会一下子填满管道的缓冲区；</p>
<p>于是写入端会收到 <code>SIGPIPE</code> 信号，从而导致 <code>Broken pipe</code> 的异常。</p>
<p>从维基百科中我们也可以看出这个异常产生的一些条件：<br>
<img src="https://tva1.sinaimg.cn/large/008i3skNly1gqjcgq0j2tj31s605gabf.jpg" alt="" loading="lazy"></p>
<p>其中也提到了 <code>SIGPIPE</code> 信号。</p>
<h1 id="解决办法">解决办法</h1>
<p>既然知道了问题原因，那解决起来就比较简单了，主要有以下几个方案：</p>
<ol>
<li>使用 <code>read()</code> 函数读取管道中的数据，全部读取之后再关闭。</li>
<li>如果不需要子进程中的输出时，也可以将 <code>command</code> 的标准输出重定向到 <code>/dev/null</code>。</li>
<li>也可以使用 <code>Python3</code> 的 <code>subprocess.Popen</code> 模块来运行。</li>
</ol>
<p>这里使用第一种方案进行演示：</p>
<pre><code class="language-python">import os
import time
if __name__ == '__main__':
    start = int(time.time())
    cmd = 'python test.py'
    with os.popen(cmd) as p:
        print p.read()
    end = int(time.time())
    print 'end****{}s'.format(end-start)
</code></pre>
<p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gqjcx5dfnlj30go08qwii.jpg" alt="" loading="lazy"></p>
<p>运行 <code>task.py</code> 之后不会再抛异常，同时也将 <code>command</code> 的输出打印出来。</p>
<p>线上修复时我没有采用这个方案，为了方便查看日志，还是使用标准的日志框架将日志输出到了 es 中，方便统一在 <code>kibana</code> 中进行查看。</p>
<p>由于日志框架并没有使用到管道，所以自然也不会有这个问题。</p>
<h1 id="更多内容">更多内容</h1>
<p>问题虽然是解决了，其中还是涉及到了一些咱们平时不太注意的知识点，这次我们就来一起回顾一下。</p>
<p>首先是父子进程的内容，这个在 <code>c/c++/python</code> 中比较常见，在 <code>Java/golang</code> 中直接使用多线程、协程会更多一些。</p>
<p>比如这次提到的 <code>Python</code> 中的 <code>os.popen()</code> 就是创建了一个子进程，既然是子进程那肯定是需要和父进程进行通信才能达到协同工作的目的。</p>
<p>很容易想到，父子进程之间可以通过上文提到的管道（匿名管道）来进行通信。</p>
<p>还是以刚才的 Python 程序为例，当运行 task.py 后会生成两个进程：<br>
<img src="https://tva1.sinaimg.cn/large/008i3skNly1gqjewfzw7zj314w03ujvh.jpg" alt="" loading="lazy"></p>
<p>分别进入这两个程序的<code> /proc/pid/fd</code> 目录可以看到这两个进程所打开的文件描述符。</p>
<p>父进程：</p>
<p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gqjeyky8ozj30nu07adk0.jpg" alt="" loading="lazy"></p>
<p>子进程：</p>
<p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gqjeywrrlxj30kw058gmw.jpg" alt="" loading="lazy"></p>
<p>可以看到子进程的标准输出与父进程关联，也就是 <code>popen()</code> 所返回的那个文件描述符。</p>
<blockquote>
<p>这里的 <code>0 1 2</code> 分别对应一个进程的<code>stdin</code>(标准输入)/<code>stdout</code>(标准输出)/<code>stderr</code>(标准错误)。</p>
</blockquote>
<p>还有一点需要注意的是，当我们在父进程中打开的文件描述符，子进程也会继承过去；</p>
<p>比如在 <code>task.py</code> 中新增一段代码：</p>
<pre><code class="language-python">x = open("1.txt", "w")
</code></pre>
<p>之后查看文件描述符时会发现父子进程都会有这个文件：<br>
<img src="https://tva1.sinaimg.cn/large/008i3skNly1gqjftaylgtj30pg0lk482.jpg" alt="" loading="lazy"></p>
<p>但相反的，子进程中打开的文件父进程是不会有的，这个应该很容易理解。</p>
<h1 id="总结">总结</h1>
<p>一些基础知识在排查一些诡异问题时显得尤为重要，比如本次涉及到的父子进程的管道通信，最后来总结一下：</p>
<ol>
<li><code>os.popen()</code> 函数是异步执行的，如果需要拿到子进程的输出，需要自行调用 <code>read()</code> 函数。</li>
<li>父子进程是通过匿名管道进行通信的，当读取端关闭时，写入端输出到达管道最大缓存时会收到 <code>SIGPIPE</code> 信号，从而抛出 <code>Broken pipe</code> 异常。</li>
<li>子进程会继承父进程的文件描述符。</li>
</ol>
<p><strong>你的点赞与分享是对我最大的支持</strong></p>

</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
		</div>
		<div class="postDesc">posted @ 
<span id="post-date">2021-05-18 19:35</span>&nbsp;
<a href="https://www.cnblogs.com/crossoverJie/">crossoverJie</a>&nbsp;
阅读(<span id="post_view_count">468</span>)&nbsp;
评论(<span id="post_comment_count">4</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14782361" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(14782361);return false;">收藏</a></div>
	</div>
	
	
</div><!--end: topics 文章、评论容器-->
<script src="https://common.cnblogs.com/highlight/10.3.1/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 441144, cb_blogApp = 'crossoverJie', cb_blogUserGuid = '48619d9a-ff90-4bde-9cd2-08d5d82bd790';
    var cb_entryId = 14782361, cb_entryCreatedDate = '2021-05-18 19:35', cb_postType = 1;
    updatePostStats(
        [cb_entryId],
        function(id, count) { $("#post_view_count").text(count) },
        function(id, count) { $("#post_comment_count").text(count) })
    zoomManager.apply("#cnblogs_post_body img:not(.code_img_closed):not(.code_img_opened)");
</script>
<a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <div id="cnblogs_c1" class="under-post-card">
        <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>
    </div>
    <div id="under_post_card1"></div>
    <div id="cnblogs_c2" class="under-post-card">
        <div id='div-gpt-ad-1592366332455-0' style='width: 468px; height: 60px;'></div>
    </div>
    <div id="under_post_card2"></div>
    <div id="HistoryToday" class="under-post-card"></div>
    <script type="text/javascript">
       var commentManager = new blogCommentManager();
       commentManager.renderComments(0);
       fixPostBody();
       deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);       deliverT2();
       deliverC1C2();
       loadNewsAndKb();
       loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);       LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
       GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
       loadOptUnderPost();
       GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>

</div>


	</div><!--end: topicList 文章列表容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="calendar"><div id="calendar"><div id="blog-calendar" style="display:none"></div></div>                
                    <script>loadBlogDefaultCalendar();</script></div>
			
			<DIV id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</DIV>
			
		</div><!--end: sideBarMain -->
		<div class="clear"></div>
		<div id="footer">
			<!--done-->
Copyright &copy; 2021 crossoverJie
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



		</div><!--end: footer -->
	</div><!--end: sideBar 侧边栏容器 -->
</div><!--end: home 自定义的最大容器 -->
</center>


    

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAju2NYZ735HawacHVH8bwhca9BDU7_ICO8xVVdFnTwifLdCS4WlzLZDkp9NVUcCd_8BQ3gdKY6NgSyw36E61OpTd3L5zhODJ0ZFGdFEO3qHIkkt4b5CV5wmFEJqFCiIqeK0" />
</body>
</html>
