<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-crossorigin" />
    
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>技术译民 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=zS6-e1bxywlu3kpHvpr1J6MySwya3ztFtEnS7RYQ0Fk" />
    <link id="MainCss" rel="stylesheet" href="/skins/codinglife/bundle-codinglife.min.css?v=2uJkpdACLVfstRQ7zeCFK19brTwKuDEaNBLgKz9nm3A" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/ittranslator/custom.css?v=OKC7RrkX1B1ukVNwlwxopa67rNA=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/codinglife/bundle-codinglife-mobile.min.css?v=DwDRKMd1bmjnJZ4iQqrTCO9QLlYb6OZaUAzHoHIIihg" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/ittranslator/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/ittranslator/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/ittranslator/wlwmanifest.xml" />
    <script>
        var currentBlogId = 612247;
        var currentBlogApp = 'ittranslator';
        var cb_enable_mathjax = true;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'CodingLife';
        var visitorUserId = '';
    </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=yJQaJ16S00coMfzvh-NgF2zm2J87f5VfNamFdsnKHrc"></script>
    <script type="text/x-mathjax-config">
        MathJax.Hub.Config({
        tex2jax: { inlineMath: [['$','$'], ['\\(','\\)']], processClass: 'math', processEscapes: true },
        TeX: {
        equationNumbers: { autoNumber: ['AMS'], useLabelIds: true },
        extensions: ['extpfeil.js', 'mediawiki-texvc.js'],
        Macros: {bm: "\\boldsymbol"}
        },
        'HTML-CSS': { linebreaks: { automatic: true } },
        SVG: { linebreaks: { automatic: true } }
        });
    </script>
    <script src="https://mathjax.cnblogs.com/2_7_5/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;v=20200504"></script>
    
</head>
<body class="no-navbar">
    <a name="top"></a>
    <div id="top_nav" class="navbar forpc navbar-custom">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/ittranslator/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/ittranslator/">『技术译站』</a>
</h1>
<h2>一个技术“译”民的『技术译站』，翻译和分享一些 IT 技术文章，微信公众号：技术译站， 网站：https://ittranslator.cn/</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/ittranslator/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
</li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/ittranslator/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		





		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2021/01/12.html">2021年1月12日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/14260348.html">
    <span>
            <span>[置顶]</span>
        C# 中的 null 包容运算符 “!” —— 概念、由来、用法和注意事项
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：在 2020 年的最后一天，博客园发起了一个开源项目：基于 .NET 的博客引擎 fluss，我抽空把源码下载下来看了下，发现在属性的定义中，有很多地方都用到了 null!，如下图所示： 这是什么用法呢？之前没有在项目中用过，所以得空就研究了一下。 以前，! 运算符用来表示 “否”，比如不等于 !=        <a href="https://www.cnblogs.com/ittranslator/p/14260348.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-01-12 12:06
技术译民
<span data-post-id="14260348" class="post-view-count">阅读(2258)</span> 
<span data-post-id="14260348" class="post-comment-count">评论(13)</span> 
<span data-post-id="14260348" class="post-digg-count">推荐(12)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14260348" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2020/11/12.html">2020年11月12日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/13961608.html">
    <span>
            <span>[置顶]</span>
        C# 9.0 正式发布了（C# 9.0 on the record）
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：正式宣布：C# 9.0 发布了！ 要学习C# 9.0，看这篇就对了。对于 C# 的每一个新版本，我们都在努力让常见编码场景的实现变得更加清晰和简单，C# 9.0 也不例外。这次特别关注的是支持数据模型的简洁和不可变表示。翻译自 Mads Torgersen 2020年11月10日的博文《C# 9.0 on the record》，Mads Torgersen 是微软 C# 语言的首席设计师，也是微软 .NET 团队的项目群经理。        <a href="https://www.cnblogs.com/ittranslator/p/13961608.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-11-12 09:08
技术译民
<span data-post-id="13961608" class="post-view-count">阅读(4451)</span> 
<span data-post-id="13961608" class="post-comment-count">评论(12)</span> 
<span data-post-id="13961608" class="post-digg-count">推荐(35)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13961608" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2021/05/06.html">2021年5月6日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/what-are-dotnet-worker-services.html">
    <span>
        .NET 中的 Worker Service 入门介绍
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：翻译自 Steve Gordon 2020年3月30日的文章 《WHAT ARE .NET WORKER SERVICES?》 1 随着 .NET Core 3.0 的发布，ASP.NET 团队引入了一个新的 Worker Service 项目模板，该模板作为 .NET SDK 的一部分发布。在本文        <a href="https://www.cnblogs.com/ittranslator/p/what-are-dotnet-worker-services.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-05-06 13:25
技术译民
<span data-post-id="14733589" class="post-view-count">阅读(422)</span> 
<span data-post-id="14733589" class="post-comment-count">评论(0)</span> 
<span data-post-id="14733589" class="post-digg-count">推荐(3)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14733589" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2021/04/26.html">2021年4月26日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/asp-net-core-service-lifetimes-infographic.html">
    <span>
        一图看懂 ASP.NET Core 中的服务生命周期
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：翻译自 Waqas Anwar 2020年11月8日的文章 《ASP.NET Core Service Lifetimes (Infographic)》 1 ASP.NET Core 支持依赖关系注入（DI）软件设计模式，该模式允许我们注册服务、控制如何实例化这些服务并将其注入到不同的组件中。一些服        <a href="https://www.cnblogs.com/ittranslator/p/asp-net-core-service-lifetimes-infographic.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-26 11:38
技术译民
<span data-post-id="14701689" class="post-view-count">阅读(523)</span> 
<span data-post-id="14701689" class="post-comment-count">评论(2)</span> 
<span data-post-id="14701689" class="post-digg-count">推荐(2)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14701689" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2021/04/19.html">2021年4月19日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/net-5-console-app-with-dependency-injection-serilog-logging-and-appsettings.html">
    <span>
        创建支持依赖注入、Serilog 日志和 AppSettings 的 .NET 5 控制台应用
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：翻译自 Mohamad Lawand 2021年3月24日的文章 《.NET 5 Console App with Dependency Injection, Serilog Logging, and AppSettings》 1 在本文中，我们将构建一个 .NET 5 控制台应用程序，该应用程序支        <a href="https://www.cnblogs.com/ittranslator/p/net-5-console-app-with-dependency-injection-serilog-logging-and-appsettings.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-19 12:27
技术译民
<span data-post-id="14675101" class="post-view-count">阅读(308)</span> 
<span data-post-id="14675101" class="post-comment-count">评论(0)</span> 
<span data-post-id="14675101" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14675101" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2021/04/13.html">2021年4月13日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/refresh-jwt-with-refresh-tokens-in-asp-net-core-5-rest-api-step-by-step.html">
    <span>
        Asp.Net Core 5 REST API 使用 RefreshToken 刷新 JWT - Step by Step
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：翻译自 Mohamad Lawand 2021年1月25日的文章 《Refresh JWT with Refresh Tokens in Asp.Net Core 5 Rest API Step by Step》 1 在本文中，我将向您演示如何在 Asp.Net Core REST API 中将 R        <a href="https://www.cnblogs.com/ittranslator/p/refresh-jwt-with-refresh-tokens-in-asp-net-core-5-rest-api-step-by-step.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-13 11:52
技术译民
<span data-post-id="14646247" class="post-view-count">阅读(2393)</span> 
<span data-post-id="14646247" class="post-comment-count">评论(33)</span> 
<span data-post-id="14646247" class="post-digg-count">推荐(20)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14646247" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2021/04/12.html">2021年4月12日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/asp-net-core-5-rest-api-authentication-with-jwt-step-by-step.html">
    <span>
        Asp.Net Core 5 REST API 使用 JWT 身份验证 - Step by Step
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：翻译自 Mohamad Lawand 2021年1月22日的文章 《Asp Net Core 5 Rest API Authentication with JWT Step by Step》 1 在本文中，我将向您展示如何向我们的 Asp.Net Core REST API 添加 JWT 身份验证。        <a href="https://www.cnblogs.com/ittranslator/p/asp-net-core-5-rest-api-authentication-with-jwt-step-by-step.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-12 12:10
技术译民
<span data-post-id="14630400" class="post-view-count">阅读(996)</span> 
<span data-post-id="14630400" class="post-comment-count">评论(1)</span> 
<span data-post-id="14630400" class="post-digg-count">推荐(7)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14630400" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2021/04/08.html">2021年4月8日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/asp-net-core-5-rest-api-step-by-step.html">
    <span>
        Asp.Net Core 5 REST API - Step by Step
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：翻译自 Mohamad Lawand 2021年1月19日的文章 《Asp.Net Core 5 Rest API Step by Step》 1 在本文中，我们将创建一个简单的 Asp.Net Core REST API Todo 应用程序，在其中我们可以添加、编辑、删除和查看待办事项，并且将使用        <a href="https://www.cnblogs.com/ittranslator/p/asp-net-core-5-rest-api-step-by-step.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-08 13:15
技术译民
<span data-post-id="14619135" class="post-view-count">阅读(991)</span> 
<span data-post-id="14619135" class="post-comment-count">评论(0)</span> 
<span data-post-id="14619135" class="post-digg-count">推荐(4)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14619135" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2021/03/30.html">2021年3月30日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/14595165.html">
    <span>
        JWT 介绍 - Step by Step
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：翻译自 Mohamad Lawand 2021年3月11日的文章 《Intro to JWT - Step by Step》 1 在本文中，我将向您介绍 JWT2。 我们今天要讲的内容包含： JWT 是什么 我们应该在什么时候使用它 JWT 与 Session Id 比较 JWT 结构 JWT 签名        <a href="https://www.cnblogs.com/ittranslator/p/14595165.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-03-30 12:24
技术译民
<span data-post-id="14595165" class="post-view-count">阅读(246)</span> 
<span data-post-id="14595165" class="post-comment-count">评论(0)</span> 
<span data-post-id="14595165" class="post-digg-count">推荐(2)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14595165" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2021/03/25.html">2021年3月25日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/14575773.html">
    <span>
        在 .NET Core 5 中集成 Create React app
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：翻译自 Camilo Reyes 2021年2月22日的文章 《Integrate Create React app with .NET Core 5》 1 Camilo Reyes 演示了如何将 Create React app 与 .NET Core 集成，以生成一个移除了几个依赖项的脚手架。         <a href="https://www.cnblogs.com/ittranslator/p/14575773.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-03-25 18:39
技术译民
<span data-post-id="14575773" class="post-view-count">阅读(311)</span> 
<span data-post-id="14575773" class="post-comment-count">评论(0)</span> 
<span data-post-id="14575773" class="post-digg-count">推荐(3)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14575773" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2021/03/15.html">2021年3月15日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/14530994.html">
    <span>
        在 .NET Core 中构建 REST API
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：翻译自 Camilo Reyes 2020年8月26日的文章 《Build a REST API in .NET Core》 1 REST API 可以使用简单的动词（如 POST、PUT、PATCH 等）将大型解决方案背后的复杂性隐藏起来。在本文中，Camilo Reyes 解释了如何在 .NET        <a href="https://www.cnblogs.com/ittranslator/p/14530994.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-03-15 14:09
技术译民
<span data-post-id="14530994" class="post-view-count">阅读(473)</span> 
<span data-post-id="14530994" class="post-comment-count">评论(0)</span> 
<span data-post-id="14530994" class="post-digg-count">推荐(4)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14530994" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2021/01/21.html">2021年1月21日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/14300852.html">
    <span>
        C# 中的动态类型
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：翻译自 Camilo Reyes 2018年10月15日的文章 《Working with the Dynamic Type in C#》 1 .NET 4 中引入了动态类型。动态对象使您可以处理诸如 JSON 文档之类的结构，这些结构的组成可能要到运行时才能知道。在本文中，Camilo Reyes        <a href="https://www.cnblogs.com/ittranslator/p/14300852.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-01-21 14:01
技术译民
<span data-post-id="14300852" class="post-view-count">阅读(710)</span> 
<span data-post-id="14300852" class="post-comment-count">评论(3)</span> 
<span data-post-id="14300852" class="post-digg-count">推荐(10)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14300852" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2021/01/12.html">2021年1月12日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/14260348.html">
    <span>
        C# 中的 null 包容运算符 “!” —— 概念、由来、用法和注意事项
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：在 2020 年的最后一天，博客园发起了一个开源项目：基于 .NET 的博客引擎 fluss，我抽空把源码下载下来看了下，发现在属性的定义中，有很多地方都用到了 null!，如下图所示： 这是什么用法呢？之前没有在项目中用过，所以得空就研究了一下。 以前，! 运算符用来表示 “否”，比如不等于 !=        <a href="https://www.cnblogs.com/ittranslator/p/14260348.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-01-12 12:06
技术译民
<span data-post-id="14260348" class="post-view-count">阅读(2258)</span> 
<span data-post-id="14260348" class="post-comment-count">评论(13)</span> 
<span data-post-id="14260348" class="post-digg-count">推荐(12)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14260348" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2021/01/06.html">2021年1月6日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/14233346.html">
    <span>
        如何禁用控制台窗口的关闭按钮？
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：这是一段古老的代码，也是我以前经常用到的代码。虽然现在和以后基本上都不会再用到它了，但是在特定的场景中，它很好用。 使用场景 有时候，我们需要编写一个具有一定处理逻辑的控制台程序，这比编写 Windows 服务要简单一些。但是，我们要防止不小心点击到控制台窗口右上角的关闭按钮而导致程序非正常退出。于        <a href="https://www.cnblogs.com/ittranslator/p/14233346.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-01-06 12:05
技术译民
<span data-post-id="14233346" class="post-view-count">阅读(655)</span> 
<span data-post-id="14233346" class="post-comment-count">评论(0)</span> 
<span data-post-id="14233346" class="post-digg-count">推荐(5)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14233346" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2020/12/31.html">2020年12月31日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/14214317.html">
    <span>
        Windows Terminal 新手入门
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：翻译自 Kayla Cinnamon 2020年12月17日的文章《Getting Started with Windows Terminal》 1 安装 Windows Terminal（Windows 终端）有两个不同的版本：Windows Terminal2 和 Windows Termina        <a href="https://www.cnblogs.com/ittranslator/p/14214317.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-12-31 12:10
技术译民
<span data-post-id="14214317" class="post-view-count">阅读(763)</span> 
<span data-post-id="14214317" class="post-comment-count">评论(0)</span> 
<span data-post-id="14214317" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14214317" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2020/12/29.html">2020年12月29日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/14198925.html">
    <span>
        在 WSL Ubuntu 上使用 .NET 进行跨平台开发新手入门
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：.NET 是一个开源软件框架，用于在 Linux、Windows 和 macOS 上构建跨平台应用程序。WSL 上的 Ubuntu 允许您同时为 Ubuntu 和 Windows 构建和测试应用程序。这篇博客将演示如何在 WSL 上安装 .NET 开发栈，并构建一个简单的操作系统感知应用，然后在 Linux 和 Windows 上测试它。        <a href="https://www.cnblogs.com/ittranslator/p/14198925.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-12-29 12:11
技术译民
<span data-post-id="14198925" class="post-view-count">阅读(512)</span> 
<span data-post-id="14198925" class="post-comment-count">评论(2)</span> 
<span data-post-id="14198925" class="post-digg-count">推荐(3)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14198925" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2020/12/22.html">2020年12月22日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/14161651.html">
    <span>
        C# 中 ConcurrentDictionary 一定线程安全吗？
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：根据 .NET 官方文档的定义：ConcurrentDictionary&amp;lt;TKey,TValue&amp;gt; Class 表示可由多个线程同时访问的线程安全的键/值对集合。这也是我们在并发任务中比较常用的一个类型，但它真的是绝对线程安全的吗？ 仔细阅读官方文档，我们会发现在文档的底部线程安全性小节里这样描述：        <a href="https://www.cnblogs.com/ittranslator/p/14161651.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-12-22 12:01
技术译民
<span data-post-id="14161651" class="post-view-count">阅读(2681)</span> 
<span data-post-id="14161651" class="post-comment-count">评论(23)</span> 
<span data-post-id="14161651" class="post-digg-count">推荐(31)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14161651" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2020/12/15.html">2020年12月15日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/14128570.html">
    <span>
        如何在 Windows 10 上安装 WSL 2
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：如果您想在最新的 Windows 版本中尝试经过改进的 Windows 子系统 Linux 2 (即 WSL 2)，要怎么做呢？我们在本文中介绍了安装它所需要做的所有事情。WSL 2 是微软早在 2017 年推出的 WSL 的原始版本的重大升级。WSL 2 不仅仅是版本的升级。它更快、更通用，并且使用真正的 Linux 内核。未来的 Linux 内核更新甚至会以 Windows 10 软件更新的形式发布——想想看，这有点疯狂!        <a href="https://www.cnblogs.com/ittranslator/p/14128570.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-12-15 12:27
技术译民
<span data-post-id="14128570" class="post-view-count">阅读(4791)</span> 
<span data-post-id="14128570" class="post-comment-count">评论(0)</span> 
<span data-post-id="14128570" class="post-digg-count">推荐(2)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14128570" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2020/12/09.html">2020年12月9日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/14106594.html">
    <span>
        连接数从异常到 300 到 5（RDS MySQL 的一个大坑•后记）
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：在《记 RDS MySQL 的一个大坑》中，我提到遇到超出 max_user_connections 的异常，真正的原因在于：使用 MySQL 官方提供的 MySql.Data 作为驱动程序连接 MySQL 数据库的时候，默认使用了连接池，才引发了这个问题。        <a href="https://www.cnblogs.com/ittranslator/p/14106594.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-12-09 09:42
技术译民
<span data-post-id="14106594" class="post-view-count">阅读(590)</span> 
<span data-post-id="14106594" class="post-comment-count">评论(12)</span> 
<span data-post-id="14106594" class="post-digg-count">推荐(2)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14106594" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2020/12/08.html">2020年12月8日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/14094449.html">
    <span>
        连接数从异常到 300 到 5（记 RDS MySQL 的一个大坑）
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：花了一个下午的时间，终于把一个 RDS MySQL 的一个大坑填上了，解决方法令人匪夷所思，绝对会让各位看官感到大吃一惊！ 问题 最近应业务的需求，加了一个定时统计的任务，其中的算法很简单，只是需要大量的 CRUD 操作。 由于业务简单，且时效性要求不高，所以代码写起来若行云流水，一气呵成，本地测试        <a href="https://www.cnblogs.com/ittranslator/p/14094449.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-12-08 09:41
技术译民
<span data-post-id="14094449" class="post-view-count">阅读(1521)</span> 
<span data-post-id="14094449" class="post-comment-count">评论(16)</span> 
<span data-post-id="14094449" class="post-digg-count">推荐(5)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14094449" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2020/12/04.html">2020年12月4日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/14076241.html">
    <span>
        Docker 与 Podman 容器管理的比较
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：翻译自 Paul Ferrill 2020年9月1日的文章《Compare Docker vs. Podman for container management》 1 Docker 和 Podman 在管理容器方面提供了类似的功能，但是 Docker 的安全漏洞可能使 Podman 对于某些管理员来        <a href="https://www.cnblogs.com/ittranslator/p/14076241.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-12-04 12:22
技术译民
<span data-post-id="14076241" class="post-view-count">阅读(2219)</span> 
<span data-post-id="14076241" class="post-comment-count">评论(1)</span> 
<span data-post-id="14076241" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14076241" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/ittranslator/archive/2020/11/30.html">2020年11月30日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/ittranslator/p/14057822.html">
    <span>
        Docker Vs Podman
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：翻译自 Chetansingh 2020年4月24日的博文《Docker Vs Podman》 1 容器化的一场全新革命是从 Docker 开始的，Docker 的守护进程管理着所有的事情，并成为最受欢迎和广泛使用的容器管理系统之一。 但是，请稍等！您真的会假设 Docker 是唯一有效的容器化方式        <a href="https://www.cnblogs.com/ittranslator/p/14057822.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-11-30 12:07
技术译民
<span data-post-id="14057822" class="post-view-count">阅读(3286)</span> 
<span data-post-id="14057822" class="post-comment-count">评论(2)</span> 
<span data-post-id="14057822" class="post-digg-count">推荐(4)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14057822" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        
    <a href="https://www.cnblogs.com/ittranslator/default.html?page=2">
        下一页
    </a>

    </div>    
</div>






<script>
    updatePostStats(
        $(".post-view-count").map(function () { return this.dataset.postId }).get(),
        function(id, count) { $(".post-view-count[data-post-id=" + id + "]").text("阅读(" + count + ")") },
        function(id, count) { $(".post-comment-count[data-post-id=" + id + "]").text("评论(" + count + ")") },
        function(id, count) { $(".post-digg-count[data-post-id=" + id + "]").text("推荐(" + count + ")") });
</script>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2021 技术译民
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAjs65zGalKHHaS_ghTQ1-QLNs2pbeWrs7GfEvN5fYiBdxp1t8HpMclPAWnichjAbiDb_KftMNeWWSf1VvA2M1818oouyn9nRqi-lnwNE8ErEMIhEdo0_xiYScYnKH6q_4qw" />
</body>
</html>
