<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-crossorigin" />
    <meta name="description" content="xxl-job一个分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。现已开放源代码并接入多家公司线上产品线，开箱即用。" />
    <meta property="og:description" content="xxl-job一个分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。现已开放源代码并接入多家公司线上产品线，开箱即用。" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>分布式任务调度系统：xxl-job - 狂盗一枝梅 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=zS6-e1bxywlu3kpHvpr1J6MySwya3ztFtEnS7RYQ0Fk" />
    <link id="MainCss" rel="stylesheet" href="/skins/bluesky/bundle-bluesky.min.css?v=crS-BJKdvIW2vVfJGJMix4EoW6XR-Z12_psc8V6YTNc" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/kuangdaoyizhimei/custom.css?v=tRPNC0STV2420eKosFf5BNi2g6U=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/bluesky/bundle-bluesky-mobile.min.css?v=R6fv62IpzGSvTM7pHsnRgkrk1El3gMSYm75Iwe80srs" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/kuangdaoyizhimei/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/kuangdaoyizhimei/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/kuangdaoyizhimei/wlwmanifest.xml" />
    <script>
        var currentBlogId = 147792;
        var currentBlogApp = 'kuangdaoyizhimei';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'BlueSky';
        var visitorUserId = '';
    </script>
        <script>
            var currentPostDateAdded = '2021-04-21 03:02';
        </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=yJQaJ16S00coMfzvh-NgF2zm2J87f5VfNamFdsnKHrc"></script>
    
    
    
</head>
<body class="no-navbar">
    <a name="top"></a>
    <div id="top_nav" class="navbar forpc navbar-custom">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    <div id="page_begin_html">
        <!-- ............自定义首部代码开始............ -->
<!-- 自定义进度条 -->
<div id="myProgressBar" style="display: none;"></div>

<!-- 自定义导航条 -->
<div id="mynavbar" style="margin-top: 0px;">
    <div style="position:relative;width:65pc;height:70px;margin:0 auto;">
    	<a style="width: auto;height: 22px;margin-left: 25px;" class="c-c"  href="https://www.cnblogs.com/kuangdaoyizhimei">
<img id="nv-icon" style="width: auto;height: 38px;outline: 0;margin-top: 12px;">

    	</a>
    	<div id="mynavbar_menu">
	    	<a href="https://www.cnblogs.com/summertime-wu" class="c-c">首页</a>
	    	<a href="https://msg.cnblogs.com/send/summertime-wu" class="c-c">联系</a>
	    	<a id="myGayhubUrl" href="https://github.com/Summertime-Wu" class="c-c">Github</a>
	    	<a id="friendLink" href="#">友情链接</a>
	    	<a href="https://www.cnblogs.com/">博客园</a>
            <a href="https://i.cnblogs.com/posts">管理</a>
	    	<a id="aboutMe" href="#">关于</a>
	    </div>
    </div>
</div>

<!-- 自定义头部锚点 -->
<a name="mtop"></a>

<!-- 自定义头部 -->
<div id="myheader">
	<!-- 背景图片 -->
    <div id="myheader_bg"></div>
    <!-- 遮罩层 -->
    <div id="myheader_cover" title="点我点我">
        <!-- 博客标题 -->
        <div id="mypost_title">
            <div id="mypost_title_h" style="font-weight: 500;font-size: 21px;"></div>
            <div id="mypost_title_f"></div>
            <div id="mypost_title_e">
                <a href="https://www.cnblogs.com/" class="c-c" style="">暂未分类</a>
            </div> 
        </div>  
    </div>
</div>
<!-- ............自定义首部代码结束............ -->
    </div>
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/kuangdaoyizhimei/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/kuangdaoyizhimei/">狂盗一枝梅</a>
</h1>
<h2></h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/kuangdaoyizhimei/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E7%8B%82%E7%9B%97%E4%B8%80%E6%9E%9D%E6%A2%85">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/kuangdaoyizhimei/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/kuangdaoyizhimei/p/14685276.html">
    <span>分布式任务调度系统：xxl-job</span>
    



</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        xxl-job一个分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。现已开放源代码并接入多家公司线上产品线，开箱即用。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>任务调度，通俗来说实际上就是“定时任务”，分布式任务调度系统，翻译一下就是“分布式环境下定时任务系统”。</p>
<p>xxl-job一个分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。现已开放源代码并接入多家公司线上产品线，开箱即用。</p>
<p>gitee地址：<a href="https://gitee.com/xuxueli0323/xxl-job" target="_blank">https://gitee.com/xuxueli0323/xxl-job</a></p>
<p>中文文档地址：<a href="https://www.xuxueli.com/xxl-job/" target="_blank">https://www.xuxueli.com/xxl-job/</a></p>
<p>文档就已经说得足够详细，接下来就我的使用体验上来说说使用方法和出现的问题（本篇文章基于2.2.0版本讲解，2.2.0和最新的2.3.0版本使用上有些差异，可以参考源代码中的example项目进行修改）。</p>
<h2 id="一、为何选用xxl-job">一、为何选用xxl-job</h2>
<p>需求：服务有两个实例，要求做一个定时任务，每隔一个小时更新一批数据。听起来挺简单的一个需求，但是要考虑的事情挺多</p>
<ul>
<li>如何保证两个服务同时间只有一个实例在运行跑批程序</li>
<li>如果程序一个小时未执行完任务，那到了下一次跑批的时间，改如何处理下一次跑批请求</li>
<li>每次跑批是否需要随机选择一个实例运行跑批程序</li>
<li>如果任务失败了，该如何处理</li>
<li>......</li>
</ul>
<p>如果我们自己来做这个事情，可能需要redis或者数据库锁以保证同时间只有一个实例运行跑批程序；同时，如果锁未释放，表示跑批程序未执行完毕，如果这时候又来了一个跑批请求，可以选择丢弃掉，也可以选择将其放入跑批队列，这时候可能需要一个消息队列，可以选择数据库或者redis作为存储；如果没有服务端协调处理跑批，那么每次跑批如何选择实例做跑批任务是比较困难的；如果跑批失败，可以选择重试或者不重试直接发送失败邮件通知，或者两者兼而有之。</p>
<p>上述解决方案是比较常用的第一时间能想到的解决方案，可以看到还是要做挺多开发任务的。现在有了xxl-job，这些工作都被它做掉了，使用者只需要关心跑批的业务逻辑即可。</p>
<h2 id="二、运行xxl-job-admin">二、运行xxl-job-admin</h2>
<p>在当前时间2021-04-21时间点上，最新版本的xxl-job版本号是2.3.0，而公司使用的版本是2.2.0，所以这里我使用2.2.0为例进行说明。</p>
<p>首先下载完xxl-job的源代码，可以看到该项目是maven项目</p>
<pre><code class="language-text">├── doc
│&nbsp;&nbsp; ├── db
│&nbsp;&nbsp; ├── images
│&nbsp;&nbsp; ├── XXL-JOB官方文档.md
│&nbsp;&nbsp; ├── XXL-JOB架构图.pptx
│&nbsp;&nbsp; └── XXL-JOB-English-Documentation.md
├── LICENSE
├── NOTICE
├── pom.xml
├── README.md
├── xxl-job-admin
│&nbsp;&nbsp; ├── Dockerfile
│&nbsp;&nbsp; ├── Dockerfile1
│&nbsp;&nbsp; ├── pom.xml
│&nbsp;&nbsp; ├── src
│&nbsp;&nbsp; └── target
├── xxl-job-core
│&nbsp;&nbsp; ├── pom.xml
│&nbsp;&nbsp; ├── src
│&nbsp;&nbsp; └── target
└── xxl-job-executor-samples
    ├── pom.xml
    ├── xxl-job-executor-sample-frameless
    ├── xxl-job-executor-sample-jboot
    ├── xxl-job-executor-sample-jfinal
    ├── xxl-job-executor-sample-nutz
    ├── xxl-job-executor-sample-spring
    └── xxl-job-executor-sample-springboot
</code></pre>
<p>包含着三个模块</p>
<ul>
<li>xxl-job-admin：xxl-job服务端</li>
<li>xxl-job-core：xxl-job客户端依赖</li>
<li>xxl-job-executor-samples：提供了一些使用样例</li>
</ul>
<p>xxl-job-admin的安装很简单，推荐使用docker安装的方式</p>
<h3 id="0运行数据库脚本">0.运行数据库脚本</h3>
<p>xxl-job-admin运行依赖于数据库，先运行xxl-job/xxl-job/doc/db/tables_xxl_job.sql脚本，这个脚本创建了xxl_job数据库以及一些表，这是xxl-job-admin运行的基础。</p>
<h3 id="1下载docker镜像并运行">1.下载docker镜像并运行</h3>
<p><a href="https://www.xuxueli.com/xxl-job/#%E5%85%B6%E4%BB%96%EF%BC%9ADocker%20%E9%95%9C%E5%83%8F%E6%96%B9%E5%BC%8F%E6%90%AD%E5%BB%BA%E8%B0%83%E5%BA%A6%E4%B8%AD%E5%BF%83%EF%BC%9A" target="_blank">https://www.xuxueli.com/xxl-job/#其他：Docker 镜像方式搭建调度中心：</a></p>
<p>下载镜像</p>
<pre><code class="language-bash">docker pull xuxueli/xxl-job-admin:2.2.0
</code></pre>
<p>创建容器并运行</p>
<pre><code class="language-bash">docker run -p 8080:8080 -v /tmp:/data/applogs --name xxl-job-admin  -d xuxueli/xxl-job-admin:{指定版本}
/**
* 如需自定义 mysql 等配置，可通过 "-e PARAMS" 指定，参数格式 PARAMS="--key=value  --key2=value2" ；
* 配置项参考文件：/xxl-job/xxl-job-admin/src/main/resources/application.properties
* 如需自定义 JVM内存参数 等配置，可通过 "-e JAVA_OPTS" 指定，参数格式 JAVA_OPTS="-Xmx512m" ；
*/
docker run -e PARAMS="--spring.datasource.url=jdbc:mysql://127.0.0.1:3306/xxl_job?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;serverTimezone=Asia/Shanghai" -p 8080:8080 -v /tmp:/data/applogs --name xxl-job-admin  -d xuxueli/xxl-job-admin:2.2.0
</code></pre>
<h3 id="2自己打包docker镜像">2.自己打包docker镜像</h3>
<p>下载完xxl-job-admin源代码后，切换到2.2.0 的tag</p>
<pre><code class="language-bash">git checkout 2.2.0
</code></pre>
<p>然后切换到xxl-job-admin根目录，执行打包命令</p>
<pre><code class="language-bash">mvn clean package
</code></pre>
<p>修改xxl-job-admin目录下的Dockerfile文件，添加PARAMS参数</p>
<pre><code class="language-dockerfile">ENV PARAMS="--spring.datasource.url=jdbc:mysql://127.0.0.1:3306/xxl_job?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;serverTimezone=Asia/Shanghai --spring.datasource.username=root --spring.datasource.password=passwod"
</code></pre>
<p>在Dockerfile所在目录执行以下打镜像命令</p>
<pre><code class="language-bash">docker build . -t xxl-job-admin:v1
</code></pre>
<p>这样就打包好了镜像，创建容器的命令也很简单</p>
<pre><code class="language-bash">docker run -p 8080:8080 -v /tmp:/data/applogs --name xxl-job-admin  -d xxl-job-admin:v1
</code></pre>
<p>运行成功后，浏览器输入<a href="http://127.0.0.1:8080/xxl-job-admin/" target="_blank">http://127.0.0.1:8080/xxl-job-admin/</a> 链接，进入登录页，使用admin/123456账号密码即可登录成功。</p>
<h2 id="三、xxl-job的基本概念">三、xxl-job的基本概念</h2>
<p>运行xxl-job之后，打开 <a href="http://127.0.0.1:8080/xxl-job-admin/" target="_blank">http://127.0.0.1:8080/xxl-job-admin/</a> 链接，可以进入登录页，输入admin/123456登录成功后看到以下页面</p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202104/516671-20210421145945413-386135041.png;%20charset=UTF-8" alt="image-20210421131207154" loading="lazy"></p>
<h3 id="1用户管理">1.用户管理</h3>
<p>可以创建修改、删除用户并且可以授权可以管理哪些执行器</p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202104/516671-20210421145945806-706332783.png;%20charset=UTF-8" alt="image-20210421131441301" loading="lazy"></p>
<h3 id="2执行器管理">2.执行器管理</h3>
<p>所谓的执行器，就是客户端，任务调度要执行器也就是客户端去执行具体的任务，执行器可以通过自动注册和手动注册两种方式注册到xxl-job-admin</p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202104/516671-20210421145946137-1917332895.png;%20charset=UTF-8" alt="image-20210421131722181" loading="lazy"></p>
<h3 id="3任务管理">3.任务管理</h3>
<p><img src="https://img2020.cnblogs.com/blog/516671/202104/516671-20210421145946318-1987528650.png;%20charset=UTF-8" alt="image-20210421132000824" loading="lazy"></p>
<p>任务管理页面管理着所有调度任务，每个任务都属于某个执行器，在这里可以对任务进行CRUD操作，接下来单独说下新建任务页面</p>
<h2 id="四、新建任务">四、新建任务</h2>
<p><img src="https://img2020.cnblogs.com/blog/516671/202104/516671-20210421145946505-876131301.png;%20charset=UTF-8" alt="image-20210421132229359" loading="lazy"></p>
<p>在任务管理页面点击新建会跳出该页面。</p>
<h3 id="1执行器">1.执行器</h3>
<p>该任务属于哪个执行器，在新建任务前就要存在。</p>
<h3 id="2任务描述">2.任务描述</h3>
<p>略</p>
<h3 id="3路由策略">3.路由策略</h3>
<p><img src="https://img2020.cnblogs.com/blog/516671/202104/516671-20210421145946704-1630253715.png;%20charset=UTF-8" alt="image-20210421132520515" loading="lazy"></p>
<p>路由策略有很多，最经常使用的是第一个、轮询、随机策略</p>
<h3 id="4阻塞处理策略">4.阻塞处理策略</h3>
<p><img src="https://img2020.cnblogs.com/blog/516671/202104/516671-20210421145946867-1841794061.png;%20charset=UTF-8" alt="image-20210421132636090" loading="lazy"></p>
<p>单击串行表示队列阻塞，前一个未完成则先放到队列中；丢弃后续调度表示前一个任务未完成，如果新的调度任务又开启了，则丢弃新的任务调度。</p>
<p>我最经常使用的是丢弃后续调度这个阻塞处理策略，一般跑批都没有严格的实时性要求，多一次少一次都无妨。</p>
<h3 id="5cron">5.Cron</h3>
<p>参考linux下crontab的写法。</p>
<h3 id="6jobhandler">6.JobHandler</h3>
<p>执行器执行的handler，需要和java客户端的jobName保持一致。</p>
<h3 id="7运行模式">7.运行模式</h3>
<p>这里有很多中运行模式，但是最经常使用的是BEAN模式，这种模式下可以指定JobHandler，其它模式下均不可以。</p>
<h2 id="五、实战">五、实战</h2>
<p>需求：每隔一个小时执行一次任务，更新所有用户的信息</p>
<h3 id="1创建执行器">1.创建执行器</h3>
<p>执行器也就是客户端，这里假设有个服务update-server作为执行器</p>
<p>则appName使用update-server，名称则使用更新服务，注册方式使用自动注册</p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202104/516671-20210421145947036-422108911.png;%20charset=UTF-8" alt="image-20210421135803159" loading="lazy"></p>
<h3 id="2新建任务">2.新建任务</h3>
<p>Cron，每个小时的零分零秒执行任务：0 0 * * * ?</p>
<p>运行模式：BEAN</p>
<p>JobHandler：UpdateUserHandler</p>
<p>阻塞处理策略：丢弃后续调度</p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202104/516671-20210421145947227-1731183920.png;%20charset=UTF-8" alt="image-20210421141706263" loading="lazy"></p>
<h3 id="3客户端配置">3.客户端配置</h3>
<p>也就是执行器的配置了</p>
<p>客户端一般是java客户端，如何使用呢，在 源代码中有个sample模块，可以参考里面的使用方法，比如我在springboot中的使用，就可以参考xxl-job-executor-sample-springboot 模块。</p>
<p><strong>3.1 配置文件配置xxl-job-admin</strong></p>
<p>配置文件格式如下：</p>
<pre><code class="language-yaml">xxl:
  job:
    admin:
      addresses: http://127.0.0.1:8080/xxl-job-admin
    accessToken:
    executor:
      appname: update-server
      logpath: ./logs
      logretentiondays: 30
</code></pre>
<p>如何读取配置文件可以参考我的另外一篇文章：<a href="https://blog.kdyzm.cn/post/64" target="_blank">SpringBoot自定义配置以及IDEA配置提示</a></p>
<p><strong>3.2添加maven依赖</strong></p>
<pre><code class="language-xml">        &lt;dependency&gt;
            &lt;groupId&gt;com.xuxueli&lt;/groupId&gt;
            &lt;artifactId&gt;xxl-job-core&lt;/artifactId&gt;
			&lt;version&gt;2.2.0&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
            &lt;artifactId&gt;spring-cloud-commons&lt;/artifactId&gt;
            &lt;version&gt;2.1.2.RELEASE&lt;/version&gt;
        &lt;/dependency&gt;
</code></pre>
<p><strong>3.3创建XxlJobSpringExecutor单例对象</strong></p>
<pre><code class="language-java">@Configuration
@Slf4j
@AllArgsConstructor
public class XxlJobConfiguration {

    private InetUtils inetUtils;

    private Environment environment;

    private static final String PROFILE_DEV = "dev";

    @Bean
    public XxlJobSpringExecutor myXxlJobExecutor(XxlJobProperty xxlJobProperty) {
        log.info("&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job config init.");
        XxlJobSpringExecutor xxlJobSpringExecutor = new XxlJobSpringExecutor();
        xxlJobSpringExecutor.setAdminAddresses(xxlJobProperty.getAdmin().getAddresses());
        xxlJobSpringExecutor.setAppname(xxlJobProperty.getExecutor().getAppname());
        xxlJobSpringExecutor.setAccessToken(xxlJobProperty.getAccessToken());
        xxlJobSpringExecutor.setLogPath(xxlJobProperty.getExecutor().getLogpath());
        xxlJobSpringExecutor.setLogRetentionDays(xxlJobProperty.getExecutor().getLogretentiondays());
        if(isDevEnv()){
            String ipAddress = inetUtils.findFirstNonLoopbackHostInfo().getIpAddress();
            xxlJobSpringExecutor.setIp(ipAddress);
            if(Objects.nonNull(xxlJobProperty.getExecutor().getPort())){
                xxlJobSpringExecutor.setPort(xxlJobProperty.getExecutor().getPort());
            }else{
                xxlJobSpringExecutor.setPort(9999);
            }
        }
        return xxlJobSpringExecutor;
    }

    private boolean isDevEnv() {
        String[] activeProfiles = environment.getActiveProfiles();
        return Arrays.asList(activeProfiles).contains(PROFILE_DEV);
    }
}
</code></pre>
<p><strong>3.4 创建任务</strong></p>
<p>这里的XxlJob注解中的value值要和xxl-job-admin中创建的Job名字保持一致</p>
<pre><code class="language-java">@Component
@Slf4j
public class CronTest {
    @XxlJob("UpdateUserHandler")
    public ReturnT&lt;String&gt; test(String param) throws Exception {
        log.info("Hlelo,world");
        XxlJobLogger.log("跑批结束，本次跑批共新增10条数据");
        return ReturnT.SUCCESS;
    }
}
</code></pre>
<h3 id="4测试">4.测试</h3>
<p>完成上述操作之后启动服务，如果没有报错信息，则到xxl-job-admin查看执行器注册情况</p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202104/516671-20210421145947417-126060698.png;%20charset=UTF-8" alt="image-20210421142642349" loading="lazy"></p>
<p>可以看到已经注册成功</p>
<p>在任务管理中执行一次任务调度</p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202104/516671-20210421145947624-123178576.png;%20charset=UTF-8" alt="image-20210421142735604" loading="lazy"></p>
<p>在客户端可以看到执行日志</p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202104/516671-20210421145947834-1261938982.png;%20charset=UTF-8" alt="image-20210421143425195" loading="lazy"></p>
<p>同时，在xxl-job-admin端也能看到执行结果日志</p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202104/516671-20210421145948015-507063915.png;%20charset=UTF-8" alt="image-20210421143529444" loading="lazy"></p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202104/516671-20210421145948192-1781048703.png;%20charset=UTF-8" alt="image-20210421143546400" loading="lazy"></p>
<h2 id="六、xxl-job的不足之处">六、xxl-job的不足之处</h2>
<p>xxl-job在客户端会单独开一个接口给xxl-job-admin使用，默认是9999端口号，如果9999端口号被占用，端口号会依次+1重试。我认为这里单独开一个端口号是完全没有必要的，浪费执行器资源先不谈，开两个端口号感觉就挺扯，像是swagger ui集成到spring-boot程序中也没有单独开一个端口号啊。。</p>
<p>最重要的是多开一个端口号没问题，问题是这个端口号都是9999，这里假设几个场景，看看怎么做</p>
<ol>
<li>所有服务都使用了xxl-job，部署在同一个ECS机器上。每个服务都想占用默认的9999端口号，第一个占用成功了，第二个端口号10000，第三个依次增加1。。。。在这个场景下没问题，每个java程序共享ECS资源，可以探知端口号占用情况，无端口号冲突。</li>
<li>所有服务都使用了xxl-job，都使用docker部署，部署在同一个ECS机器上。这时候就不好办了，运行在docker中的java程序无法知道其他docker中的java程序运行情况，因为docker把环境隔离了，只能由docker开放指定端口号和容器内运行的java程序端口号映射。这就极大增加了运维成本。</li>
</ol>
<p>我认为正确的做法就是复用原来的端口号，这样一个端口号就能解决问题。</p>
<p>实际上已经有人提了PR：<a href="https://github.com/xuxueli/xxl-job/pull/2266" target="_blank">改造在SpringBoot环境下，直接使用SpringBoot端口</a> 但是迟迟没有被合并，实际上这个开源项目下的issue已经多达五百多个，PR数量也已经近四十个，其实这个项目还是有人继续维护的，最近的2.3.0版本release在两个月以前，但是这么多issue和pr都没人管，说明作者实际上不关心使用者的感受，只能这么认为了。</p>
<p>如果想定制化某些功能，那就去修改源代码吧，God bless you~</p>

</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2021-04-21 15:02</span>&nbsp;
<a href="https://www.cnblogs.com/kuangdaoyizhimei/">狂盗一枝梅</a>&nbsp;
阅读(<span id="post_view_count">45</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14685276" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(14685276);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/10.3.1/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 147792, cb_blogApp = 'kuangdaoyizhimei', cb_blogUserGuid = 'bdaaad45-60a3-e211-82de-84c4f0333004';
    var cb_entryId = 14685276, cb_entryCreatedDate = '2021-04-21 15:02', cb_postType = 1;
    updatePostStats(
        [cb_entryId],
        function(id, count) { $("#post_view_count").text(count) },
        function(id, count) { $("#post_comment_count").text(count) })
    zoomManager.apply("#cnblogs_post_body img:not(.code_img_closed):not(.code_img_opened)");
</script>
<a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <div id="cnblogs_c1" class="under-post-card">
        <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>
    </div>
    <div id="under_post_card1"></div>
    <div id="cnblogs_c2" class="under-post-card">
        <div id='div-gpt-ad-1592366332455-0' style='width: 468px; height: 60px;'></div>
    </div>
    <div id="under_post_card2"></div>
    <div id="HistoryToday" class="under-post-card"></div>
    <script type="text/javascript">
       var commentManager = new blogCommentManager();
       commentManager.renderComments(0);
       fixPostBody();
       deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);       deliverT2();
       deliverC1C2();
       loadNewsAndKb();
       loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);       LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
       GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
       loadOptUnderPost();
       GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>

	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2021 狂盗一枝梅
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    <div id="page_end_html">
        <!-- ............自定义尾部代码开始............ -->
<div id="post-bottom-bar" class="post-bottom-bar" style="bottom: 0px;">
	<div class="bottom-bar-inner">
		<!-- 左边 -->
        <div class="bottom-bar-items social-share" style="float: left;">
            <span class="bottom-bar-item bottom-bar-facebook">
                <a id="bottom-d" href="javascript:void(0)" target="_blank">好文要赞</a>
            </span>
            <span class="bottom-bar-item bottom-bar-twitter">
                <a id="bottom-g" href="javascript:void(0)" target="_blank">关注我</a>
            </span>
            <span class="bottom-bar-item bottom-bar-qrcode">
                <a id="bottom-s" href="javascript:void(0)" target="_blank">收藏该文</a>
            </span>
        </div>
        <!-- 右边 -->
        <div class="bottom-bar-items right" style="float: right;">
            <span class="bottom-bar-item"><a id="mbottom-left" href="javascript:void(0);">←</a></span>
            <span class="bottom-bar-item"><a id="mbottom-right" href="javascript:void(0);">→</a></span>
            <span class="bottom-bar-item"><a href="#mfooter">↓</a></span>
            <span class="bottom-bar-item"><a href="#mtop">↑</a></span>
        </div>
	</div> 
</div>
<a name="mfooter"></a>

<!-- 遮罩层（用于图片点击放大），
    代码来自https://www.cnblogs.com/zhanxiaoyun/p/8259451.html-->
<div id="outerdiv" style="text-align: center;position: fixed;z-index: 1000;top: 0;left: 0;
    width: 100%;height: 100%;background-color: rgba(255,255,255,.9);display: none;">
    <img id="bigimg" style="height: auto;width: auto;border: 0; 
        margin: auto;position: absolute;top: 0;bottom: 0;left: 0;right: 0;">
</div>
<!-- ............自定义尾部代码结束............ -->


<script type="text/javascript" src="https://blog-static.cnblogs.com/files/summertime-wu/nprogress.js"></script>
<script type="text/javascript">

    //博主名称 可不改，默认取博客园提供的
    var nickName = null;
    //slogan
    var slogan = '立德立言，无闻西东';
    //icon
    var icon = "https://img2020.cnblogs.com/blog/516671/202104/516671-20210421182138882-1923189268.png";
    //默认博客背景图片
    var defaultPic="https://img2018.cnblogs.com/blog/1138447/201904/1138447-20190426121949417-1115592219.jpg";
    //icon(浏览器标题栏上的)
    var iconB="https://img2018.cnblogs.com/blog/1138447/201909/1138447-20190911161817172-1737762696.png";
    //友情链接地址
    var friendLink="https://www.cnblogs.com/kuangdaoyizhimei/p/14685396.html";
    //关于地址
    var aboutMe="https://www.cnblogs.com/kuangdaoyizhimei/p/14685428.html";
    //Github地址,假如博客username与Github username相同，不用改。
    //如 cnblogs.com/username github.com/username 这样就不用改
    var myGayhubUrl = "https://github.com/kdyzm";
</script>
<script type="text/javascript">
	/**
		用来设置初始时需要执行的js
	*/
	$(document).ready(function(){

        //获取博主名字
        if (nickName == null){
            var footerOverTestArray = $($("#footer")[0].childNodes[2]).text().trim().split(" ");
            nickName = footerOverTestArray[footerOverTestArray.length - 1];
        }

		//加载顶部进度条
	    NProgress.start();
	    NProgress.done();
	    $("#myProgressBar").hide();

	    //设置背景图片地址
	    if ($("#head_bg_img").val()!=null && $("#head_bg_img").val()!="") {
	    	$("#myheader_bg").css("background-image","url("+$("#head_bg_img").val()+")");
	    }else{
    		$("#myheader_bg").css("background-image","url("+defaultPic+")");
	    }

	    //设置标题
        if($("#cb_post_title_url").html()){
            $("#mypost_title_h").html($("#cb_post_title_url").html());
        }else{
            $("#mypost_title_h").html(nickName);
        }

	    //正文和标题淡入
	    $("#mainContent").css("opacity","1");
	    $("#mainContent").css("margin-top","0");
	    $("#mypost_title").css("opacity","1");
	    $("#mypost_title").css("top","75pt");

        /* --根据个人配置修改页面 start-- */
        //修改a链接
        var ccList = $(".c-c");
        for(var cc of ccList){
            $(cc).attr("href", $(cc).attr("href").replace("summertime-wu",currentBlogApp));
        }
        //设置Github链接
        if (myGayhubUrl != null ){$("#myGayhubUrl").attr("href",myGayhubUrl)}
        //设置友链的链接
        $("#friendLink").attr("href",friendLink);
        //设置关于的链接
        $("#aboutMe").attr("href",aboutMe);
        //设置两个iocn图标
        $("#nv-icon").attr("src",icon);
        var linkObject = document.createElement("link");
        linkObject.rel = "shortcut icon";
        linkObject.href = iconB;
        document.getElementsByTagName("head")[0].appendChild(linkObject);
        //设置底部栏按钮
        if (window.location.href == "https://www.cnblogs.com/"+currentBlogApp|| 
                window.location.href == "https://www.cnblogs.com/"+currentBlogApp+"/"||
                window.location.href == "http://www.cnblogs.com/"+currentBlogApp|| 
                window.location.href == "http://www.cnblogs.com/"+currentBlogApp+"/") {
            $("#bottom-d").html("友情链接");
            $("#bottom-d").attr("href",friendLink);
        }else{
            var url = window.location.href;
            var lastUrl = url.substring(url.lastIndexOf("/")+1);
            var mpageId = lastUrl.substring(0,lastUrl.indexOf("."));
            $("#bottom-d").click(function(){
                DiggIt(mpageId,cb_blogId,1);
                green_channel_success(this,'谢谢推荐！');
            })
        }
        /* --根据个人配置修改页面 end-- */
	})

	/**
		设置ajax请求加载完所有数据时执行的js
	*/
	setTimeout(afterAjax,1000);
	function afterAjax(){
		//假如是首页
		if (window.location.href == "https://www.cnblogs.com/"+currentBlogApp|| 
			window.location.href == "https://www.cnblogs.com/"+currentBlogApp+"/"||
			window.location.href == "http://www.cnblogs.com/"+currentBlogApp|| 
			window.location.href == "http://www.cnblogs.com/"+currentBlogApp+"/") {
			$("#mypost_title_e").html("<a href='https://cnblogs.com/"+currentBlogApp+"'>"+slogan+"</a>");
		}else{
		    var classification = null;
		    if ($("#BlogPostCategory").html()!=null && $("#BlogPostCategory").html()!= "") {
		    	classification = $("#BlogPostCategory").html();
		    	classification = classification.substring(3,classification.length);
		    }else{
		    	classification = "<a href='https://cnblogs.com/"+currentBlogApp+"'>暂未分类</a>";
		    }
		    var ftitle = "Published on "+ $("#post-date").html() + " in " +  classification
		    + " with <a href='https://cnblogs.com/"+currentBlogApp+"'>"+nickName+"</a>";
		    //设置副标题标题
		    $("#mypost_title_f").html(ftitle);
		    //设置标题分类按钮
		    $("#mypost_title_e").html(classification);
		    //设置底部导航条上一篇下一篇文章
		    var pnp = $("#post_next_prev a");
		    $("#mbottom-left").attr("href",pnp[1].href);
		    if (pnp.length>2) {
		    	$("#mbottom-right").attr("href",pnp[3].href);
		    }
		}
		$("#myheader_bg").css("filter","blur(0px)");

        //优化评论区样式
        $("#comment_form_container p:last").hide();
        $("#commentbox_opt a:last").hide();
        $("#tbCommentBody").attr('placeholder','Your comment here. Be cool. ');
	}


	/** 
		自定义的js方法
	*/
	//设置底部导航条点击关注按钮事件
	$("#bottom-g").click(function(){
		$('#green_channel_follow').click()
		return false
	})
	$("#bottom-s").click(function(){
		AddToWz(cb_entryId);
		return false;
	})


	//通过滚动条控制导航条的展现隐藏
	var oldScrollNum = 0;
	window.onscroll = function(){
		var t = document.documentElement.scrollTop || document.body.scrollTop;
		//下滑
		if (t>oldScrollNum) {
			if (t>120) {
				$("#mynavbar").css("margin-top","-70px");//顶部导航
				$("#post-bottom-bar").css("bottom","-3pc");//底部导航
			}
			if (t>300) {
				$("#right_meun").css("display","inline-block");//右侧导航
			}
		//上拉
		}else{
			//防止用a链接跳转也触发效果
			if (oldScrollNum-t<20) {
				$("#mynavbar").css("margin-top","0px");//顶部导航
				$("#post-bottom-bar").css("bottom","0");//底部导航
			}
			if (t<=300) {
				$("#right_meun").css("display","none");//右侧导航
			}
		}
		oldScrollNum = t;
	}

	//背景大图点击模糊||清晰
	$("#myheader_cover").click(function(){
		if ($("#myheader_bg").css("filter") == "blur(3px)") {
			$("#myheader_bg").css("filter","blur(0px)");
		}else{
			$("#myheader_bg").css("filter","blur(3px)");
		}
	})


    $("#outerdiv").click(function(){//再次点击淡出消失弹出层    
        $(this).fadeOut("fast");    
    }); 

 </script>

 <script type="text/javascript">  
    var setMyBlog = {
        setCopyright: function() {
            //设置版权信息，转载出处自动根据页面url生成
            var info_str = '<p>作者：<a target="_blank">@gzdaijie</a><br>'+
                '本文为作者原创，转载请注明出处：<a class="uri"></a></p><hr></hr>', 
                info = $(info_str),
                info_a = info.find("a"),
                url = window.location.href;
            $(info_a[0]).attr("href","https://github.com/gzdaijie");
            $(info_a[1]).attr("href",url).text(url);
            $("#cnblogs_post_body").prepend(info);
        },
        setCodeRow: function(){
            // 代码行号显示
            var pre = $("pre.sourceCode"); //选中需要更改的部分
            if(pre && pre.length){
                pre.each(function() {
                    var item = $(this);
                    var lang = item.attr("class").split(" ")[1]; //判断高亮的语言
                    item.html(item.html().replace(/<[^>]+>/g,"")); //将<pre>标签中的html标签去掉
                    item.removeClass().addClass("brush: " + lang +";"); //根据语言添加笔刷
                    SyntaxHighlighter.all();
                })
            }
        },
        setAtarget: function() {
            // 博客内的链接在新窗口打开
            $("#cnblogs_post_body a").each(function(){
                this.target = "_blank";
            }) 
        },
        setContent: function() {
            // 根据h2、h3标签自动生成目录
            var captions_ori = $("#cnblogs_post_body h2"),
            	captions_ori2 = $("#cnblogs_post_body h3"),
                captions = $("#cnblogs_post_body h2,#cnblogs_post_body h3").clone(),
                content = $("<ul id='right_meun'></ul>");
            $("#cnblogs_post_body").prepend(content.append(captions));
            var index = -1,index2 = -1;
            captions.replaceWith(function(){
                var self = this;
                if(self.tagName == "H2" || self.tagName == "h2"){
                    // 设置点击目录跳转
                    index += 1;
                    $('<a name="' + '_caption_' + index + '"></a>').insertBefore(captions_ori[index]); 
                    return '<li id="'+index+'li"><a href="#_caption_' + index + '">' + self.innerHTML + '</a><ul></ul></li>';
                } else {
                	// add by summertime-wu 增加h3链接跳转
                	index2 += 1;
                	$('<a name="' + '_caption' + index2 + '"></a>').insertBefore(captions_ori2[index2]); 
                	$("#"+index+"li ul").append("<li><a href='#_caption" + index2 + "' style='color:#5f5f5f;'>" +self.innerHTML+"</a></li>");
                    return ;
                }
            });
        },
        runAll: function() {
            /* 运行所有方法
             * setAtarget() 博客园内标签新窗口打开
             * setContent() 设置目录
             * setCopyright() 设置版权信息
             * setCodeRow() 代码行号显示
             */ 
            this.setAtarget(); 
            //假如为手机端不显示目录
            if(document.body.clientWidth>=1000){
                this.setContent();
            }
            // this.setCopyright();
            this.setCodeRow();
        }
    }
    setMyBlog.runAll();
</script>

<!-- 代码行号 -->
<script src="//cdn.bootcss.com/highlightjs-line-numbers.js/1.1.0/highlightjs-line-numbers.min.js"></script>
<script>hljs.initLineNumbersOnLoad();</script>
    </div>

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAjuHmsloVISKmqV4Ocn4YRNuVJIVSAcuLKr8te92Cl8HBMepQ678R7JZCaMOy-iRd_W8dTXyvCBWTtXIWT1ljXWBzHLDyH-UN5qyafj9y1o8j192nEYje-ZyM145Acb9OQs" />
</body>
</html>
