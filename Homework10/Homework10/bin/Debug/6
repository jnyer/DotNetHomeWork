<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-crossorigin" />
    <meta name="description" content="本文章转发自：https://www.cnblogs.com/tianqing/p/12570801.html 使用HttpContext的具体场景： 1. 在Controller层访问HttpCon" />
    <meta property="og:description" content="本文章转发自：https://www.cnblogs.com/tianqing/p/12570801.html 使用HttpContext的具体场景： 1. 在Controller层访问HttpCon" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>HttpContext访问的正确姿势 - AZRNG - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=zS6-e1bxywlu3kpHvpr1J6MySwya3ztFtEnS7RYQ0Fk" />
    <link id="MainCss" rel="stylesheet" href="/skins/codinglife/bundle-codinglife.min.css?v=2uJkpdACLVfstRQ7zeCFK19brTwKuDEaNBLgKz9nm3A" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/codinglife/bundle-codinglife-mobile.min.css?v=DwDRKMd1bmjnJZ4iQqrTCO9QLlYb6OZaUAzHoHIIihg" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/azrng/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/azrng/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/azrng/wlwmanifest.xml" />
    <script>
        var currentBlogId = 418143;
        var currentBlogApp = 'azrng';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'CodingLife';
        var visitorUserId = '';
    </script>
        <script>
            var currentPostDateAdded = '2020-03-30 11:51';
        </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=yJQaJ16S00coMfzvh-NgF2zm2J87f5VfNamFdsnKHrc"></script>
    
    
    
</head>
<body class="has-navbar">
    <a name="top"></a>
    <div id="top_nav" class="navbar forpc">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    <div id="page_begin_html">
        <link rel="stylesheet" type="text/css" href="https://files.cnblogs.com/files/kousak/waifu.css">   
 <link rel="stylesheet" type="text/css" href="https://files.cnblogs.com/files/kousak/waifu.css">
 
  <div class="waifu" id="waifu"> <div class="waifu-tips" style="opacity: 1"></div>  <div class="waifu-tool"> <span class="fui-home"></span> <span class="fui-chat"></span> <span class="fui-eye"></span> <span class="fui-user"></span> <span class="fui-photo"></span> <span class="fui-info-circle"></span> <span class="fui-cross"></span> </div> </div> 
   <link rel="stylesheet" type="text/css" href="https://files.cnblogs.com/files/yjlblog/flat-ui.min.css">
    </div>
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/azrng/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/azrng/">AZRNG</a>
</h1>
<h2></h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/azrng/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/AZRNG">
联系</a></li>
<li>

<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/azrng/p/12597605.html">
    <span>HttpContext访问的正确姿势</span>
    



</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>本文章转发自：https://www.cnblogs.com/tianqing/p/12570801.html</p>
<p>使用HttpContext的具体场景：</p>
<p><strong>1. 在Controller层访问HttpContext</strong></p>
<p><strong>2. 在中间件中使用HttpContext</strong></p>
<p><strong>3. 在数据访问层使用HttpContext</strong></p>
<p><strong>4. 在后台线程中访问HttpContext</strong></p>
<p><strong>5. 在Razor页面模型中访问HttpContext</strong></p>
<p><strong>6. 在Razor视图中访问HttpContext</strong></p>
<p>解决方案</p>
<p>1.<strong>在Controller层访问HttpContext</strong></p>
<p>&nbsp; &nbsp;示例代码中HomeController继承与Controller抽象类</p>
<p>&nbsp; &nbsp;Controller父类中继承与ControllerBase抽象类</p>
<p>&nbsp; &nbsp;其中ControllerBase抽象类有提供了对HttpContext的访问</p>
<p>&nbsp;&nbsp;<img src="https://img2020.cnblogs.com/blog/23525/202003/23525-20200325220632370-226412858.jpg" alt=""></p>
<p>&nbsp; 所以，我们在Controller这一层可以按以下方式访问HttpContext：</p>
<div class="cnblogs_Highlighter">
<pre class="brush:csharp;gutter:true;">public class HomeController : Controller
  {
        private readonly ILogger&lt;HomeController&gt; _logger;
        private string customer;

        public HomeController(ILogger&lt;HomeController&gt; logger)
        {
            _logger = logger;
            
            customer = HttpContext.Request.Form["CustomerId"];
        }
}
</pre>
</div>
<p>　二：<strong>在中间件中使用HttpContext</strong></p>
<p>&nbsp; &nbsp; 自定义扩展中间件中，实现Invoke方法，HttpContext通过参数的方式传递到中间件的业务逻辑中。</p>
<pre> public async Task Invoke(HttpContext context)</pre>
<p>　</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> CustomerMiddleware
{
        </span><span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">readonly</span><span style="color: rgba(0, 0, 0, 1)"> RequestDelegate _next;

        </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> CustomerMiddleware(RequestDelegate next)
        {
            _next </span>=<span style="color: rgba(0, 0, 0, 1)"> next;
        }

        </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">async</span><span style="color: rgba(0, 0, 0, 1)"> Task Invoke(HttpContext context)
        {
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Do something with context near the beginning of request processing.                     </span>
            <span style="color: rgba(0, 0, 255, 1)">await</span><span style="color: rgba(0, 0, 0, 1)"> _next.Invoke(context);

            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Clean up.</span>
<span style="color: rgba(0, 0, 0, 1)">        }
}</span></pre>
</div>
<p>三、<strong>&nbsp;在数据访问层使用HttpContext</strong></p>
<p>&nbsp;声明一个User的仓储类，实现对User的持久化。如下代码中，</p>
<p>UserRepository依赖 <strong>IHttpContextAccessor</strong></p>
<p>通过ASP.NET Core依赖注入容器解析依赖链并创建 UserRepository 实例时，就会注入依赖项。</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> UserRepository: IUserRepository
    {
        </span><span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">readonly</span><span style="color: rgba(0, 0, 0, 1)"> IHttpContextAccessor _httpContextAccessor;

        </span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> UserRepository(IHttpContextAccessor httpContextAccessor)
        {
            _httpContextAccessor </span>=<span style="color: rgba(0, 0, 0, 1)"> httpContextAccessor;
        }

        </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> AddUser(User user)
        {
            </span><span style="color: rgba(0, 0, 255, 1)">var</span> username =<span style="color: rgba(0, 0, 0, 1)"> _httpContextAccessor.HttpContext.User.Identity.Name;
            
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">Save User to DB</span>
<span style="color: rgba(0, 0, 0, 1)">        }
    }</span></pre>
</div>
<p><strong>使用ASP.NET Core内置的<strong>依赖项注入容器</strong>来注册依赖项。 依赖项注入容器向任意类提供&nbsp;<strong>IHttpContextAccessor</strong>，以供类在自己的构造函数中将它声明为依赖项：</strong></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> ConfigureServices(IServiceCollection services)
{
            services.AddControllersWithViews();

            services.AddHttpContextAccessor();
            services.AddTransient</span>&lt;IUserRepository, UserRepository&gt;<span style="color: rgba(0, 0, 0, 1)">();
}</span></pre>
</div>
<p>四：<strong>在后台线程中访问HttpContext</strong></p>
<p>&nbsp;HttpContext 不是线程安全的。 在处理请求之外读取或写入 HttpContext 的属性，可能会导致 NullReferenceException空引用异常。</p>
<p>&nbsp;如何再后台线程中使用HttpContext呢？推荐的做法：</p>
<p>&nbsp; 1. 在请求处理过程中复制所需的数据。</p>
<p>&nbsp; 2. 将复制的数据传递给后台任务。</p>
<p>&nbsp;&nbsp;<img src="https://img2020.cnblogs.com/blog/23525/202003/23525-20200325222819255-22960621.jpg" alt=""></p>
<p>五：<strong>在Razor页面模型中访问HttpContext</strong></p>
<p>Razor页面模型的父类PageModel提供了HttpContext的访问，如下代码：</p>
<p>六、<strong>在Razor视图中访问HttpContext</strong></p>
<p>&nbsp; &nbsp;Razor 视图通过视图上的&nbsp;<strong>RazorPage.Context</strong>&nbsp;属性直接公开 HttpContext</p>
<pre>@{
    ViewData["Title"] = "Home Page";
    var username =<strong> Context</strong>.User.Identity.Name;
}</pre>
<p><audio controls="controls" style="display: none"></audio></p>
</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2020-03-30 11:51</span>&nbsp;
<a href="https://www.cnblogs.com/azrng/">AZRNG</a>&nbsp;
阅读(<span id="post_view_count">452</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12597605" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(12597605);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/10.3.1/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 418143, cb_blogApp = 'azrng', cb_blogUserGuid = '0a354e27-ba59-4278-95d4-08d5866282ce';
    var cb_entryId = 12597605, cb_entryCreatedDate = '2020-03-30 11:51', cb_postType = 1;
    updatePostStats(
        [cb_entryId],
        function(id, count) { $("#post_view_count").text(count) },
        function(id, count) { $("#post_comment_count").text(count) })
    zoomManager.apply("#cnblogs_post_body img:not(.code_img_closed):not(.code_img_opened)");
</script>
<a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <div id="cnblogs_c1" class="under-post-card">
        <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>
    </div>
    <div id="under_post_card1"></div>
    <div id="cnblogs_c2" class="under-post-card">
        <div id='div-gpt-ad-1592366332455-0' style='width: 468px; height: 60px;'></div>
    </div>
    <div id="under_post_card2"></div>
    <div id="HistoryToday" class="under-post-card"></div>
    <script type="text/javascript">
       var commentManager = new blogCommentManager();
       commentManager.renderComments(0);
       fixPostBody();
       deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);       deliverT2();
       deliverC1C2();
       loadNewsAndKb();
       loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);       LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
       GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
       loadOptUnderPost();
       GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>

	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2021 AZRNG
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAjsPl3qq4GuJW3OdwsZBf-jX8WRJkzOYODYmI2suiP0vpHju5PlJjkTUWp3QrOQV3wAL9m1BY2HLH7GlOMdmPquCpAMZVSTt3Qjmh51XdS_agtIKezjBonY9j2-SxubBbMU" />
</body>
</html>
