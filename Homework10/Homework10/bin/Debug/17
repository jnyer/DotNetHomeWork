<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-crossorigin" />
    <meta name="description" content="本文介绍了numba的两个装饰器的原理与测试案例，以及python中两坐标轴绘图的案例。其中基于即时编译技术jit的装饰器，能够对代码中的for循环产生较大的编译优化，可以配合并行技术使用。而基于SI" />
    <meta property="og:description" content="本文介绍了numba的两个装饰器的原理与测试案例，以及python中两坐标轴绘图的案例。其中基于即时编译技术jit的装饰器，能够对代码中的for循环产生较大的编译优化，可以配合并行技术使用。而基于SI" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>使用numba加速python科学计算 - 陆言君 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=zS6-e1bxywlu3kpHvpr1J6MySwya3ztFtEnS7RYQ0Fk" />
    <link id="MainCss" rel="stylesheet" href="/skins/simplememory/bundle-simplememory.min.css?v=uknaX_hejnSu-njQgx4Hj1R0JiPLwUhFPUlwWNmWyB4" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/dechinphy/custom.css?v=U3QQD7r4GRlwHtt5EmOA5hd9jFo=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/SimpleMemory/bundle-SimpleMemory-mobile.min.css" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/dechinphy/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/dechinphy/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/dechinphy/wlwmanifest.xml" />
    <script>
        var currentBlogId = 657846;
        var currentBlogApp = 'dechinphy';
        var cb_enable_mathjax = true;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'SimpleMemory';
        var visitorUserId = '';
    </script>
        <script>
            var currentPostDateAdded = '2021-04-16 04:56';
        </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=yJQaJ16S00coMfzvh-NgF2zm2J87f5VfNamFdsnKHrc"></script>
    <script type="text/x-mathjax-config">
        MathJax.Hub.Config({
        tex2jax: { inlineMath: [['$','$'], ['\\(','\\)']], processClass: 'math', processEscapes: true },
        TeX: {
        equationNumbers: { autoNumber: ['AMS'], useLabelIds: true },
        extensions: ['extpfeil.js', 'mediawiki-texvc.js'],
        Macros: {bm: "\\boldsymbol"}
        },
        'HTML-CSS': { linebreaks: { automatic: true } },
        SVG: { linebreaks: { automatic: true } }
        });
    </script>
    <script src="https://mathjax.cnblogs.com/2_7_5/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;v=20200504"></script>
    
</head>
<body class="no-navbar">
    <a name="top"></a>
    <div id="top_nav" class="navbar forpc navbar-custom">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    <div id="page_begin_html">
        <script>loadPageBeginHtml();</script>
    </div>
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/dechinphy/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/dechinphy/">陆言君的博客</a>
</h1>
<h2>研究兴趣：量子计算、python编程、深度学习</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/dechinphy/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E9%99%86%E8%A8%80%E5%90%9B">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/dechinphy/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/dechinphy/p/numba.html">
    <span>使用numba加速python科学计算</span>
    



</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        本文介绍了numba的两个装饰器的原理与测试案例，以及python中两坐标轴绘图的案例。其中基于即时编译技术jit的装饰器，能够对代码中的for循环产生较大的编译优化，可以配合并行技术使用。而基于SIMD的向量化计算技术，也能够在向量的计算中，如向量间的乘加运算等场景中，实现巨大的加速效果。这都是非常底层的优化技术，但是要分场景使用，numba这个强力的工具并不能保证在所有的计算场景下都能够产生如此的加速效果。
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="技术背景">技术背景</h1>
<p>python作为一门编程语言，有非常大的生态优势，但是其执行效率一直被人诟病。纯粹的python代码跑起来速度会非常的缓慢，因此很多对性能要求比较高的python库，需要用C++或者Fortran来构造底层算法模块，再用python进行上层封装的方案。在前面写过的这篇<a href="https://www.cnblogs.com/dechinphy/p/line-profiler.html" target="_blank">博客</a>中，介绍了使用<code>f2py</code>将fortran代码编译成动态链接库的方案，这可以认为是一种“事前编译”的手段。但是本文将要介绍一种即时编译（Just In Time，简称JIT）的手段，也就是在临近执行函数前，才对其进行编译。以下截图来自于参考链接4，讲述了关于常见的一些编译场景的区别：<br>
<img src="https://img2020.cnblogs.com/blog/2277440/202104/2277440-20210416160321514-81498818.png" alt="" loading="lazy"></p>
<h1 id="用numbajit加速求平方和">用numba.jit加速求平方和</h1>
<p>numba中大部分加速的函数都是通过装饰器（decorator）来实现的，关于python中decorator的使用方法和场景，在前面写过的这篇<a href="https://www.cnblogs.com/dechinphy/p/decoretor.html" target="_blank">博客</a>中有比较详细的介绍，让我们直接使用numba的装饰器来解决一些实际问题。这里的问题场景是，随便给定一个数列，在不用求和公式的情况下对这个数列的所有元素求平方和，即：</p>
<p></p><div class="math display">\[f(a)=\sum_ia_i^2
\]</div><p></p><p>我们已知类似于这种求和的形式，其实是有很大的优化空间的，相比于直接用一个for循环来求解的话。这里我们直接展示一下案例代码：</p>
<pre><code class="language-python"># test_jit.py

from numba import jit
import time
import matplotlib.pyplot as plt

def adder(max): # 普通的循环求解
    s = 0
    for i in range(max):
        s += i ** 2
    return s

@jit(nopython=True)
def jit_adder(max): # 使用即时编译求解
    s = 0
    for i in range(max):
        s += i ** 2
    return s

if __name__ == '__main__':
    time_adder = []
    time_jit_adder = []
    x = list(range(1, 10000000, 500000))
    for i in x:
        time1 = time.time()
        s = adder(i)
        time2 = time.time()
        s = jit_adder(i)
        time3 = time.time()
        time_adder.append(time2 - time1)
        time_jit_adder.append(time3 - time2)
    # 开始作图
    fig, ax1 = plt.subplots()
    color = 'black'
    ax1.set_xlabel('Numbers')
    ax1.set_ylabel('Time (s)', color=color)
    ax1.plot(x[1:], time_adder[1:], color=color, label='python')
    ax1.tick_params(axis='y', labelcolor=color)
    
    ax2 = ax1.twinx() # 第二个y-坐标轴
    color = 'red'
    ax2.set_ylabel('Time (s)', color=color)
    ax2.plot(x[1:], time_jit_adder[1:], color=color, label='jit')
    ax2.tick_params(axis='y', labelcolor=color)
    plt.title('Running time difference via using jit')
    
    fig.tight_layout()
    plt.legend()
    plt.savefig('jit.png')
</code></pre>
<p>运行该python文件，会在当前目录下产生一个双坐标轴的图像：<br>
<img src="https://img2020.cnblogs.com/blog/2277440/202104/2277440-20210416152931611-1395022214.png" alt="" loading="lazy"><br>
在这个计算结果中，使用了即时编译技术之后，求解的时间几乎被压缩到了微秒级别，而循环求和的方法却已经达到了秒级，加速倍数在<span class="math inline">\(10^5\)</span>级别。</p>
<h1 id="用numbajit加速求双曲正切函数和">用numba.jit加速求双曲正切函数和</h1>
<p>在上一个案例中，也许涉及到的计算过于的简单，导致了加速倍数超出了想象的情况。因此这里我们只替换所求解的函数，看看加速的倍数是否会发生变化。这里我们采用了双曲正切求和的函数：</p>
<p></p><div class="math display">\[f(a)=\sum_i\frac{e^{a_i}-e^{-a_i}}{e^{a_i}+e^{-a_i}}
\]</div><p></p><p>通过<code>math</code>来实现这个函数的计算，用以替换上一章节中求平方值的方法：</p>
<pre><code class="language-python"># test_jit.py

from numba import jit
import time
import matplotlib.pyplot as plt
import math

def adder(max):
    s = 0
    for i in range(max):
        s += math.tanh(i ** 2)
    return s

@jit(nopython=True)
def jit_adder(max):
    s = 0
    for i in range(max):
        s += math.tanh(i ** 2)
    return s

if __name__ == '__main__':
    time_adder = []
    time_jit_adder = []
    x = list(range(1, 10000000, 500000))
    for i in x:
        time1 = time.time()
        s = adder(i)
        time2 = time.time()
        s = jit_adder(i)
        time3 = time.time()
        time_adder.append(time2 - time1)
        time_jit_adder.append(time3 - time2)
    
    fig, ax1 = plt.subplots()
    color = 'black'
    ax1.set_xlabel('Numbers')
    ax1.set_ylabel('Time (s)', color=color)
    ax1.plot(x[1:], time_adder[1:], color=color, label='python')
    ax1.tick_params(axis='y', labelcolor=color)
    
    ax2 = ax1.twinx()
    color = 'red'
    ax2.set_ylabel('Time (s)', color=color)
    ax2.plot(x[1:], time_jit_adder[1:], color=color, label='jit')
    ax2.tick_params(axis='y', labelcolor=color)
    plt.title('Running time difference via using jit')
    
    fig.tight_layout()
    plt.legend()
    plt.savefig('jit.png')
</code></pre>
<p>最终得到的时间对比图结果如下所示：<br>
<img src="https://img2020.cnblogs.com/blog/2277440/202104/2277440-20210416153407817-11316783.png" alt="" loading="lazy"><br>
需要提醒的是，黑色的曲线所对应的坐标轴是左边黑色标识的坐标轴，而红色的曲线所对应的坐标轴是右边红色标识的坐标轴。因此，这个图给我们的提示信息是，使用即时编译技术之后，加速的倍率大约为<span class="math inline">\(10^2\)</span>。这个加速倍率相对来说更加可以接受，因为C++等语言比python直接计算的速度在特定场景下大概就是要快上几百倍。</p>
<h1 id="用numbavectorize执行向量化计算">用numba.vectorize执行向量化计算</h1>
<p>关于向量化计算的原理和方法，在这篇<a href="https://zhuanlan.zhihu.com/p/72953129" target="_blank">文章</a>中有比较好的描述，这里放上部分截图说明：<br>
<img src="https://img2020.cnblogs.com/blog/2277440/202104/2277440-20210416162933784-455978474.png" alt="" loading="lazy"><br>
<img src="https://img2020.cnblogs.com/blog/2277440/202104/2277440-20210416163019309-853818071.png" alt="" loading="lazy"><br>
总结为，向量化计算的方法本质上也是一种并行化计算的方法，并行化技术的可行性是来源于<code>SIMD</code>技术，在指令集的层面对数据进行并行化的处理。在<code>numpy</code>的库中是自带支持SIMD的向量化计算的，因此速度非常的高，比如<code>numpy.dot</code>函数就是通过向量化计算来实现的。但是numpy能够执行的任务仅仅局限在numpy自身所支持的有限的函数上，因此如果是需要一个不同的函数，那么就需要用到<code>numba</code>的向量化计算模块了。</p>
<pre><code class="language-python"># test_vectorize.py

from numba import vectorize
import numpy as np
import time
import matplotlib.pyplot as plt

def ddot(max):
    s = 0
    np.random.seed(1)
    a1 = np.random.randn(max)
    np.random.seed(2)
    a2 = np.random.randn(max)
    for i in range(max):
        s += a1[i] * a2[i]
    return s

@vectorize
def jit_ddot(max):
    s = 0
    np.random.seed(1)
    a1 = np.random.randn(max)
    np.random.seed(2)
    a2 = np.random.randn(max)
    for i in range(max):
        s += a1[i] * a2[i]
    return s

def numpy_ddot(max):
    np.random.seed(1)
    a1 = np.random.randn(max)
    np.random.seed(2)
    a2 = np.random.randn(max)
    return np.dot(a1, a2)

if __name__ == '__main__':
    time_ddot = []
    time_jit_ddot = []
    time_numpy_ddot = []
    x = list(range(1, 1000000, 50000))
    for i in x:
        time1 = time.time()
        s = ddot(i)
        time2 = time.time()
        s = jit_ddot(i)
        time3 = time.time()
        s = numpy_ddot(i)
        time4 = time.time()
        time_ddot.append(time2 - time1)
        time_jit_ddot.append(time3 - time2)
        time_numpy_ddot.append(time4 - time3)
    
    fig, ax1 = plt.subplots()
    color = 'black'
    ax1.set_xlabel('Numbers')
    ax1.set_ylabel('Time (s)', color=color)
    ax1.plot(x[1:], time_ddot[1:], color=color, label='python')
    ax1.tick_params(axis='y', labelcolor=color)
    
    ax2 = ax1.twinx()
    color = 'red'
    ax2.set_ylabel('Time (s)', color=color)
    ax2.plot(x[1:], time_jit_ddot[1:], color=color, label='jit')
    ax2.plot(x[1:], time_numpy_ddot[1:], 's', color=color, label='numpy')
    ax2.tick_params(axis='y', labelcolor=color)
    plt.title('Running time difference via using jit')
    
    fig.tight_layout()
    plt.legend()
    plt.savefig('jit.png')
</code></pre>
<p>运行结果如下：<br>
<img src="https://img2020.cnblogs.com/blog/2277440/202104/2277440-20210416155249119-620938634.png" alt="" loading="lazy"><br>
可以看到虽然相比与numpy的同样的向量化计算方法，numba速度略慢一些，但是都比纯粹的python代码性能要高两个量级。这里也给我们一个启发，如果追求极致的性能，最好是尽可能的使用numpy中已有的函数。当然，在一些数学函数的计算上，<code>numpy</code>的速度比<code>math</code>还是要慢上一些的，这里我们就不展开介绍了。</p>
<h1 id="总结概要">总结概要</h1>
<p>本文介绍了numba的两个装饰器的原理与测试案例，以及python中两坐标轴绘图的案例。其中基于即时编译技术jit的装饰器，能够对代码中的for循环产生较大的编译优化，可以配合并行技术使用。而基于SIMD的向量化计算技术，也能够在向量的计算中，如向量间的乘加运算等场景中，实现巨大的加速效果。这都是非常底层的优化技术，但是要分场景使用，numba这个强力的工具并不能保证在所有的计算场景下都能够产生如此的加速效果。</p>
<h1 id="版权声明">版权声明</h1>
<p>本文首发链接为：<a href="https://www.cnblogs.com/dechinphy/p/numba.html" target="_blank">https://www.cnblogs.com/dechinphy/p/numba.html</a><br>
作者ID：DechinPhy<br>
更多原著文章请参考：<a href="https://www.cnblogs.com/dechinphy/" target="_blank">https://www.cnblogs.com/dechinphy/</a></p>
<h1 id="参考链接">参考链接</h1>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/78882641" target="_blank">https://zhuanlan.zhihu.com/p/78882641</a></li>
<li><a href="https://blog.csdn.net/yuanzhoulvpi/article/details/105307338" target="_blank">https://blog.csdn.net/yuanzhoulvpi/article/details/105307338</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/68805601" target="_blank">https://zhuanlan.zhihu.com/p/68805601</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/193035135" target="_blank">https://zhuanlan.zhihu.com/p/193035135</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/72953129" target="_blank">https://zhuanlan.zhihu.com/p/72953129</a></li>
</ol>

</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2021-04-16 16:56</span>&nbsp;
<a href="https://www.cnblogs.com/dechinphy/">陆言君</a>&nbsp;
阅读(<span id="post_view_count">7</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14667162" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(14667162);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/10.3.1/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 657846, cb_blogApp = 'dechinphy', cb_blogUserGuid = '1cf551f5-d20b-40f7-a88d-08d8ae5f7194';
    var cb_entryId = 14667162, cb_entryCreatedDate = '2021-04-16 16:56', cb_postType = 1;
    updatePostStats(
        [cb_entryId],
        function(id, count) { $("#post_view_count").text(count) },
        function(id, count) { $("#post_comment_count").text(count) })
    zoomManager.apply("#cnblogs_post_body img:not(.code_img_closed):not(.code_img_opened)");
</script>
<a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <div id="cnblogs_c1" class="under-post-card">
        <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>
    </div>
    <div id="under_post_card1"></div>
    <div id="cnblogs_c2" class="under-post-card">
        <div id='div-gpt-ad-1592366332455-0' style='width: 468px; height: 60px;'></div>
    </div>
    <div id="under_post_card2"></div>
    <div id="HistoryToday" class="under-post-card"></div>
    <script type="text/javascript">
       var commentManager = new blogCommentManager();
       commentManager.renderComments(0);
       fixPostBody();
       deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);       deliverT2();
       deliverC1C2();
       loadNewsAndKb();
       loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);       LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
       GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
       loadOptUnderPost();
       GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>

	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2021 陆言君
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    <div id="page_end_html">
        <script type="text/javascript">
/* 鼠标特效 */
var a_idx = 0;
jQuery(document).ready(function($) {
    $("body").click(function(e) {
        var a = new Array("❤富强❤","❤民主❤","❤文明❤","❤和谐❤","❤自由❤","❤平等❤","❤公正❤","❤法治❤","❤爱国❤","❤敬业❤","❤诚信❤","❤友善❤");
        var $i = $("<span></span>").text(a[a_idx]);
        a_idx = (a_idx + 1) % a.length;
        var x = e.pageX,
        y = e.pageY;
        $i.css({
            "z-index": 999999999999999999999999999999999999999999999999999999999999999999999,
            "top": y - 20,
            "left": x,
            "position": "absolute",
            "font-weight": "bold",
            "color": "rgb("+~~(255*Math.random())+","+~~(255*Math.random())+","+~~(255*Math.random())+")"
        });
        $("body").append($i);
        $i.animate({
            "top": y - 180,
            "opacity": 0
        },
        1500,
        function() {
            $i.remove();
        });
    });
});
</script>










<script language="javascript" type="text/javascript">
// 生成目录索引列表
// ref: http://www.cnblogs.com/wangqiguo/p/4355032.html
// modified by: zzq
function GenerateContentList()
{
    var mainContent = $('#cnblogs_post_body');
    var h1_list = $('#cnblogs_post_body h1');//如果你的章节标题不是h2,只需要将这里的h2换掉即可

    if(mainContent.length < 1)
        return;
 
    if(h1_list.length>0)
    {
        var content = '<a name="_labelTop"></a>';
        content += '<div id="navCategory" style="color:#152e97;">';
        content += '<p style="font-size:18px;"><b>目录</b></p>';
        content += '<ul>';
        for(var i=0; i<h1_list.length; i++)
        {
            var go_to_top = '<div style="text-align: right;"><a href="#_labelTop" style="color:#f68a33">回到顶部</a><a name="_label' + i + '"></a></div>';
            $(h1_list[i]).before(go_to_top);
            
            var h2_list = $(h1_list[i]).nextAll("h2");
            var li2_content = '';
            for(var j=0; j<h2_list.length; j++)
            {
                var tmp = $(h2_list[j]).prevAll('h1').first();
                if(!tmp.is(h1_list[i]))
                    break;
                var li2_anchor = '<a name="_label' + i + '_' + j + '"></a>';
                $(h2_list[j]).before(li2_anchor);
                li2_content += '<li><a href="#_label' + i + '_' + j + '">' + $(h2_list[j]).text() + '</a></li>';
            }
            
            var li1_content = '';
            if(li2_content.length > 0)
                li1_content = '<li><a href="#_label' + i + '">' + $(h1_list[i]).text() + '</a><ul>' + li2_content + '</ul></li>';
            else
                li1_content = '<li><a href="#_label' + i + '">' + $(h1_list[i]).text() + '</a></li>';
            content += li1_content;
        }
        content += '</ul>';
        content += '</div><p>&nbsp;</p>';
        content += '<hr style="height:1px;border:none;border-top:1px dashed #0066CC;"/>';
        if($('#cnblogs_post_body').length != 0 )
        {
            $($('#cnblogs_post_body')[0]).prepend(content);
        }
    }   
}

GenerateContentList();
</script>









<link href="https://cdn.bootcss.com/highlight.js/9.6.0/styles/atelier-lakeside-dark.min.css" rel="stylesheet"/>
<script src="//cdn.bootcss.com/highlight.js/9.11.0/highlight.min.js"></script>
<script>hljs.initHighlightingOnLoad();</script>
<script src="//cdn.bootcss.com/highlightjs-line-numbers.js/1.1.0/highlightjs-line-numbers.min.js"></script>
<script>hljs.initLineNumbersOnLoad();</script>
    </div>

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAjvVQ_EcU0JXeBseUB9lKW2xuHZFU57wwtCXKD_0IH8vAfE7jOHKjsMkDqfCNt45RiQ_QHGH7rbMqsFZHlShDgK69t89f8gz0FM0zcmteWL-4MphP9tBLTQCX-Cr7K2dBoM" />
</body>
</html>
