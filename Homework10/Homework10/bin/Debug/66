<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-crossorigin" />
    <meta name="description" content="本篇文章将会介绍ruoyi-vue代码生成器的使用方法、原理介绍以及独立版代码生成器的封装" />
    <meta property="og:description" content="本篇文章将会介绍ruoyi-vue代码生成器的使用方法、原理介绍以及独立版代码生成器的封装" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>若依管理系统RuoYi-Vue（三）：代码生成器原理和实战 - 狂盗一枝梅 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=zS6-e1bxywlu3kpHvpr1J6MySwya3ztFtEnS7RYQ0Fk" />
    <link id="MainCss" rel="stylesheet" href="/skins/bluesky/bundle-bluesky.min.css?v=crS-BJKdvIW2vVfJGJMix4EoW6XR-Z12_psc8V6YTNc" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/kuangdaoyizhimei/custom.css?v=tRPNC0STV2420eKosFf5BNi2g6U=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/bluesky/bundle-bluesky-mobile.min.css?v=R6fv62IpzGSvTM7pHsnRgkrk1El3gMSYm75Iwe80srs" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/kuangdaoyizhimei/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/kuangdaoyizhimei/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/kuangdaoyizhimei/wlwmanifest.xml" />
    <script>
        var currentBlogId = 147792;
        var currentBlogApp = 'kuangdaoyizhimei';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'BlueSky';
        var visitorUserId = '';
    </script>
        <script>
            var currentPostDateAdded = '2021-02-26 04:00';
        </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=yJQaJ16S00coMfzvh-NgF2zm2J87f5VfNamFdsnKHrc"></script>
    
    
    
</head>
<body class="no-navbar">
    <a name="top"></a>
    <div id="top_nav" class="navbar forpc navbar-custom">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    <div id="page_begin_html">
        <!-- ............自定义首部代码开始............ -->
<!-- 自定义进度条 -->
<div id="myProgressBar" style="display: none;"></div>

<!-- 自定义导航条 -->
<div id="mynavbar" style="margin-top: 0px;">
    <div style="position:relative;width:65pc;height:70px;margin:0 auto;">
    	<a style="width: auto;height: 22px;margin-left: 25px;" class="c-c"  href="https://www.cnblogs.com/kuangdaoyizhimei">
<img id="nv-icon" style="width: auto;height: 38px;outline: 0;margin-top: 12px;">

    	</a>
    	<div id="mynavbar_menu">
	    	<a href="https://www.cnblogs.com/summertime-wu" class="c-c">首页</a>
	    	<a href="https://msg.cnblogs.com/send/summertime-wu" class="c-c">联系</a>
	    	<a id="myGayhubUrl" href="https://github.com/Summertime-Wu" class="c-c">Github</a>
	    	<a id="friendLink" href="#">友情链接</a>
	    	<a href="https://www.cnblogs.com/">博客园</a>
            <a href="https://i.cnblogs.com/posts">管理</a>
	    	<a id="aboutMe" href="#">关于</a>
	    </div>
    </div>
</div>

<!-- 自定义头部锚点 -->
<a name="mtop"></a>

<!-- 自定义头部 -->
<div id="myheader">
	<!-- 背景图片 -->
    <div id="myheader_bg"></div>
    <!-- 遮罩层 -->
    <div id="myheader_cover" title="点我点我">
        <!-- 博客标题 -->
        <div id="mypost_title">
            <div id="mypost_title_h" style="font-weight: 500;font-size: 21px;"></div>
            <div id="mypost_title_f"></div>
            <div id="mypost_title_e">
                <a href="https://www.cnblogs.com/" class="c-c" style="">暂未分类</a>
            </div> 
        </div>  
    </div>
</div>
<!-- ............自定义首部代码结束............ -->
    </div>
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/kuangdaoyizhimei/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/kuangdaoyizhimei/">狂盗一枝梅</a>
</h1>
<h2></h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/kuangdaoyizhimei/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E7%8B%82%E7%9B%97%E4%B8%80%E6%9E%9D%E6%A2%85">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/kuangdaoyizhimei/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/kuangdaoyizhimei/p/14452736.html">
    <span>若依管理系统RuoYi-Vue（三）：代码生成器原理和实战</span>
    



</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                    <div id="cnblogs_post_description" style="display: none">
        本篇文章将会介绍ruoyi-vue代码生成器的使用方法、原理介绍以及独立版代码生成器的封装
    </div>
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>历史文章</p>
<blockquote>
<p><a href="https://blog.kdyzm.cn/post/44" target="_blank">若依管理系统RuoYi-Vue（一）：项目启动和菜单创建</a><br>
<a href="https://blog.kdyzm.cn/post/45" target="_blank">若依管理系统RuoYi-Vue（二）：权限系统设计详解</a></p>
</blockquote>
<p>本篇文章将会讲解ruoyi-vue系统下代码生成器的使用、原理分析以及将这部分代码抽离出来形成独立版的代码生成器。</p>
<h2 id="一、代码生成器的使用">一、代码生成器的使用</h2>
<h3 id="1新建maven模块">1.新建maven模块</h3>
<p>原则上，我们的业务代码和若依系统本身的系统代码是要做隔离的，一方面是易于之后随着若依系统升级而升级，另一方面则是纯粹的合理性考虑。</p>
<p>这里新建一个ruoyi-business模块作为业务代码模块，新建完ruoyi-business模块之后添加ruoyi-framework依赖，pom文件如下所示</p>
<pre><code class="language-xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;
    &lt;parent&gt;
        &lt;artifactId&gt;ruoyi&lt;/artifactId&gt;
        &lt;groupId&gt;com.ruoyi&lt;/groupId&gt;
        &lt;version&gt;3.4.0&lt;/version&gt;
    &lt;/parent&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
    &lt;groupId&gt;com.kdyzm&lt;/groupId&gt;
    &lt;artifactId&gt;ruoyi-business&lt;/artifactId&gt;
    &lt;version&gt;1.0.0-SNAPSHOT&lt;/version&gt;
    &lt;dependencies&gt;
        &lt;!-- 核心模块--&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.ruoyi&lt;/groupId&gt;
            &lt;artifactId&gt;ruoyi-framework&lt;/artifactId&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;
&lt;/project&gt;
</code></pre>
<p>之后在ruoyi-admin添加ruoyi-business模块的依赖</p>
<pre><code class="language-xml">&lt;dependency&gt;
    &lt;groupId&gt;com.kdyzm&lt;/groupId&gt;
    &lt;artifactId&gt;ruoyi-business&lt;/artifactId&gt;
    &lt;version&gt;1.0.0-SNAPSHOT&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
<h3 id="2准备代码生成器配置">2.准备代码生成器配置</h3>
<p>ruoyi-vue系统中代码生成器相代码都在ruoyi-generator模块中，代码生成的配置在<code>resources/generator.yml</code>文件中，由于要在新的模块ruoyi-business中做开发，要有个新包名，包名取作<code>com.kdyzm.business</code>，所以generator.yml配置文件内容如下：</p>
<pre><code class="language-yml"># 代码生成
gen: 
  # 作者
  author: kdyzm
  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool
  packageName: com.kdyzm.business
  # 自动去除表前缀，默认是false
  autoRemovePre: false
  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）
  tablePrefix: sys_
</code></pre>
<p>另外，这里要使用自定义包名com.kdyzm.business，所以若依系统中mybatis也要做相应的修改</p>
<ul>
<li>
<p>修改mybatis别名配置，增加对com.kdyzm包名的识别</p>
<pre><code class="language-yaml"># MyBatis配置
mybatis:
    # 搜索指定包别名
    typeAliasesPackage: com.ruoyi.**.domain,com.kdyzm.**.domain
</code></pre>
</li>
<li>
<p>修改mybatis的mapper扫描包路径</p>
<p>修改com.ruoyi.framework.config.ApplicationConfig类的MapperScan注解，增加对com.kdyzm包的扫描</p>
<pre><code class="language-java">@MapperScan({"com.ruoyi.**.mapper","com.kdyzm.**.mapper"})
public class ApplicationConfig{
    ...
}
</code></pre>
</li>
</ul>
<p>最后，在ruoyi-admin新增一个Config类，扫描com.kdyzm包，以将ruoyi-business模块中的所有组件纳入spring管理。</p>
<pre><code class="language-java">package com.ruoyi.config;

import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;

/**
 * @author kdyzm
 */
@Configuration
@ComponentScan(basePackages = "com.kdyzm")
public class Config {
}
</code></pre>
<h3 id="3准备表">3.准备表</h3>
<p>这里新建一张商品表作为示例，注意，这里的字段和表都要加上注释</p>
<pre><code class="language-sql">CREATE TABLE `goods` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `GOODS_NAME` varchar(255) DEFAULT NULL COMMENT '商品名字',
  `put_way_flag` tinyint(1) DEFAULT NULL COMMENT '商品是否上架，0：下架，1：上架',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  `create_by` varchar(64) DEFAULT NULL COMMENT '创建人',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `update_by` varchar(64) DEFAULT NULL COMMENT '更新人',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='商品表'
</code></pre>
<h3 id="4生成代码">4.生成代码</h3>
<p>进入系统工具-代码生成页面，点击导入按钮，找到goods表并导入，如下图所示</p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202102/516671-20210226155416536-693445469.png;%20charset=UTF-8" alt="image-20210225165412336" loading="lazy"></p>
<p>然后点击生成代码按钮</p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202102/516671-20210226155416796-1693121820.png;%20charset=UTF-8" alt="image-20210225174111317" loading="lazy"></p>
<p>之后，就可以得到一个ruoyi.zip压缩文件，压缩文件中包含生成的前后端代码以及sql语句文件，生成的代码目录结构如下所示</p>
<pre><code class="language-tree">├── goodsMenu.sql
├── main
│&nbsp;&nbsp; ├── java
│&nbsp;&nbsp; │&nbsp;&nbsp; └── com
│&nbsp;&nbsp; │&nbsp;&nbsp;     └── kdyzm
│&nbsp;&nbsp; │&nbsp;&nbsp;         └── business
│&nbsp;&nbsp; │&nbsp;&nbsp;             ├── controller
│&nbsp;&nbsp; │&nbsp;&nbsp;             │&nbsp;&nbsp; └── GoodsController.java
│&nbsp;&nbsp; │&nbsp;&nbsp;             ├── domain
│&nbsp;&nbsp; │&nbsp;&nbsp;             │&nbsp;&nbsp; └── Goods.java
│&nbsp;&nbsp; │&nbsp;&nbsp;             ├── mapper
│&nbsp;&nbsp; │&nbsp;&nbsp;             │&nbsp;&nbsp; └── GoodsMapper.java
│&nbsp;&nbsp; │&nbsp;&nbsp;             └── service
│&nbsp;&nbsp; │&nbsp;&nbsp;                 ├── IGoodsService.java
│&nbsp;&nbsp; │&nbsp;&nbsp;                 └── impl
│&nbsp;&nbsp; │&nbsp;&nbsp;                     └── GoodsServiceImpl.java
│&nbsp;&nbsp; └── resources
│&nbsp;&nbsp;     └── mapper
│&nbsp;&nbsp;         └── business
│&nbsp;&nbsp;             └── GoodsMapper.xml
└── vue
    ├── api
    │&nbsp;&nbsp; └── business
    │&nbsp;&nbsp;     └── goods.js
    └── views
        └── business
            └── goods
                └── index.vue
</code></pre>
<h2 id="二、将生成的代码应用到项目">二、将生成的代码应用到项目</h2>
<h3 id="1后端代码">1.后端代码</h3>
<p>将生成代码中的main目录直接拷贝到ruoyi-business模块下的src目录，可以看到生成的代码是典型的三层架构，从controller到mapper都已经帮我们生成好了。</p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202102/516671-20210226155417146-1314248648.gif;%20charset=UTF-8" alt="yanshi7" loading="lazy"></p>
<h3 id="2前端代码">2.前端代码</h3>
<p>前端代码对应着生成目录中的vue目录，这里将vue/api目录中的内容拷贝到ruoyi-ui/src/api目录中，将vue/views中的内容拷贝到ruoyi-ui/src/views目录,操作上，直接将生成的api和views目录拷贝到src目录即可。</p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202102/516671-20210226155417744-129944814.gif;%20charset=UTF-8" alt="yanshi8" loading="lazy"></p>
<h3 id="3sql代码">3.sql代码</h3>
<p>生成的sql代码是创建菜单和按钮权限使用的，直接在ruoyi数据库下执行 goodsMenu.sql 文件中的内容即可。</p>
<pre><code class="language-sql">-- 菜单 SQL
insert into sys_menu (menu_name, parent_id, order_num, path, component, is_frame, is_cache, menu_type, visible, status, perms, icon, create_by, create_time, update_by, update_time, remark)
values('商品', '3', '1', 'goods', 'business/goods/index', 1, 0, 'C', '0', '0', 'business:goods:list', '#', 'admin', sysdate(), '', null, '商品菜单');

-- 按钮父菜单ID
SELECT @parentId := LAST_INSERT_ID();

-- 按钮 SQL
insert into sys_menu (menu_name, parent_id, order_num, path, component, is_frame, is_cache, menu_type, visible, status, perms, icon, create_by, create_time, update_by, update_time, remark)
values('商品查询', @parentId, '1',  '#', '', 1, 0, 'F', '0', '0', 'business:goods:query',        '#', 'admin', sysdate(), '', null, '');

insert into sys_menu (menu_name, parent_id, order_num, path, component, is_frame, is_cache, menu_type, visible, status, perms, icon, create_by, create_time, update_by, update_time, remark)
values('商品新增', @parentId, '2',  '#', '', 1, 0, 'F', '0', '0', 'business:goods:add',          '#', 'admin', sysdate(), '', null, '');

insert into sys_menu (menu_name, parent_id, order_num, path, component, is_frame, is_cache, menu_type, visible, status, perms, icon, create_by, create_time, update_by, update_time, remark)
values('商品修改', @parentId, '3',  '#', '', 1, 0, 'F', '0', '0', 'business:goods:edit',         '#', 'admin', sysdate(), '', null, '');

insert into sys_menu (menu_name, parent_id, order_num, path, component, is_frame, is_cache, menu_type, visible, status, perms, icon, create_by, create_time, update_by, update_time, remark)
values('商品删除', @parentId, '4',  '#', '', 1, 0, 'F', '0', '0', 'business:goods:remove',       '#', 'admin', sysdate(), '', null, '');

insert into sys_menu (menu_name, parent_id, order_num, path, component, is_frame, is_cache, menu_type, visible, status, perms, icon, create_by, create_time, update_by, update_time, remark)
values('商品导出', @parentId, '5',  '#', '', 1, 0, 'F', '0', '0', 'business:goods:export',       '#', 'admin', sysdate(), '', null, '');
</code></pre>
<h2 id="三、测试">三、测试</h2>
<p>重新运行前后端代码，打开系统工具菜单（为何在这里？这是若依vue的bug，已经提到gitee，bug链接： <a href="https://gitee.com/y_project/RuoYi-Vue/issues/I3915P" target="_blank">I3915P</a> ）的商品菜单</p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202102/516671-20210226155418123-1520850686.gif;%20charset=UTF-8" alt="yanshi9" loading="lazy"></p>
<p>可以看到，前后端代码只是复制粘贴，后端接口、前端菜单、权限等等一切都已经被代码生成器帮我们做完了，可以说代码生成器极大的简化了我们的开发。</p>
<h2 id="四、代码生成器高级使用">四、代码生成器高级使用</h2>
<p>在三的测试过程中，我们发现，商品是否上架这个字段对应的前端表单是个文本输入框，但是实际上这里应该是个下拉列表框或者单选按钮才对，因为它只有两个值：0或者1，ruoyi-vue代码生成器实际上是支持这种操作的。之前生成代码的时候导入表之后直接点击了下载按钮生成了代码，实际上跳过了一个重要的步骤，那就是编辑代码生成选项。</p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202102/516671-20210226155422333-2049254485.png;%20charset=UTF-8" alt="image-20210226111535572" loading="lazy"></p>
<p>点击编辑按钮之后，跳转修改生成配置页面。</p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202102/516671-20210226155422571-1758454925.png;%20charset=UTF-8" alt="image-20210226111833327" loading="lazy"></p>
<p>在这个页面中，可以修改字段在前端的显示类型以及字典类型，比如，要想“商品是否上架”在前端展示为单选框，就可以修改显示类型为“单选框”，字典类型设置为“业务是否（<strong>需要新增数据字典</strong>，0表示下架，1表示上架）”。</p>
<p>提交之后重新生成的代码样式：</p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202102/516671-20210226155422836-1817000624.png;%20charset=UTF-8" alt="image-20210226131851918" loading="lazy"></p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202102/516671-20210226155423031-1894267523.png;%20charset=UTF-8" alt="image-20210226131953348" loading="lazy"></p>
<p>可以看到，商品是否字段变成了下拉列表和单选框的样式。</p>
<p>另外，若依代码生成器支持三种数据格式模板的代码生成：单表、树表、主子表，这里默认使用的是单表模板，也是最常使用的模板。</p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202102/516671-20210226155423209-1466649861.png;%20charset=UTF-8" alt="image-20210226153053315" loading="lazy"></p>
<h2 id="五、代码生成器原理">五、代码生成器原理</h2>
<h3 id="1velocity">1.Velocity</h3>
<p>Velocity是一个基于Java的模板引擎，其提供了一个Context容器，在java代码里面我们可以往容器中存值，然后在vm文件中使用特定的语法获取，这是velocity基本的用法，其与jsp、freemarker并称为三大视图展现技术。作为一个模块引擎，除了作为前后端分离的MVC展现层，Velocity还有一些其他用途，比如源代码生成。</p>
<p>在若依Vue系统中，正是使用了Velocity技术实现的源代码生成。大体上，源代码生成只需三步走：</p>
<ol>
<li>创建模板文件</li>
<li>准备上下文（变量值）</li>
<li>替换模板文件中的变量</li>
</ol>
<p>三步走完之后源代码就生成了，说起来是很简单的，但是实际上做起来会比较麻烦，特别是第一步创建模板文件是最复杂的，以下为index.vue模板文件部分源代码：</p>
<pre><code class="language-vue">#foreach($column in $columns)
#if($column.query)
#set($dictType=$column.dictType)
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($column.htmlType == "input")
...
</code></pre>
<p>可以看到，该vue模板文件中充斥着大量Velocity的if-else语法，嵌套在一起更是显得无比复杂。</p>
<p>总之，整体上来看，java代码的模板比较简单，vue和mybatis mapper的模板文件比较复杂。</p>
<h3 id="2information_schema-数据库">2.information_schema 数据库</h3>
<p>mysql数据库中有一个information_schema数据库，它是mysql的系统数据库之一，它里面存储着两个表<code>TABLES</code>以及<code>COLUMNS</code>，这两个表分别存储着所有的表信息以及所有表中的列信息，代码生成器正是以两张表的信息为核心实现的。</p>
<h3 id="3ruoyi-vue代码生成器源码分析">3.ruoyi-vue代码生成器源码分析</h3>
<p>ruoyi-vue代码生成器相关代码均位于ruoyi-generator模块中，根据之前的实际操作体验上来看，最简单的情况，前端页面只需要两步即可完成代码生成</p>
<ul>
<li>导入表结构</li>
<li>生成代码</li>
</ul>
<p>实际上这两步对应着后端的两个接口：<code>com.ruoyi.generator.controller.GenController#importTableSave</code> 和 <code>com.ruoyi.generator.controller.GenController#batchGenCode</code> ，生成源码的步骤就要从这两步下手。</p>
<p>首先看<code>com.ruoyi.generator.controller.GenController#importTableSave</code> 接口，它做了以下这些事情</p>
<ol>
<li>从information_schema数据库的tables表中查询目标表的表明、标注释、创建时间和更新时间，但是忽略掉定时任务的表和已经生成过的表。</li>
<li>初始化表数据并将数据插入ruoyi数据库的gen_table表</li>
<li>从information_schema数据库的columns表中查询目标表的列信息，包含字段名、字段注释、字段类型、是否允许为null等详细信息</li>
<li>初始化列信息并将数据插入ruoyi数据库的gen_table_column表</li>
</ol>
<p>接下来看下 <code>com.ruoyi.generator.controller.GenController#batchGenCode</code> 接口，它做了以下这些事情</p>
<ol>
<li>从ruoyi数据库的gen_table、gen_table_column表查询出生成代码需要的表和列信息。</li>
<li>初始化Velocity</li>
<li>准备Velocity上下文信息（变量值信息）</li>
<li>读取模板、渲染模板，然后将渲染后的模板内容添加进如压缩流，之后前端就可以下载zip压缩文件了。</li>
</ol>
<p>完毕。</p>
<h2 id="六、扩展篇：封装独立版ruoyi-vue代码生成器">六、扩展篇：封装独立版ruoyi-vue代码生成器</h2>
<h3 id="1为什么要做这个">1.为什么要做这个</h3>
<p>作为一个后端开发，我最经常做的事情不是搞啥系统架构，而是最简单的CRUD。。。若是能有一个代码一键生成工具自动根据已经创建的表信息生成CRUD后端代码，那岂不是能节省老鼻子功夫了——若依系统已经实现了这个代码生成器的工具，但是它依赖于前端页面，必须有权限访问“系统工具-代码生成”菜单才行，而这在企业中像我这种普通研发往往是是没有权限访问的。但是我有权限访问表，查看表结构。作为一个有追求的开发，既不肯开口问别人要权限，还想要实现代码生成器，该怎么做？</p>
<p>自己搞一个呗。</p>
<p>在这里封装的代码生成器不考虑前端页面调整功能，其实现的功能更加注重于后端代码，其作用和“系统工具-代码生成”页面中最简单的生成代码的两步（导入表和下载代码，无编辑）结果等效。</p>
<h3 id="2抽离ruoyi-vue代码生成器逻辑">2.抽离ruoyi-vue代码生成器逻辑</h3>
<p>ruoyi-vue中的ruoyi-generator模块有着完整的代码生成逻辑，但是它依托于ruoyi-admin的spring-boot框架才能运行，现在我要将ruoyi-generator模块的功能独立于spring-boot，让其作为一个普通的spring的程序，只有一个普通的main方法，实现和原来等效的功能。</p>
<p>这里的做法是直接修改ruoyi-generator模块，删除spring-boot的相关功能，但是保留spring、mybatis、druid等基础组件的依赖，然后将这些组件手动重新纳入spring容器中进行管理，最后通过main方法调用到相关模块。</p>
<p>具体就不展开讲了，有兴趣的可以看看我的源代码：<a href="https://gitee.com/kdyzm/ruoyi-vue-gen" target="_blank">https://gitee.com/kdyzm/ruoyi-vue-gen</a></p>
<h3 id="3独立版代码生成器使用方法">3.独立版代码生成器使用方法</h3>
<h4 id="31--配置applicationproperties配置文件">3.1  配置application.properties配置文件</h4>
<p>该配置文件的内容如下：</p>
<pre><code class="language-properties">mysql.username=${dbUserName}
mysql.password=${dbPassword}
mysql.connectionUrl=${dbUrl}
mysql.driverClass=${dbDriverClassName}

gen.author=kdyzm
gen.packageName=com.kdyzm.business
gen.autoRemovePre=false
gen.tableName=news
gen.tablePrefix=sys_
</code></pre>
<p>上半部分是数据库配置，连接的是ruoyi-vue数据库，正常配置即可；下半部分是生成配置，除了<code>gen.tableName</code>，其它配置和原ruoyi-vue代码生成器的配置相同。</p>
<p>要注意，代码生成结果仅使用用ruoyi-vue项目，如需自定义模板，需要修改源代码。</p>
<h4 id="32-打包和运行">3.2 打包和运行</h4>
<p>在项目根目录运行命令<code>mvn clean package</code>，打包完成之后切换到target目录，使用命令<code>java -jar ruoyi-vue-gen-1.0-SNAPSHOT.jar</code>运行jar包得到ruoyi.zip压缩文件</p>
<h2 id="七、项目源代码">七、项目源代码</h2>
<p>独立版代码生成器源代码：<a href="https://gitee.com/kdyzm/ruoyi-vue-gen" target="_blank">https://gitee.com/kdyzm/ruoyi-vue-gen</a></p>
<p>好了，ruoyi-vue代码生成器篇就到此结束了，欢迎关注我的博客 <a href="https://blog.kdyzm.cn" target="_blank">https://blog.kdyzm.cn</a> ~</p>

</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2021-02-26 16:00</span>&nbsp;
<a href="https://www.cnblogs.com/kuangdaoyizhimei/">狂盗一枝梅</a>&nbsp;
阅读(<span id="post_view_count">766</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14452736" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(14452736);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/10.3.1/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 147792, cb_blogApp = 'kuangdaoyizhimei', cb_blogUserGuid = 'bdaaad45-60a3-e211-82de-84c4f0333004';
    var cb_entryId = 14452736, cb_entryCreatedDate = '2021-02-26 16:00', cb_postType = 1;
    updatePostStats(
        [cb_entryId],
        function(id, count) { $("#post_view_count").text(count) },
        function(id, count) { $("#post_comment_count").text(count) })
    zoomManager.apply("#cnblogs_post_body img:not(.code_img_closed):not(.code_img_opened)");
</script>
<a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <div id="cnblogs_c1" class="under-post-card">
        <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>
    </div>
    <div id="under_post_card1"></div>
    <div id="cnblogs_c2" class="under-post-card">
        <div id='div-gpt-ad-1592366332455-0' style='width: 468px; height: 60px;'></div>
    </div>
    <div id="under_post_card2"></div>
    <div id="HistoryToday" class="under-post-card"></div>
    <script type="text/javascript">
       var commentManager = new blogCommentManager();
       commentManager.renderComments(0);
       fixPostBody();
       deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);       deliverT2();
       deliverC1C2();
       loadNewsAndKb();
       loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);       LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
       GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
       loadOptUnderPost();
       GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>

	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2021 狂盗一枝梅
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    <div id="page_end_html">
        <!-- ............自定义尾部代码开始............ -->
<div id="post-bottom-bar" class="post-bottom-bar" style="bottom: 0px;">
	<div class="bottom-bar-inner">
		<!-- 左边 -->
        <div class="bottom-bar-items social-share" style="float: left;">
            <span class="bottom-bar-item bottom-bar-facebook">
                <a id="bottom-d" href="javascript:void(0)" target="_blank">好文要赞</a>
            </span>
            <span class="bottom-bar-item bottom-bar-twitter">
                <a id="bottom-g" href="javascript:void(0)" target="_blank">关注我</a>
            </span>
            <span class="bottom-bar-item bottom-bar-qrcode">
                <a id="bottom-s" href="javascript:void(0)" target="_blank">收藏该文</a>
            </span>
        </div>
        <!-- 右边 -->
        <div class="bottom-bar-items right" style="float: right;">
            <span class="bottom-bar-item"><a id="mbottom-left" href="javascript:void(0);">←</a></span>
            <span class="bottom-bar-item"><a id="mbottom-right" href="javascript:void(0);">→</a></span>
            <span class="bottom-bar-item"><a href="#mfooter">↓</a></span>
            <span class="bottom-bar-item"><a href="#mtop">↑</a></span>
        </div>
	</div> 
</div>
<a name="mfooter"></a>

<!-- 遮罩层（用于图片点击放大），
    代码来自https://www.cnblogs.com/zhanxiaoyun/p/8259451.html-->
<div id="outerdiv" style="text-align: center;position: fixed;z-index: 1000;top: 0;left: 0;
    width: 100%;height: 100%;background-color: rgba(255,255,255,.9);display: none;">
    <img id="bigimg" style="height: auto;width: auto;border: 0; 
        margin: auto;position: absolute;top: 0;bottom: 0;left: 0;right: 0;">
</div>
<!-- ............自定义尾部代码结束............ -->


<script type="text/javascript" src="https://blog-static.cnblogs.com/files/summertime-wu/nprogress.js"></script>
<script type="text/javascript">

    //博主名称 可不改，默认取博客园提供的
    var nickName = null;
    //slogan
    var slogan = '立德立言，无闻西东';
    //icon
    var icon = "https://img2020.cnblogs.com/blog/516671/202104/516671-20210421182138882-1923189268.png";
    //默认博客背景图片
    var defaultPic="https://img2018.cnblogs.com/blog/1138447/201904/1138447-20190426121949417-1115592219.jpg";
    //icon(浏览器标题栏上的)
    var iconB="https://img2018.cnblogs.com/blog/1138447/201909/1138447-20190911161817172-1737762696.png";
    //友情链接地址
    var friendLink="https://www.cnblogs.com/kuangdaoyizhimei/p/14685396.html";
    //关于地址
    var aboutMe="https://www.cnblogs.com/kuangdaoyizhimei/p/14685428.html";
    //Github地址,假如博客username与Github username相同，不用改。
    //如 cnblogs.com/username github.com/username 这样就不用改
    var myGayhubUrl = "https://github.com/kdyzm";
</script>
<script type="text/javascript">
	/**
		用来设置初始时需要执行的js
	*/
	$(document).ready(function(){

        //获取博主名字
        if (nickName == null){
            var footerOverTestArray = $($("#footer")[0].childNodes[2]).text().trim().split(" ");
            nickName = footerOverTestArray[footerOverTestArray.length - 1];
        }

		//加载顶部进度条
	    NProgress.start();
	    NProgress.done();
	    $("#myProgressBar").hide();

	    //设置背景图片地址
	    if ($("#head_bg_img").val()!=null && $("#head_bg_img").val()!="") {
	    	$("#myheader_bg").css("background-image","url("+$("#head_bg_img").val()+")");
	    }else{
    		$("#myheader_bg").css("background-image","url("+defaultPic+")");
	    }

	    //设置标题
        if($("#cb_post_title_url").html()){
            $("#mypost_title_h").html($("#cb_post_title_url").html());
        }else{
            $("#mypost_title_h").html(nickName);
        }

	    //正文和标题淡入
	    $("#mainContent").css("opacity","1");
	    $("#mainContent").css("margin-top","0");
	    $("#mypost_title").css("opacity","1");
	    $("#mypost_title").css("top","75pt");

        /* --根据个人配置修改页面 start-- */
        //修改a链接
        var ccList = $(".c-c");
        for(var cc of ccList){
            $(cc).attr("href", $(cc).attr("href").replace("summertime-wu",currentBlogApp));
        }
        //设置Github链接
        if (myGayhubUrl != null ){$("#myGayhubUrl").attr("href",myGayhubUrl)}
        //设置友链的链接
        $("#friendLink").attr("href",friendLink);
        //设置关于的链接
        $("#aboutMe").attr("href",aboutMe);
        //设置两个iocn图标
        $("#nv-icon").attr("src",icon);
        var linkObject = document.createElement("link");
        linkObject.rel = "shortcut icon";
        linkObject.href = iconB;
        document.getElementsByTagName("head")[0].appendChild(linkObject);
        //设置底部栏按钮
        if (window.location.href == "https://www.cnblogs.com/"+currentBlogApp|| 
                window.location.href == "https://www.cnblogs.com/"+currentBlogApp+"/"||
                window.location.href == "http://www.cnblogs.com/"+currentBlogApp|| 
                window.location.href == "http://www.cnblogs.com/"+currentBlogApp+"/") {
            $("#bottom-d").html("友情链接");
            $("#bottom-d").attr("href",friendLink);
        }else{
            var url = window.location.href;
            var lastUrl = url.substring(url.lastIndexOf("/")+1);
            var mpageId = lastUrl.substring(0,lastUrl.indexOf("."));
            $("#bottom-d").click(function(){
                DiggIt(mpageId,cb_blogId,1);
                green_channel_success(this,'谢谢推荐！');
            })
        }
        /* --根据个人配置修改页面 end-- */
	})

	/**
		设置ajax请求加载完所有数据时执行的js
	*/
	setTimeout(afterAjax,1000);
	function afterAjax(){
		//假如是首页
		if (window.location.href == "https://www.cnblogs.com/"+currentBlogApp|| 
			window.location.href == "https://www.cnblogs.com/"+currentBlogApp+"/"||
			window.location.href == "http://www.cnblogs.com/"+currentBlogApp|| 
			window.location.href == "http://www.cnblogs.com/"+currentBlogApp+"/") {
			$("#mypost_title_e").html("<a href='https://cnblogs.com/"+currentBlogApp+"'>"+slogan+"</a>");
		}else{
		    var classification = null;
		    if ($("#BlogPostCategory").html()!=null && $("#BlogPostCategory").html()!= "") {
		    	classification = $("#BlogPostCategory").html();
		    	classification = classification.substring(3,classification.length);
		    }else{
		    	classification = "<a href='https://cnblogs.com/"+currentBlogApp+"'>暂未分类</a>";
		    }
		    var ftitle = "Published on "+ $("#post-date").html() + " in " +  classification
		    + " with <a href='https://cnblogs.com/"+currentBlogApp+"'>"+nickName+"</a>";
		    //设置副标题标题
		    $("#mypost_title_f").html(ftitle);
		    //设置标题分类按钮
		    $("#mypost_title_e").html(classification);
		    //设置底部导航条上一篇下一篇文章
		    var pnp = $("#post_next_prev a");
		    $("#mbottom-left").attr("href",pnp[1].href);
		    if (pnp.length>2) {
		    	$("#mbottom-right").attr("href",pnp[3].href);
		    }
		}
		$("#myheader_bg").css("filter","blur(0px)");

        //优化评论区样式
        $("#comment_form_container p:last").hide();
        $("#commentbox_opt a:last").hide();
        $("#tbCommentBody").attr('placeholder','Your comment here. Be cool. ');
	}


	/** 
		自定义的js方法
	*/
	//设置底部导航条点击关注按钮事件
	$("#bottom-g").click(function(){
		$('#green_channel_follow').click()
		return false
	})
	$("#bottom-s").click(function(){
		AddToWz(cb_entryId);
		return false;
	})


	//通过滚动条控制导航条的展现隐藏
	var oldScrollNum = 0;
	window.onscroll = function(){
		var t = document.documentElement.scrollTop || document.body.scrollTop;
		//下滑
		if (t>oldScrollNum) {
			if (t>120) {
				$("#mynavbar").css("margin-top","-70px");//顶部导航
				$("#post-bottom-bar").css("bottom","-3pc");//底部导航
			}
			if (t>300) {
				$("#right_meun").css("display","inline-block");//右侧导航
			}
		//上拉
		}else{
			//防止用a链接跳转也触发效果
			if (oldScrollNum-t<20) {
				$("#mynavbar").css("margin-top","0px");//顶部导航
				$("#post-bottom-bar").css("bottom","0");//底部导航
			}
			if (t<=300) {
				$("#right_meun").css("display","none");//右侧导航
			}
		}
		oldScrollNum = t;
	}

	//背景大图点击模糊||清晰
	$("#myheader_cover").click(function(){
		if ($("#myheader_bg").css("filter") == "blur(3px)") {
			$("#myheader_bg").css("filter","blur(0px)");
		}else{
			$("#myheader_bg").css("filter","blur(3px)");
		}
	})


    $("#outerdiv").click(function(){//再次点击淡出消失弹出层    
        $(this).fadeOut("fast");    
    }); 

 </script>

 <script type="text/javascript">  
    var setMyBlog = {
        setCopyright: function() {
            //设置版权信息，转载出处自动根据页面url生成
            var info_str = '<p>作者：<a target="_blank">@gzdaijie</a><br>'+
                '本文为作者原创，转载请注明出处：<a class="uri"></a></p><hr></hr>', 
                info = $(info_str),
                info_a = info.find("a"),
                url = window.location.href;
            $(info_a[0]).attr("href","https://github.com/gzdaijie");
            $(info_a[1]).attr("href",url).text(url);
            $("#cnblogs_post_body").prepend(info);
        },
        setCodeRow: function(){
            // 代码行号显示
            var pre = $("pre.sourceCode"); //选中需要更改的部分
            if(pre && pre.length){
                pre.each(function() {
                    var item = $(this);
                    var lang = item.attr("class").split(" ")[1]; //判断高亮的语言
                    item.html(item.html().replace(/<[^>]+>/g,"")); //将<pre>标签中的html标签去掉
                    item.removeClass().addClass("brush: " + lang +";"); //根据语言添加笔刷
                    SyntaxHighlighter.all();
                })
            }
        },
        setAtarget: function() {
            // 博客内的链接在新窗口打开
            $("#cnblogs_post_body a").each(function(){
                this.target = "_blank";
            }) 
        },
        setContent: function() {
            // 根据h2、h3标签自动生成目录
            var captions_ori = $("#cnblogs_post_body h2"),
            	captions_ori2 = $("#cnblogs_post_body h3"),
                captions = $("#cnblogs_post_body h2,#cnblogs_post_body h3").clone(),
                content = $("<ul id='right_meun'></ul>");
            $("#cnblogs_post_body").prepend(content.append(captions));
            var index = -1,index2 = -1;
            captions.replaceWith(function(){
                var self = this;
                if(self.tagName == "H2" || self.tagName == "h2"){
                    // 设置点击目录跳转
                    index += 1;
                    $('<a name="' + '_caption_' + index + '"></a>').insertBefore(captions_ori[index]); 
                    return '<li id="'+index+'li"><a href="#_caption_' + index + '">' + self.innerHTML + '</a><ul></ul></li>';
                } else {
                	// add by summertime-wu 增加h3链接跳转
                	index2 += 1;
                	$('<a name="' + '_caption' + index2 + '"></a>').insertBefore(captions_ori2[index2]); 
                	$("#"+index+"li ul").append("<li><a href='#_caption" + index2 + "' style='color:#5f5f5f;'>" +self.innerHTML+"</a></li>");
                    return ;
                }
            });
        },
        runAll: function() {
            /* 运行所有方法
             * setAtarget() 博客园内标签新窗口打开
             * setContent() 设置目录
             * setCopyright() 设置版权信息
             * setCodeRow() 代码行号显示
             */ 
            this.setAtarget(); 
            //假如为手机端不显示目录
            if(document.body.clientWidth>=1000){
                this.setContent();
            }
            // this.setCopyright();
            this.setCodeRow();
        }
    }
    setMyBlog.runAll();
</script>

<!-- 代码行号 -->
<script src="//cdn.bootcss.com/highlightjs-line-numbers.js/1.1.0/highlightjs-line-numbers.min.js"></script>
<script>hljs.initLineNumbersOnLoad();</script>
    </div>

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAjv522IqmkGbjF2F227iaZCgA7OfLSHl8tDGJ0Bd7vjxxhN8U5-4uTesJxhZuBf2gyjlHmXrNrGMpmYK2Hp4MI-K4SGl8wiRoB14Creq3uG53YVVvK7gg-yJs9iBo1v9mr4" />
</body>
</html>
