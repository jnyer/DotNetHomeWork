<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-crossorigin" />
    <meta name="description" content="Spring Security OAuth2.0认证授权系列文章 Spring Security OAuth2.0认证授权一：框架搭建和认证测试 Spring Security OAuth2.0认证授" />
    <meta property="og:description" content="Spring Security OAuth2.0认证授权系列文章 Spring Security OAuth2.0认证授权一：框架搭建和认证测试 Spring Security OAuth2.0认证授" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>Spring Security OAuth2.0认证授权四：分布式系统认证授权 - 狂盗一枝梅 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=zS6-e1bxywlu3kpHvpr1J6MySwya3ztFtEnS7RYQ0Fk" />
    <link id="MainCss" rel="stylesheet" href="/skins/bluesky/bundle-bluesky.min.css?v=crS-BJKdvIW2vVfJGJMix4EoW6XR-Z12_psc8V6YTNc" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/kuangdaoyizhimei/custom.css?v=tRPNC0STV2420eKosFf5BNi2g6U=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/bluesky/bundle-bluesky-mobile.min.css?v=R6fv62IpzGSvTM7pHsnRgkrk1El3gMSYm75Iwe80srs" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/kuangdaoyizhimei/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/kuangdaoyizhimei/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/kuangdaoyizhimei/wlwmanifest.xml" />
    <script>
        var currentBlogId = 147792;
        var currentBlogApp = 'kuangdaoyizhimei';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'BlueSky';
        var visitorUserId = '';
    </script>
        <script>
            var currentPostDateAdded = '2021-01-14 09:49';
        </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=yJQaJ16S00coMfzvh-NgF2zm2J87f5VfNamFdsnKHrc"></script>
    
    
    
</head>
<body class="no-navbar">
    <a name="top"></a>
    <div id="top_nav" class="navbar forpc navbar-custom">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    <div id="page_begin_html">
        <!-- ............自定义首部代码开始............ -->
<!-- 自定义进度条 -->
<div id="myProgressBar" style="display: none;"></div>

<!-- 自定义导航条 -->
<div id="mynavbar" style="margin-top: 0px;">
    <div style="position:relative;width:65pc;height:70px;margin:0 auto;">
    	<a style="width: auto;height: 22px;margin-left: 25px;" class="c-c"  href="https://www.cnblogs.com/kuangdaoyizhimei">
<img id="nv-icon" style="width: auto;height: 38px;outline: 0;margin-top: 12px;">

    	</a>
    	<div id="mynavbar_menu">
	    	<a href="https://www.cnblogs.com/summertime-wu" class="c-c">首页</a>
	    	<a href="https://msg.cnblogs.com/send/summertime-wu" class="c-c">联系</a>
	    	<a id="myGayhubUrl" href="https://github.com/Summertime-Wu" class="c-c">Github</a>
	    	<a id="friendLink" href="#">友情链接</a>
	    	<a href="https://www.cnblogs.com/">博客园</a>
            <a href="https://i.cnblogs.com/posts">管理</a>
	    	<a id="aboutMe" href="#">关于</a>
	    </div>
    </div>
</div>

<!-- 自定义头部锚点 -->
<a name="mtop"></a>

<!-- 自定义头部 -->
<div id="myheader">
	<!-- 背景图片 -->
    <div id="myheader_bg"></div>
    <!-- 遮罩层 -->
    <div id="myheader_cover" title="点我点我">
        <!-- 博客标题 -->
        <div id="mypost_title">
            <div id="mypost_title_h" style="font-weight: 500;font-size: 21px;"></div>
            <div id="mypost_title_f"></div>
            <div id="mypost_title_e">
                <a href="https://www.cnblogs.com/" class="c-c" style="">暂未分类</a>
            </div> 
        </div>  
    </div>
</div>
<!-- ............自定义首部代码结束............ -->
    </div>
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/kuangdaoyizhimei/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/kuangdaoyizhimei/">狂盗一枝梅</a>
</h1>
<h2></h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/kuangdaoyizhimei/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E7%8B%82%E7%9B%97%E4%B8%80%E6%9E%9D%E6%A2%85">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/kuangdaoyizhimei/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/kuangdaoyizhimei/p/14275559.html">
    <span>Spring Security OAuth2.0认证授权四：分布式系统认证授权</span>
    



</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>Spring Security OAuth2.0认证授权系列文章</p>
<blockquote>
<p><a href="https://blog.kdyzm.cn/post/24" target="_blank">Spring Security OAuth2.0认证授权一：框架搭建和认证测试</a><br>
<a href="https://blog.kdyzm.cn/post/25" target="_blank">Spring Security OAuth2.0认证授权二：搭建资源服务</a><br>
<a href="https://blog.kdyzm.cn/post/26" target="_blank">Spring Security OAuth2.0认证授权三：使用JWT令牌</a></p>
</blockquote>
<p>前面几篇文章讲解了如何从头开始搭建认证服务和资源服务，从颁发普通令牌到颁发jwt令牌，最终完成了jwt令牌的颁发和校验。本篇文章将会讲解分布式环境下如何进行认证和授权。</p>
<h2 id="一、设计思路">一、设计思路</h2>
<p><img src="https://img2020.cnblogs.com/news/516671/202101/516671-20210114093941879-2038643737.png;%20charset=UTF-8" alt="分布式授权图.png" loading="lazy"></p>
<p>一般来说，一个典型的分布式系统架构如上图所示，这里进行一个简单的设计，来完成分布式系统下的认证和授权。</p>
<p>整体设计思路是使用OAuth2.0颁发令牌，使用JWT对令牌签名并颁发JWT令牌给客户端。既然决定使用JWT令牌了，则不需要再调用认证服务器对令牌进行验证了，因为JWT本身就包含了所需要的信息，而且只要验签成功，则可认为令牌可信任且有效。</p>
<p>如上所述，则可以如此设计：</p>
<ol>
<li>用户请求登陆之后认证服务颁发令牌给用户，浏览器将令牌储存下来。</li>
<li>浏览器请求资源的的时候携带着令牌，网关拦截请求对令牌验证，验证的方法很简单，不请求认证服务而是直接使用密钥（对称或非对称）验签，只要验证成功则将jwt payload中的信息解析成明文放到请求头中转发请求到资源服务。</li>
<li>资源服务拿到明文信息，根据明文信息中的权限信息验证是否有权限访问该资源，有权限则返回资源信息，无权限则返回401。</li>
</ol>
<p>综上，整体思路就是网关认证，资源服务鉴权。</p>
<p>典型的微服务架构下会有注册中心、网关等服务，接下来会依次介绍和搭建相关服务。</p>
<h2 id="二、注册中心搭建">二、注册中心搭建</h2>
<p>为了方便程序本地调试方便，这里使用eureka server作为服务注册中心，使用起来也非常简单</p>
<h3 id="1添加maven依赖">1.添加maven依赖</h3>
<pre><code class="language-xml">&lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
        &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;
    &lt;/dependency&gt;

    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;
    &lt;/dependency&gt;
&lt;/dependencies&gt;
</code></pre>
<h3 id="2新建启动类">2.新建启动类</h3>
<pre><code class="language-java">@SpringBootApplication
@EnableEurekaServer
public class RegisterServer {
    public static void main(String[] args) {
        SpringApplication.run(RegisterServer.class,args);
    }
}
</code></pre>
<h3 id="3新建配置文件">3.新建配置文件</h3>
<pre><code class="language-yaml">spring:
  application:
    name: register-server

server:
  port: 8765 #启动端口

eureka:
  server:
    enable-self-preservation: false    #关闭服务器自我保护，客户端心跳检测15分钟内错误达到80%服务会保护，导致别人还认为是好用的服务
    eviction-interval-timer-in-ms: 10000 #清理间隔（单位毫秒，默认是60*1000）5秒将客户端剔除的服务在服务注册列表中剔除#
    shouldUseReadOnlyResponseCache: true #eureka是CAP理论种基于AP策略，为了保证强一致性关闭此切换CP 默认不关闭 false关闭
  client:
    register-with-eureka: false  #false:不作为一个客户端注册到注册中心
    fetch-registry: false      #为true时，可以启动，但报异常：Cannot execute request on any known server
    instance-info-replication-interval-seconds: 10
    serviceUrl:
      defaultZone: http://localhost:${server.port}/eureka/
  instance:
    hostname: ${spring.cloud.client.ip-address}
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}
</code></pre>
<p>然后启动启动类，访问浏览器，<a href="http://127.0.0.1:8765" target="_blank">http://127.0.0.1:8765</a>，出现如下页面即表示已经成功</p>
<p><img src="https://img2020.cnblogs.com/blog/516671/202101/516671-20210114093944072-1906516697.png;%20charset=UTF-8" alt="eureka server.png" loading="lazy"></p>
<h2 id="二、网关搭建">二、网关搭建</h2>
<p>这里选用spring cloud gateway作为网关（不是zuul）</p>
<h3 id="1添加maven依赖-1">1.添加maven依赖</h3>
<pre><code class="language-xml">&lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
        &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;
    &lt;/dependency&gt;
    &lt;!--gateway 依赖 --&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
        &lt;artifactId&gt;spring-cloud-starter-gateway&lt;/artifactId&gt;
        &lt;version&gt;2.2.5.RELEASE&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;!--actuator 依赖 --&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;
        &lt;artifactId&gt;lombok&lt;/artifactId&gt;
    &lt;/dependency&gt;
    &lt;!-- jwt依赖 --&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;
        &lt;artifactId&gt;spring-security-jwt&lt;/artifactId&gt;
    &lt;/dependency&gt;
&lt;/dependencies&gt;
</code></pre>
<h3 id="2新建启动类-1">2.新建启动类</h3>
<pre><code class="language-java">@SpringBootApplication
public class GatewayServer {

    public static void main(String[] args) {
        SpringApplication.run(GatewayServer.class, args);
    }
}
</code></pre>
<h3 id="3新建配置文件-1">3.新建配置文件</h3>
<pre><code class="language-yaml">server:
  port: 8761
spring:
  cloud:
    gateway:
      routes:
        - id: resource_server
          uri: "lb://resource-server"
          predicates:
            - Path=/r**
  application:
    name: gateway-server

eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:8765/eureka
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip‐address}:${spring.application.instance_id:${server.port}}
</code></pre>
<p>如此，一个网关就已经搭建好了，但是还不具备我们想要的认证功能。</p>
<h3 id="4添加token全局过滤器">4.添加token全局过滤器</h3>
<p>知识点有以下几点：</p>
<ul>
<li>全局过滤器要实现GlobalFilter接口</li>
<li>为了实现token过滤器最先被调用，要实现Order接口并将优先级调到最大</li>
<li>使用JwtHelper工具类对jwt验签，签名的key必须和认证中心中配置的key保持一致</li>
<li>验签成功后将jwt中payload明文信息放到token-info的header值中传递给目标服务</li>
</ul>
<p>实现代码如下：</p>
<pre><code class="language-java">@Component
@Slf4j
public class TokenFilter implements GlobalFilter, Ordered {
    private static final String BEAR_HEADER = "Bearer ";
    /**
     * 该值要和auth-server中配置的签名相同
     *
     * com.kdyzm.spring.security.auth.center.config.TokenConfig#SIGNING_KEY
     */
    private static final String SIGNING_KEY = "auth123";

    @Override
    public Mono&lt;Void&gt; filter(ServerWebExchange exchange, GatewayFilterChain chain) {
        String token = exchange.getRequest().getHeaders().getFirst(HttpHeaders.AUTHORIZATION);
        //如果没有token，则直接返回401
        if(StringUtils.isEmpty(token)){
            return unAuthorized(exchange);
        }
        //验签并获取PayLoad
        String payLoad;
        try {
            Jwt jwt = JwtHelper.decodeAndVerify(token.replace(BEAR_HEADER,""), new MacSigner(SIGNING_KEY));
            payLoad = jwt.getClaims();
        } catch (Exception e) {
            log.error("验签失败",e);
            return unAuthorized(exchange);
        }
        //将PayLoad数据放到header
        ServerHttpRequest.Builder builder = exchange.getRequest().mutate();
        builder.header("token-info", payLoad).build();
        //继续执行
        return chain.filter(exchange.mutate().request(builder.build()).build());
    }

    private Mono&lt;Void&gt; unAuthorized(ServerWebExchange exchange){
        exchange.getResponse().setStatusCode(HttpStatus.UNAUTHORIZED);
        return exchange.getResponse().setComplete();
    }

    /**
     * 将该过滤器的优先级设置为最高，因为只要认证不通过，就不能做任何事情
     *
     * @return
     */
    @Override
    public int getOrder() {
        return Ordered.HIGHEST_PRECEDENCE;
    }
}
</code></pre>
<h2 id="三、资源服务修改">三、资源服务修改</h2>
<p>原来资源服务已经集成了OAuth2.0、Spring Security、JWT等组件，根据现在的设计方案，需要删除OAuth2.0和JWT组件，只留下Spring Security组件。</p>
<h3 id="1移除oauth20、jwt组件">1.移除OAuth2.0、JWT组件</h3>
<p>这里要删除maven依赖，同时将相关配置删除</p>
<p><strong>第一步，删除maven依赖</strong>，直接将以下两个依赖移除就好</p>
<pre><code class="language-xml">&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
    &lt;artifactId&gt;spring-cloud-starter-oauth2&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;
    &lt;artifactId&gt;spring-security-jwt&lt;/artifactId&gt;
&lt;/dependency&gt;
</code></pre>
<p><strong>第二步，删除相关配置</strong></p>
<p>将ResouceServerConfig、TokenConfig两个类直接删除 即可。</p>
<h3 id="2添加过滤器">2.添加过滤器</h3>
<p>这里需要使用过滤器做，首先写一个过滤器，实现OncePerRequestFilter接口，该过滤器的作用就是获取网关传过来的token-info明文数据，封装成JwtTokenInfo对象，并将该相关信息添加到SpringSecurity上下文以备之后的鉴权使用。</p>
<p>代码实现如下：</p>
<pre><code class="language-java">@Component
@Slf4j
public class AuthFilterCustom extends OncePerRequestFilter {

    @Override
    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) throws ServletException, IOException {
        ObjectMapper objectMapper = new ObjectMapper();
        String tokenInfo=request.getHeader("token-info");
        if(StringUtils.isEmpty(tokenInfo)){
            log.info("未找到token信息");
            filterChain.doFilter(request,response);
            return;
        }
        JwtTokenInfo jwtTokenInfo = objectMapper.readValue(tokenInfo, JwtTokenInfo.class);
        log.info("tokenInfo={}",objectMapper.writeValueAsString(jwtTokenInfo));
        List&lt;String&gt; authorities1 = jwtTokenInfo.getAuthorities();
        String[] authorities=new String[authorities1.size()];
        authorities1.toArray(authorities);
        //将用户信息和权限填充 到用户身份token对象中
        UsernamePasswordAuthenticationToken authenticationToken
                = new UsernamePasswordAuthenticationToken(jwtTokenInfo.getUser_name(),null, AuthorityUtils.createAuthorityList(authorities));
        authenticationToken.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));
        //将authenticationToken填充到安全上下文
        SecurityContextHolder.getContext().setAuthentication(authenticationToken);
        filterChain.doFilter(request,response);
    }
}
</code></pre>
<h3 id="3将过滤器注册到过滤器链">3.将过滤器注册到过滤器链</h3>
<p>修改WebSecurityConfig类，使用如下方法注册过滤器：</p>
<pre><code class="language-java">.addFilterAfter(authFilterCustom, BasicAuthenticationFilter.class)//添加过滤器
</code></pre>
<p>同时，一定要关闭session功能，否则会出现上下文缓存问题</p>
<pre><code class="language-java">.sessionManagement()
                .sessionCreationPolicy(SessionCreationPolicy.STATELESS);//禁用session
</code></pre>
<p>完整代码如下：</p>
<pre><code class="language-java">    @Autowired
    private AuthFilterCustom authFilterCustom;

    @Override
    protected void configure(HttpSecurity http) throws Exception {
        http.csrf()
                .disable()
                .authorizeRequests()
//                .antMatchers("/r/r1").hasAuthority("p2")
//                .antMatchers("/r/r2").hasAuthority("p2")
                .antMatchers("/**").authenticated()//所有的请求必须认证通过
                .anyRequest().permitAll()//其它所有请求都可以随意访问
                .and()
                .addFilterAfter(authFilterCustom, BasicAuthenticationFilter.class)//添加过滤器
        .sessionManagement()
                .sessionCreationPolicy(SessionCreationPolicy.STATELESS);//禁用session

    }
</code></pre>
<h2 id="四、其他注意事项">四、其他注意事项</h2>
<p>认证服务auth-server以及资源服务resource-server、网关服务gateway-server都要集成eureka client组件</p>
<h2 id="五、测试">五、测试</h2>
<p>测试前需要将各个服务依次启动起来：</p>
<ul>
<li>启动注册中心 register-server：<a href="https://gitee.com/kdyzm/spring-security-oauth-study/tree/v5.0.0/register-server" target="_blank">https://gitee.com/kdyzm/spring-security-oauth-study/tree/v5.0.0/register-server</a></li>
<li>启动网关 gateway-server：<a href="https://gitee.com/kdyzm/spring-security-oauth-study/tree/v5.0.0/gateway-server" target="_blank">https://gitee.com/kdyzm/spring-security-oauth-study/tree/v5.0.0/gateway-server</a></li>
<li>启动认证服务 auth-server：<a href="https://gitee.com/kdyzm/spring-security-oauth-study/tree/v5.0.0/auth-server" target="_blank">https://gitee.com/kdyzm/spring-security-oauth-study/tree/v5.0.0/auth-server</a></li>
<li>启动资源服务 resource-server：<a href="https://gitee.com/kdyzm/spring-security-oauth-study/tree/v5.0.0/resource-server" target="_blank">https://gitee.com/kdyzm/spring-security-oauth-study/tree/v5.0.0/resource-server</a></li>
</ul>
<p><strong>第一步，获取token</strong></p>
<p>这里使用password模式直接获取token，POST请求如下接口：</p>
<p><a href="http://127.0.0.1:30000/oauth/token?client_id=c1&amp;client_secret=secret&amp;grant_type=password&amp;username=zhangsan&amp;password=123" target="_blank">http://127.0.0.1:30000/oauth/token?client_id=c1&amp;client_secret=secret&amp;grant_type=password&amp;username=zhangsan&amp;password=123</a></p>
<p>即可获取token。</p>
<p><strong>第二步，访问资源</strong></p>
<p>通过网关请求资源服务的r1接口，GET请求如下接口：</p>
<p><a href="http://127.0.0.1:8761/r1" target="_blank">http://127.0.0.1:8761/r1</a></p>
<p>需要带上Header，key为<code>Authorization</code>,value格式如下：</p>
<pre><code class="language-text">Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsicmVzMSJdLCJ1c2VyX25hbWUiOiJ6aGFuZ3NhbiIsInNjb3BlIjpbIlJPTEVfQURNSU4iLCJST0xFX1VTRVIiLCJST0xFX0FQSSJdLCJleHAiOjE2MTAzNzI5MzUsImF1dGhvcml0aWVzIjpbInAxIiwicDIiXSwianRpIjoiOWQzMzRmZGMtOTcwZC00YmJkLWI2MmMtZDU4MDZkNTgzM2YwIiwiY2xpZW50X2lkIjoiYzEifQ.gZraRNeX-o_jKiH7XQgg3TlUQBpxUcXa2-qR_Treu8U
</code></pre>
<p>如果相应结果如下，则表示测试通过</p>
<pre><code>访问资源r1
</code></pre>
<p>否则，会返回401状态码。</p>
<h2 id="六、项目源代码">六、项目源代码</h2>
<p>项目源代码：<a href="https://gitee.com/kdyzm/spring-security-oauth-study/tree/v5.0.0" target="_blank">https://gitee.com/kdyzm/spring-security-oauth-study/tree/v5.0.0</a></p>
<p>我的博客原文地址：<a href="https://blog.kdyzm.cn/post/30" target="_blank">https://blog.kdyzm.cn/post/30</a></p>

</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2021-01-14 09:49</span>&nbsp;
<a href="https://www.cnblogs.com/kuangdaoyizhimei/">狂盗一枝梅</a>&nbsp;
阅读(<span id="post_view_count">516</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14275559" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(14275559);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/10.3.1/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 147792, cb_blogApp = 'kuangdaoyizhimei', cb_blogUserGuid = 'bdaaad45-60a3-e211-82de-84c4f0333004';
    var cb_entryId = 14275559, cb_entryCreatedDate = '2021-01-14 09:49', cb_postType = 1;
    updatePostStats(
        [cb_entryId],
        function(id, count) { $("#post_view_count").text(count) },
        function(id, count) { $("#post_comment_count").text(count) })
    zoomManager.apply("#cnblogs_post_body img:not(.code_img_closed):not(.code_img_opened)");
</script>
<a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <div id="cnblogs_c1" class="under-post-card">
        <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>
    </div>
    <div id="under_post_card1"></div>
    <div id="cnblogs_c2" class="under-post-card">
        <div id='div-gpt-ad-1592366332455-0' style='width: 468px; height: 60px;'></div>
    </div>
    <div id="under_post_card2"></div>
    <div id="HistoryToday" class="under-post-card"></div>
    <script type="text/javascript">
       var commentManager = new blogCommentManager();
       commentManager.renderComments(0);
       fixPostBody();
       deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);       deliverT2();
       deliverC1C2();
       loadNewsAndKb();
       loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);       LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
       GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
       loadOptUnderPost();
       GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>

	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2021 狂盗一枝梅
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    <div id="page_end_html">
        <!-- ............自定义尾部代码开始............ -->
<div id="post-bottom-bar" class="post-bottom-bar" style="bottom: 0px;">
	<div class="bottom-bar-inner">
		<!-- 左边 -->
        <div class="bottom-bar-items social-share" style="float: left;">
            <span class="bottom-bar-item bottom-bar-facebook">
                <a id="bottom-d" href="javascript:void(0)" target="_blank">好文要赞</a>
            </span>
            <span class="bottom-bar-item bottom-bar-twitter">
                <a id="bottom-g" href="javascript:void(0)" target="_blank">关注我</a>
            </span>
            <span class="bottom-bar-item bottom-bar-qrcode">
                <a id="bottom-s" href="javascript:void(0)" target="_blank">收藏该文</a>
            </span>
        </div>
        <!-- 右边 -->
        <div class="bottom-bar-items right" style="float: right;">
            <span class="bottom-bar-item"><a id="mbottom-left" href="javascript:void(0);">←</a></span>
            <span class="bottom-bar-item"><a id="mbottom-right" href="javascript:void(0);">→</a></span>
            <span class="bottom-bar-item"><a href="#mfooter">↓</a></span>
            <span class="bottom-bar-item"><a href="#mtop">↑</a></span>
        </div>
	</div> 
</div>
<a name="mfooter"></a>

<!-- 遮罩层（用于图片点击放大），
    代码来自https://www.cnblogs.com/zhanxiaoyun/p/8259451.html-->
<div id="outerdiv" style="text-align: center;position: fixed;z-index: 1000;top: 0;left: 0;
    width: 100%;height: 100%;background-color: rgba(255,255,255,.9);display: none;">
    <img id="bigimg" style="height: auto;width: auto;border: 0; 
        margin: auto;position: absolute;top: 0;bottom: 0;left: 0;right: 0;">
</div>
<!-- ............自定义尾部代码结束............ -->


<script type="text/javascript" src="https://blog-static.cnblogs.com/files/summertime-wu/nprogress.js"></script>
<script type="text/javascript">

    //博主名称 可不改，默认取博客园提供的
    var nickName = null;
    //slogan
    var slogan = '立德立言，无闻西东';
    //icon
    var icon = "https://img2020.cnblogs.com/blog/516671/202104/516671-20210421182138882-1923189268.png";
    //默认博客背景图片
    var defaultPic="https://img2018.cnblogs.com/blog/1138447/201904/1138447-20190426121949417-1115592219.jpg";
    //icon(浏览器标题栏上的)
    var iconB="https://img2018.cnblogs.com/blog/1138447/201909/1138447-20190911161817172-1737762696.png";
    //友情链接地址
    var friendLink="https://www.cnblogs.com/kuangdaoyizhimei/p/14685396.html";
    //关于地址
    var aboutMe="https://www.cnblogs.com/kuangdaoyizhimei/p/14685428.html";
    //Github地址,假如博客username与Github username相同，不用改。
    //如 cnblogs.com/username github.com/username 这样就不用改
    var myGayhubUrl = "https://github.com/kdyzm";
</script>
<script type="text/javascript">
	/**
		用来设置初始时需要执行的js
	*/
	$(document).ready(function(){

        //获取博主名字
        if (nickName == null){
            var footerOverTestArray = $($("#footer")[0].childNodes[2]).text().trim().split(" ");
            nickName = footerOverTestArray[footerOverTestArray.length - 1];
        }

		//加载顶部进度条
	    NProgress.start();
	    NProgress.done();
	    $("#myProgressBar").hide();

	    //设置背景图片地址
	    if ($("#head_bg_img").val()!=null && $("#head_bg_img").val()!="") {
	    	$("#myheader_bg").css("background-image","url("+$("#head_bg_img").val()+")");
	    }else{
    		$("#myheader_bg").css("background-image","url("+defaultPic+")");
	    }

	    //设置标题
        if($("#cb_post_title_url").html()){
            $("#mypost_title_h").html($("#cb_post_title_url").html());
        }else{
            $("#mypost_title_h").html(nickName);
        }

	    //正文和标题淡入
	    $("#mainContent").css("opacity","1");
	    $("#mainContent").css("margin-top","0");
	    $("#mypost_title").css("opacity","1");
	    $("#mypost_title").css("top","75pt");

        /* --根据个人配置修改页面 start-- */
        //修改a链接
        var ccList = $(".c-c");
        for(var cc of ccList){
            $(cc).attr("href", $(cc).attr("href").replace("summertime-wu",currentBlogApp));
        }
        //设置Github链接
        if (myGayhubUrl != null ){$("#myGayhubUrl").attr("href",myGayhubUrl)}
        //设置友链的链接
        $("#friendLink").attr("href",friendLink);
        //设置关于的链接
        $("#aboutMe").attr("href",aboutMe);
        //设置两个iocn图标
        $("#nv-icon").attr("src",icon);
        var linkObject = document.createElement("link");
        linkObject.rel = "shortcut icon";
        linkObject.href = iconB;
        document.getElementsByTagName("head")[0].appendChild(linkObject);
        //设置底部栏按钮
        if (window.location.href == "https://www.cnblogs.com/"+currentBlogApp|| 
                window.location.href == "https://www.cnblogs.com/"+currentBlogApp+"/"||
                window.location.href == "http://www.cnblogs.com/"+currentBlogApp|| 
                window.location.href == "http://www.cnblogs.com/"+currentBlogApp+"/") {
            $("#bottom-d").html("友情链接");
            $("#bottom-d").attr("href",friendLink);
        }else{
            var url = window.location.href;
            var lastUrl = url.substring(url.lastIndexOf("/")+1);
            var mpageId = lastUrl.substring(0,lastUrl.indexOf("."));
            $("#bottom-d").click(function(){
                DiggIt(mpageId,cb_blogId,1);
                green_channel_success(this,'谢谢推荐！');
            })
        }
        /* --根据个人配置修改页面 end-- */
	})

	/**
		设置ajax请求加载完所有数据时执行的js
	*/
	setTimeout(afterAjax,1000);
	function afterAjax(){
		//假如是首页
		if (window.location.href == "https://www.cnblogs.com/"+currentBlogApp|| 
			window.location.href == "https://www.cnblogs.com/"+currentBlogApp+"/"||
			window.location.href == "http://www.cnblogs.com/"+currentBlogApp|| 
			window.location.href == "http://www.cnblogs.com/"+currentBlogApp+"/") {
			$("#mypost_title_e").html("<a href='https://cnblogs.com/"+currentBlogApp+"'>"+slogan+"</a>");
		}else{
		    var classification = null;
		    if ($("#BlogPostCategory").html()!=null && $("#BlogPostCategory").html()!= "") {
		    	classification = $("#BlogPostCategory").html();
		    	classification = classification.substring(3,classification.length);
		    }else{
		    	classification = "<a href='https://cnblogs.com/"+currentBlogApp+"'>暂未分类</a>";
		    }
		    var ftitle = "Published on "+ $("#post-date").html() + " in " +  classification
		    + " with <a href='https://cnblogs.com/"+currentBlogApp+"'>"+nickName+"</a>";
		    //设置副标题标题
		    $("#mypost_title_f").html(ftitle);
		    //设置标题分类按钮
		    $("#mypost_title_e").html(classification);
		    //设置底部导航条上一篇下一篇文章
		    var pnp = $("#post_next_prev a");
		    $("#mbottom-left").attr("href",pnp[1].href);
		    if (pnp.length>2) {
		    	$("#mbottom-right").attr("href",pnp[3].href);
		    }
		}
		$("#myheader_bg").css("filter","blur(0px)");

        //优化评论区样式
        $("#comment_form_container p:last").hide();
        $("#commentbox_opt a:last").hide();
        $("#tbCommentBody").attr('placeholder','Your comment here. Be cool. ');
	}


	/** 
		自定义的js方法
	*/
	//设置底部导航条点击关注按钮事件
	$("#bottom-g").click(function(){
		$('#green_channel_follow').click()
		return false
	})
	$("#bottom-s").click(function(){
		AddToWz(cb_entryId);
		return false;
	})


	//通过滚动条控制导航条的展现隐藏
	var oldScrollNum = 0;
	window.onscroll = function(){
		var t = document.documentElement.scrollTop || document.body.scrollTop;
		//下滑
		if (t>oldScrollNum) {
			if (t>120) {
				$("#mynavbar").css("margin-top","-70px");//顶部导航
				$("#post-bottom-bar").css("bottom","-3pc");//底部导航
			}
			if (t>300) {
				$("#right_meun").css("display","inline-block");//右侧导航
			}
		//上拉
		}else{
			//防止用a链接跳转也触发效果
			if (oldScrollNum-t<20) {
				$("#mynavbar").css("margin-top","0px");//顶部导航
				$("#post-bottom-bar").css("bottom","0");//底部导航
			}
			if (t<=300) {
				$("#right_meun").css("display","none");//右侧导航
			}
		}
		oldScrollNum = t;
	}

	//背景大图点击模糊||清晰
	$("#myheader_cover").click(function(){
		if ($("#myheader_bg").css("filter") == "blur(3px)") {
			$("#myheader_bg").css("filter","blur(0px)");
		}else{
			$("#myheader_bg").css("filter","blur(3px)");
		}
	})


    $("#outerdiv").click(function(){//再次点击淡出消失弹出层    
        $(this).fadeOut("fast");    
    }); 

 </script>

 <script type="text/javascript">  
    var setMyBlog = {
        setCopyright: function() {
            //设置版权信息，转载出处自动根据页面url生成
            var info_str = '<p>作者：<a target="_blank">@gzdaijie</a><br>'+
                '本文为作者原创，转载请注明出处：<a class="uri"></a></p><hr></hr>', 
                info = $(info_str),
                info_a = info.find("a"),
                url = window.location.href;
            $(info_a[0]).attr("href","https://github.com/gzdaijie");
            $(info_a[1]).attr("href",url).text(url);
            $("#cnblogs_post_body").prepend(info);
        },
        setCodeRow: function(){
            // 代码行号显示
            var pre = $("pre.sourceCode"); //选中需要更改的部分
            if(pre && pre.length){
                pre.each(function() {
                    var item = $(this);
                    var lang = item.attr("class").split(" ")[1]; //判断高亮的语言
                    item.html(item.html().replace(/<[^>]+>/g,"")); //将<pre>标签中的html标签去掉
                    item.removeClass().addClass("brush: " + lang +";"); //根据语言添加笔刷
                    SyntaxHighlighter.all();
                })
            }
        },
        setAtarget: function() {
            // 博客内的链接在新窗口打开
            $("#cnblogs_post_body a").each(function(){
                this.target = "_blank";
            }) 
        },
        setContent: function() {
            // 根据h2、h3标签自动生成目录
            var captions_ori = $("#cnblogs_post_body h2"),
            	captions_ori2 = $("#cnblogs_post_body h3"),
                captions = $("#cnblogs_post_body h2,#cnblogs_post_body h3").clone(),
                content = $("<ul id='right_meun'></ul>");
            $("#cnblogs_post_body").prepend(content.append(captions));
            var index = -1,index2 = -1;
            captions.replaceWith(function(){
                var self = this;
                if(self.tagName == "H2" || self.tagName == "h2"){
                    // 设置点击目录跳转
                    index += 1;
                    $('<a name="' + '_caption_' + index + '"></a>').insertBefore(captions_ori[index]); 
                    return '<li id="'+index+'li"><a href="#_caption_' + index + '">' + self.innerHTML + '</a><ul></ul></li>';
                } else {
                	// add by summertime-wu 增加h3链接跳转
                	index2 += 1;
                	$('<a name="' + '_caption' + index2 + '"></a>').insertBefore(captions_ori2[index2]); 
                	$("#"+index+"li ul").append("<li><a href='#_caption" + index2 + "' style='color:#5f5f5f;'>" +self.innerHTML+"</a></li>");
                    return ;
                }
            });
        },
        runAll: function() {
            /* 运行所有方法
             * setAtarget() 博客园内标签新窗口打开
             * setContent() 设置目录
             * setCopyright() 设置版权信息
             * setCodeRow() 代码行号显示
             */ 
            this.setAtarget(); 
            //假如为手机端不显示目录
            if(document.body.clientWidth>=1000){
                this.setContent();
            }
            // this.setCopyright();
            this.setCodeRow();
        }
    }
    setMyBlog.runAll();
</script>

<!-- 代码行号 -->
<script src="//cdn.bootcss.com/highlightjs-line-numbers.js/1.1.0/highlightjs-line-numbers.min.js"></script>
<script>hljs.initLineNumbersOnLoad();</script>
    </div>

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAjtDo5qtVtbs8hOeN6m7NDSqYEjPHvJ4EmT011niTKwBPIo2N6Zt_gDs5nByGbyOSh21if-lW0uHopceIPM0ia1xfUdwZzuA5ru60Fs_usFVHRK8sy-BZBj_Qujh3Y5UrZI" />
</body>
</html>
