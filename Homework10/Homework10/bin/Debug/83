<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="never" />
    <meta name="description" content="0. 前言 apiAutoTest从去年8月以来开源至今，也更新了不少内容，一起来看看吧 第一个版本 - 2020/08/08 增加实际响应存储数据的方法，并在字典可以处理依赖见tools/svae_" />
    <meta property="og:description" content="0. 前言 apiAutoTest从去年8月以来开源至今，也更新了不少内容，一起来看看吧 第一个版本 - 2020/08/08 增加实际响应存储数据的方法，并在字典可以处理依赖见tools/svae_" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>apiAutoTest：自动化测试用例中调用自定义函数的实现 - zy7y - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=zS6-e1bxywlu3kpHvpr1J6MySwya3ztFtEnS7RYQ0Fk" />
    <link id="MainCss" rel="stylesheet" href="/skins/blacklowkey/bundle-blacklowkey.min.css?v=1gj9-XJKL9BZFkjdvROYQPiPWjQXk-hsXXZGtqkfaSc" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/zy7y/custom.css?v=6vd15zmdoE&#x2B;ujQ1hzLwPf7pR01c=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/blacklowkey/bundle-blacklowkey-mobile.min.css?v=zrVn_w7PYXoSvEFaixHbQGlNNXNZ3h27-9PpkXZLYns" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/zy7y/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/zy7y/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/zy7y/wlwmanifest.xml" />
    <script>
        var currentBlogId = 525824;
        var currentBlogApp = 'zy7y';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'BlackLowKey';
        var visitorUserId = '';
    </script>
        <script>
            var currentPostDateAdded = '2021-02-27 04:33';
        </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=yJQaJ16S00coMfzvh-NgF2zm2J87f5VfNamFdsnKHrc"></script>
    
    
    
</head>
<body class="has-navbar">
    <a name="top"></a>
    <div id="top_nav" class="navbar forpc">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    <div id="page_begin_html">
        <a href="https://github.com/zy7y" target="_blank">
　　<img style="position: fixed; top: 0; right: 0; border: 0; z-index: 1;" src="https://images.cnblogs.com/cnblogs_com/jackson0714/779808/o_github.png" >
</a>
    </div>
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/zy7y/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/zy7y/">柒意</a>
</h1>
<h2>路漫漫其修远兮，吾将上下而求索。 -《离骚》
QQ群：851163511（没技术大佬，本站上的个人项目问题都可以在这里咨询）</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/zy7y/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/zy7y">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/zy7y/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/zy7y/p/14456202.html">
    <span>apiAutoTest：自动化测试用例中调用自定义函数的实现</span>
    



</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="0-前言">0. 前言</h1>
<p>apiAutoTest从去年8月以来开源至今，也更新了不少内容，一起来看看吧</p>
<ul>
<li>
<p>第一个版本</p>
<pre><code>- 2020/08/08 增加实际响应存储数据的方法，并在字典可以处理依赖见tools/svae_response.py

- 2020/08/09 实现多文件上传，接口中Path参数依赖处理
初步实现用迭代的方式来处理接口中的数据依赖关系
</code></pre>
</li>
<li>
<p>第二个版本</p>
<pre><code>- 2020/11/18 使用re库替换之前的字典迭代方式来处理数据依赖
- 2020/11/21 config.yaml文件中新增基准header设置
- 2020/11/22 支持预期结果中字段断言时使用语法糖来实现动态字段断言
- 2020/12/08 优化断言信息，增加数据库（支持mysql）查询操作， 使用`@pytest.fixture(scope="session")`来托管数据库对象，用例新增sql栏
- 2020/12/16 使用conftest.py 初始化用例， 增加失败重跑机制, 增加运行文件run，优化test_api.py冗余代码
</code></pre>
</li>
<li>
<p>第三个版本</p>
<pre><code>- 2021/01/19 添加数据清洗功能(测试开始前进行数据库备份-分别在服务器和本地进行，测试结束后将备份用以恢复数据-将尝试从服务器和本地恢复到服务器数据库中，docker部署的mysql服务已本地调试通过，直接linux部署的mysql并未测试)
- 2021/02/27 添加hooks.py文件(可在此处自定义方法,并用于用例当中，注意请务必在定义的方法中使用return),移除上次更新的eval语法糖，增加用例处理前的日志
</code></pre>
</li>
</ul>
<p>一度说不会再更新维护代码，结果还是慢慢的更新了...</p>
<h1 id="1-自定义函数实现的故事">1. 自定义函数实现的故事</h1>
<blockquote>
<p>这是今天更新的，主要需求来自一个apiAutoTest的学习者反馈，这里感谢他，在此之前另一个小伙伴说他需要用上个接口返回的id字段进行运算, 很多测试框架都有这个功能，但我给apiAutoTest的定位是个工具，也就造个轮子嘛</p>
</blockquote>
<p><img src="https://gitee.com/zy7y/blog_images/raw/master/img/20210227154756.png" alt="" loading="lazy"></p>
<h1 id="2-用例中如何使用自定义函数">2. 用例中如何使用自定义函数</h1>
<h2 id="21-在toolshookspy中定义好函数">2.1 在tools/hooks.py中定义好函数</h2>
<pre><code class="language-python">def get_current_highest():
    """获取当前时间戳"""
    return int(time.time())


def sum_data(a, b):
    """计算函数"""
    return a + b
</code></pre>
<h2 id="22-在用例中如何使用该函数">2.2 在用例中如何使用该函数</h2>
<blockquote>
<p>语法糖： @函数名()@: 使用无参数函数</p>
<p>@函数名(参数1, 参数2)@: 向函数传递参数</p>
<p>ps: <strong>函数参数兼容apiAutoTest中的提取依赖语法<code>&amp;此处为jsonpath语法&amp;</code></strong></p>
</blockquote>
<h3 id="用例怕截图不清所以就这里简易模拟了两条">用例(怕截图不清所以就这里简易模拟了两条)</h3>
<table>
<thead>
<tr>
<th>用例编号</th>
<th>用例标题</th>
<th>接口路径</th>
<th>是否执行</th>
<th>token操作</th>
<th>请求方式</th>
<th>入参关键字</th>
<th>上传文件</th>
<th>请求数据</th>
<th>后置sql</th>
<th>预期结果</th>
</tr>
</thead>
<tbody>
<tr>
<td>case_001</td>
<td>post请求实现登录</td>
<td>login</td>
<td>是</td>
<td>写</td>
<td>post</td>
<td>data</td>
<td></td>
<td>{"username": "admin", "password": "123456"}</td>
<td>select * from user where id=&amp;$.case_002.data.id&amp;;</td>
<td>{"$.meta":{ "msg": "登录成功", "status": 200 }}</td>
</tr>
<tr>
<td>case_002</td>
<td>调试函数sum_data(),从path需要运算</td>
<td>users/@sum_data(&amp;$.case_001.data.id&amp;, 2)@/</td>
<td>是</td>
<td>读</td>
<td>put</td>
<td>data</td>
<td></td>
<td>{"username": "tery","password": @sum_data(&amp;$.case_001.data.id&amp;, 66)@, "timer": @get_current_highest()@, "timer_str": " @get_current_highest()@"}</td>
<td></td>
<td>{"$.meta":{"msg": "设置状态成功", "status": 200}}</td>
</tr>
</tbody>
</table>
<h3 id="运行日志运行上述用例得到日志如下">运行日志(运行上述用例得到日志如下)</h3>
<pre><code class="language-log">   
2021-02-27 16:06:50.538 | DEBUG    | api.base_requests:send_request:34 - 用例进行处理前数据: 
 接口路径: login 
 请求参数: {"username": "admin", "password": "123456"} 
 后置sql: select * from user where id=&amp;$.case_002.data.id&amp;; 
 预期结果: {"$.meta":{ "msg": "登录成功", "status": 200 }}
2021-02-27 16:06:50.765 | INFO     | api.base_requests:send_api:81 - 
最终请求地址:http://www.ysqorz.top:8888/api/private/v1/login
请求方法:post
请求头:{'Accept-Encoding': 'gzip, deflate', 'Accept-Language': 'zh-CN,zh;q=0.9', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36'}
请求参数:{'username': 'admin', 'password': '123456'}
上传文件:None
响应数据:{'data': {'id': 500, 'rid': 0, 'username': 'admin', 'mobile': '12345678', 'email': 'adsfad@qq.com', 'token': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOjUwMCwicmlkIjowLCJpYXQiOjE2MTQ0MTMyMTAsImV4cCI6MTYxNDQ5OTYxMH0.cZTYLARKNj8SKlPGPdIUh9RmyQaYAJnJrLObaKiNiU4'}, 'meta': {'msg': '登录成功', 'status': 200}}
2021-02-27 16:06:50.773 | INFO     | tools.data_process:save_response:27 - 添加key: case_001, 对应value: {'data': {'id': 500, 'rid': 0, 'username': 'admin', 'mobile': '12345678', 'email': 'adsfad@qq.com', 'token': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOjUwMCwicmlkIjowLCJpYXQiOjE2MTQ0MTMyMTAsImV4cCI6MTYxNDQ5OTYxMH0.cZTYLARKNj8SKlPGPdIUh9RmyQaYAJnJrLObaKiNiU4'}, 'meta': {'msg': '登录成功', 'status': 200}}
2021-02-27 16:06:50.775 | INFO     | tools.data_process:assert_result:115 - 第1个断言,实际结果:{'msg': '登录成功', 'status': 200} | 预期结果:{'msg': '登录成功', 'status': 200} 
断言结果 True
2021-02-27 16:06:50.775 | DEBUG    | api.base_requests:send_request:34 - 用例进行处理前数据: 
 接口路径: users/@sum_data(&amp;$.case_001.data.id&amp;, 2)@/ 
 请求参数: {"username": "tery","password": @sum_data(&amp;$.case_001.data.id&amp;, 66)@, "timer":  @get_current_highest()@, "timer_str": " @get_current_highest()@"} 
 后置sql:  
 预期结果: {"$.meta":{"msg": "设置状态成功", "status": 200}}
2021-02-27 16:06:50.775 | DEBUG    | tools:rep_expr:45 - &amp;$.case_001.data.id&amp; 替换的值为 500 
2021-02-27 16:06:50.775 | DEBUG    | tools:rep_expr:50 - 执行hooks函数sum_data(500, 2) 替换的值为 502
2021-02-27 16:06:50.775 | DEBUG    | tools:rep_expr:45 - &amp;$.case_001.data.id&amp; 替换的值为 500 
2021-02-27 16:06:50.783 | DEBUG    | tools:rep_expr:50 - 执行hooks函数sum_data(500, 66) 替换的值为 566
2021-02-27 16:06:50.783 | DEBUG    | tools:rep_expr:50 - 执行hooks函数get_current_highest() 替换的值为 1614413210
2021-02-27 16:06:50.783 | DEBUG    | tools:rep_expr:50 - 执行hooks函数get_current_highest() 替换的值为 1614413210
2021-02-27 16:06:50.835 | INFO     | api.base_requests:send_api:81 - 
最终请求地址:http://www.ysqorz.top:8888/api/private/v1/users/502/
请求方法:put
请求头:{'Accept-Encoding': 'gzip, deflate', 'Accept-Language': 'zh-CN,zh;q=0.9', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOjUwMCwicmlkIjowLCJpYXQiOjE2MTQ0MTMyMTAsImV4cCI6MTYxNDQ5OTYxMH0.cZTYLARKNj8SKlPGPdIUh9RmyQaYAJnJrLObaKiNiU4'}
请求参数:{'username': 'tery', 'password': 566, 'timer': 1614413210, 'timer_str': ' 1614413210'}
上传文件:None
响应数据:{'data': {'id': 502, 'username': 'linken', 'role_id': 34}, 'meta': {'msg': '更新成功', 'status': 200}}
2021-02-27 16:06:50.835 | INFO     | tools.data_process:save_response:27 - 添加key: case_002, 对应value: {'data': {'id': 502, 'username': 'linken', 'role_id': 34}, 'meta': {'msg': '更新成功', 'status': 200}}
2021-02-27 16:06:50.835 | INFO     | tools.data_process:assert_result:115 - 第1个断言,实际结果:{'msg': '更新成功', 'status': 200} | 预期结果:{'msg': '设置状态成功', 'status': 200} 
断言结果 False
2021-02-27 16:06:53.418 | SUCCESS  | __main__:run:43 - 报告已生成
</code></pre>
<h3 id="分析日志">分析日志</h3>
<p>从上述日志可以看出语法糖<code>@sum_data(&amp;$.case_001.data.id&amp;, 2)@</code>运行之后的结果为<code>502</code>, 其处理的顺序则是先<code>&amp;$.case_001.data.id&amp;</code> 提取出来得到的值是500， 然后调用函数sum_data(500, 2)，然后运行这个函数并把结果502 与<code>@sum_data(&amp;$.case_001.data.id&amp;, 2)@</code>进行替换.</p>
<h1 id="3-自定义函数实现代码">3. 自定义函数实现代码</h1>
<blockquote>
<p>因为这里用例读取出来的内容是字符串，我影响中反射应该能做到这一点，然后就去找了下资料，然后我又找到<code>getattr()</code>这个内置函数但是这个函数不能解决用例带参数的函数问题，然后我把目光移到了<code>exec()</code>内置函数，该函数可以执行字符串的Python代码，然而我又遇到了问题，该函数里面执行的Python代码变量在其他函数中不能顺利取出来用，最后我找到了资料 在函数内部使用locals()得到一个局部变量字典，通过字典取值的方式 把exec中的变量 取出来</p>
</blockquote>
<h3 id="toolshookspy"><code>tools/hooks.py</code></h3>
<pre><code>#!/usr/bin/env python
# _*_ coding: utf-8 _*_
"""
@project: apiAutoTest
@file: hooks.py
@author: zy7y
@time: 2021/2/27
@site: https://cnblogs.com/zy7y
@github: https://github.com/zy7y
@gitee: https://gitee.com/zy7y
@desc: 扩展方法, 2021/02/27
关于exec执行python代码可查阅资料：https://python3-cookbook.readthedocs.io/zh_CN/latest/c09/p23_executing_code_with_local_side_effects.html

"""
import time

def exec_func(func: str) -&gt; str:
    """执行函数(exec可以执行Python代码)
    :params func 字符的形式调用函数
    : return 返回的将是个str类型的结果
    """
    # 得到一个局部的变量字典，来修正exec函数中的变量，在其他函数内部使用不到的问题
    loc = locals()
    exec(f"result = {func}")
    return str(loc['result'])


def get_current_highest():
    """获取当前时间戳"""
    return int(time.time())


def sum_data(a, b):
    """计算函数"""
    return a + b

</code></pre>
<h1 id="tools__init__py"><code>tools/__init__.py</code></h1>
<blockquote>
<p>写到这里发现篇幅过长了，所以这里就把改动的地方代码贴出来吧</p>
</blockquote>
<pre><code class="language-python">#!/usr/bin/env/python3
# -*- coding:utf-8 -*-
"""
@project: apiAutoTest
@author: zy7y
@file: __init__.py.py
@ide: PyCharm
@time: 2020/7/31
"""
import json
import re
import allure
from jsonpath import jsonpath
from loguru import logger

from tools.hooks import *


... 上方代码省略


def rep_expr(content: str, data: dict, expr: str = '&amp;(.*?)&amp;') -&gt; str:
    """从请求参数的字符串中，使用正则的方法找出合适的字符串内容并进行替换
    :param content: 原始的字符串内容
    :param data: 在该项目中一般为响应字典，从字典取值出来
    :param expr: 查找用的正则表达式
    return content： 替换表达式后的字符串
    """
    for ctt in re.findall(expr, content):
        content = content.replace(f'&amp;{ctt}&amp;', str(extractor(data, ctt)))
        logger.debug(f"&amp;{ctt}&amp; 替换的值为 {str(extractor(data, ctt))} ")
        
    # 增加自定义函数得的调用，函数写在tools/hooks.py中
    for func in re.findall('@(.*?)@', content):
        content = content.replace(f'@{func}@', exec_func(func))
        logger.debug(f"执行hooks函数{func} 替换的值为 {exec_func(func)}")

    return content

... 下方代码省略
</code></pre>
<h1 id="4-源码地址">4. 源码地址</h1>
<p>github: <a href="https://www.github.com/zy7y/apiAutoTest" target="_blank">https://www.github.com/zy7y/apiAutoTest</a></p>
<p>gitee: <a href="https://www.gitee.com/zy7y/apiAutoTest" target="_blank">https://www.gitee.com/zy7y/apiAutoTest</a></p>
<p><strong>其中最早版本(采用字典迭代方式处理依赖)在 version1.0分支</strong></p>
<h1 id="5-致谢">5. 致谢</h1>
<blockquote>
<p>感谢所有给予我帮助的人，文章，正在学习或使用apiAutoTest的同学们，其实个人开源这个项目以来个人有得到成就感，非常感谢</p>
</blockquote>
<p>参考资料:</p>
<p><a href="https://python3-cookbook.readthedocs.io/zh_CN/latest/c09/p23_executing_code_with_local_side_effects.html" target="_blank">python3-cookbook</a></p>
<h1 id="6-往日文章">6. 往日文章</h1>
<p><a href="https://www.cnblogs.com/zy7y/p/13426816.html" target="_blank">apiAutoTest: 开源啦</a></p>
<p><a href="https://www.cnblogs.com/zy7y/p/14022398.html" target="_blank">apiAutoTest: 使用re库来处理接口之前的数据依赖</a></p>
<p><a href="https://www.cnblogs.com/zy7y/p/14299472.html" target="_blank">apiAutoTest: 增加数据隔离(测试前后备份/还原数据库)</a></p>
<p><a href="https://www.cnblogs.com/zy7y/p/14456202.html" target="_blank">apiAutoTest: 增加自定义函数,用例中可以调用</a></p>

</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2021-02-27 16:33</span>&nbsp;
<a href="https://www.cnblogs.com/zy7y/">zy7y</a>&nbsp;
阅读(<span id="post_view_count">244</span>)&nbsp;
评论(<span id="post_comment_count">2</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14456202" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(14456202);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/10.3.1/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 525824, cb_blogApp = 'zy7y', cb_blogUserGuid = '8a430ad0-facd-4ae7-3443-08d5b93323ea';
    var cb_entryId = 14456202, cb_entryCreatedDate = '2021-02-27 16:33', cb_postType = 1;
    updatePostStats(
        [cb_entryId],
        function(id, count) { $("#post_view_count").text(count) },
        function(id, count) { $("#post_comment_count").text(count) })
    zoomManager.apply("#cnblogs_post_body img:not(.code_img_closed):not(.code_img_opened)");
</script>
<a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <div id="cnblogs_c1" class="under-post-card">
        <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>
    </div>
    <div id="under_post_card1"></div>
    <div id="cnblogs_c2" class="under-post-card">
        <div id='div-gpt-ad-1592366332455-0' style='width: 468px; height: 60px;'></div>
    </div>
    <div id="under_post_card2"></div>
    <div id="HistoryToday" class="under-post-card"></div>
    <script type="text/javascript">
       var commentManager = new blogCommentManager();
       commentManager.renderComments(0);
       fixPostBody();
       deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);       deliverT2();
       deliverC1C2();
       loadNewsAndKb();
       loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);       LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
       GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
       loadOptUnderPost();
       GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>

	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2021 zy7y
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAjv8Hxip7hPCtxbLTSpduPSspyiXL3l9xiuMm74gHAJ8oOhFuOO8tQt-8QSH0He1MZMh5Od9UQOl_7Q8F24_h3S-CoNUdAwn-vr4L9M_fZ07NHUdEdqIW3pnb0k0-MPLqJI" />
</body>
</html>
