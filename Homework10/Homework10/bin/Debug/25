<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-crossorigin" />
    <meta name="description" content="#汇编语言-基础知识 ##汇编语言的产生 计算机作为一个只能读懂和执行二进制的东西，在其刚被发明出时，都是用机器语言(01二进制形式表示)来写入程序，随着程序越来越复杂，需要更长的组合，不光一个微小的" />
    <meta property="og:description" content="#汇编语言-基础知识 ##汇编语言的产生 计算机作为一个只能读懂和执行二进制的东西，在其刚被发明出时，都是用机器语言(01二进制形式表示)来写入程序，随着程序越来越复杂，需要更长的组合，不光一个微小的" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>汇编语言-基础知识 - W&B - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=zS6-e1bxywlu3kpHvpr1J6MySwya3ztFtEnS7RYQ0Fk" />
    <link id="MainCss" rel="stylesheet" href="/skins/custom/bundle-custom.min.css?v=URnzNOcYasaxFfc79Balq6aK60x2WaH4sa2e1Ty6OO4" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/cs-Miscellaneous/custom.css?v=sa3SRlyCC3KTRsSMDECFS3NDj3Q=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/custom/bundle-custom-mobile.min.css?v=OayYBbtUbH4FYkn_bTL4VVf4DsEOiTHSWhbl11KyY6Y" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/cs-Miscellaneous/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/cs-Miscellaneous/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/cs-Miscellaneous/wlwmanifest.xml" />
    <script>
        var currentBlogId = 594405;
        var currentBlogApp = 'cs-Miscellaneous';
        var cb_enable_mathjax = true;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'Custom';
        var visitorUserId = '';
    </script>
        <script>
            var currentPostDateAdded = '2021-04-01 04:51';
        </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=yJQaJ16S00coMfzvh-NgF2zm2J87f5VfNamFdsnKHrc"></script>
    <script type="text/x-mathjax-config">
        MathJax.Hub.Config({
        tex2jax: { inlineMath: [['$','$'], ['\\(','\\)']], processClass: 'math', processEscapes: true },
        TeX: {
        equationNumbers: { autoNumber: ['AMS'], useLabelIds: true },
        extensions: ['extpfeil.js', 'mediawiki-texvc.js'],
        Macros: {bm: "\\boldsymbol"}
        },
        'HTML-CSS': { linebreaks: { automatic: true } },
        SVG: { linebreaks: { automatic: true } }
        });
    </script>
    <script src="https://mathjax.cnblogs.com/2_7_5/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;v=20200504"></script>
    
</head>
<body class="no-navbar">
    <a name="top"></a>
    <div id="top_nav" class="navbar forpc navbar-custom">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/cs-Miscellaneous/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/cs-Miscellaneous/"></a>
</h1>
<h2></h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/cs-Miscellaneous/">
首页</a>
</li>
<li>


</li>
<li>
</li>
<li>

<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/cs-Miscellaneous/p/14607089.html">
    <span>汇编语言-基础知识</span>
    



</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="汇编语言-基础知识">汇编语言-基础知识</h1>
<h2 id="汇编语言的产生">汇编语言的产生</h2>
<p>计算机作为一个只能读懂和执行二进制的东西，在其刚被发明出时，都是用机器语言(01二进制形式表示)来写入程序，随着程序越来越复杂，需要更长的组合，不光一个微小的0-&gt;1将会导致错误，以及过于难记忆与分辨。</p>
<p>随后找到了一种解决方法，将这些最基础二进制的指令，用一串字符表示，再由电脑的汇编器(Assembler)将这串字符转化成二进制机器语言，程序员只需要负责写汇编指令的源代码即可。</p>
<p>汇编语言由三部分组成：</p>
<ol>
<li>汇编指令(有与其专门对应的机器码)</li>
<li>伪指令(由汇编器执行,没有与其专门对应的机器码)</li>
<li>其他符号(如+，-，*，/由汇编器执行,没有与其专门对应的机器码)</li>
</ol>
<h2 id="程序放在哪里">程序放在哪里</h2>
<p>CPU是电脑能够运算的核心部件，但是想要指挥CPU，需要有指令和数据，储存运行中程序的指令和数据的就是常说的内存。对于磁盘中的数据， CPU无法直接直行，需要加载到内存中才可以被CPU所使用。</p>
<p>指令和数据一样，都是一串二进制码， CPU在工作的时候，会根据需要把它们解释成指令或者数据，例如<strong>1000101111000011</strong>这一串二进制码，它既可以表示数据8BC3_H，又可以表示指令mov ax, bx (8086CPU中)。</p>
<p>对于内存，目前的方式均为以8个bit即1byte为最小的存储单元(1byte可以保存8位二进制数)， CPU想从内存中读取或者存储数据，首先需要找到要存在内存的地址，传达控制信息是读入还是写入，以及读或写的数据。</p>
<p>在一台计算机中， CPU通过总线，与内存等外部设备进行连接，总线可分为三种，分别是地址总线，数据总线以及控制总线，字如其意，地址总线负责找到要读取或者储存的那个位置，数据总线负责数据的传输，控制总线负责传输要执行的行为是读入还是写入。对于8086CPU，他的地址总线有20根，数据总线有16根，也就是说他的寻址空间为2^20Byte,也就是最多可以寻址1MB内存，最多每次只能传输16bit(2Byte)的数据。控制总线与上面所说的地址总线和数据总线不同，他只是一个总称，是计算机不同控制线的集合，控制线分别连接于不同的 外部设备，控制线越多，能控制的外部设备就越多。</p>
<h2 id="内存的地址空间">内存的地址空间</h2>
<p>以典型的8086CPU为例子，他含有20条地址总线，寻址空间最大可达到2^20(00000 -&gt; FFFFF )yte。CPU有20条地址针脚，这些针脚被接在主板上的CPU槽位，通过主板上的地址线连接到各种bios(Base input/output system)，和拓展接口。</p>
<p>这些内存地址被分配给不同的功能器件，不同的计算机系统分配内存地址空间 的方式也不同，以8086CPU为例，00000到9FFFF为主存(RAM)空间，A0000到BFFFF为显存的地址空间，C0000到FFFFF为各类ROM(内容无法更改)地址空间。</p>
<h2 id="拆开cpu">拆开CPU</h2>
<p>一个典型的CPU内部，由运算器，寄存器和控制器等组成，这些器件之间靠内部总线连接，在上面部分说到的均为外部总线，他们被埋在主板中。简单来说：运算器负责执行运算操作，寄存器负责储存运算器要使用的数据，控制器负责控制各种器件协同工作。</p>
<p>对CPU来说，最能直接控制的是它的寄存器，我们通过控制寄存器，来实现对CPU的操作，不同的CPU寄存器的数量与结构不同。8086CPU包含14个寄存器,均为16bit，分别是：</p>
<ol>
<li>AX，BX，CX，DX，4个通用寄存器，可分为高低8位独立使用</li>
<li>CS，DS，ES，SS，4个段寄存器</li>
<li>BP，SP，SI，DI，4个指针寄存器</li>
<li>FR，标志寄存器</li>
<li>IP，程序计寄存数器<br>
<img src="https://img2020.cnblogs.com/blog/2001073/202104/2001073-20210401165001296-441042986.png" alt="" loading="lazy"></li>
</ol>
<h2 id="8086的寻址方式">8086的寻址方式</h2>
<p>对于8086CPU它包含20条地址总线，和16条数据总线，如何用16位达到20位的寻址呢？8086CPU采用的是：物理地址=段地址*16+段内偏移地址 的方式。比如说段地址是2000H，段内偏移地址是0016H，它所指向的物理地址就是20000H+0016H=20016H。在8086CPU中执行将断地址和段内偏移地址转化成物理地址的器件是地址加法器。</p>
<h2 id="cs段寄存器和ip寄存器">CS段寄存器和IP寄存器</h2>
<p>CS和IP可以说是CPU中最重要的两个寄存器，他们指示出CPU当前要读取的指令地址， CPU将CS<em>16+IP所指向的内存地址之后的若干个内存单元压入指令缓存区，通过对指令的解码来拆分出指令，和指令长度N，IP变为IP+N。</em>（8086CPU作为初代X86架构，是CISC指令集，每个指令及长度不等）*。</p>
<p>如果计算机只能按照IP不仅自增顺序执行的话那肯定是不行的，因为很显然，如果计算机不能循环，那么只能把重复的指令不停的写，这是非常不聪明的做法。想要实现循环就需要修改CS和IP寄存器中的内容，在之前有过例子，如果我们想将0045H放到寄存器ax，可以用<strong>mov ax, 0045H</strong>，但是这对CS和IP寄存器是不可以，系统没有提供直接对他们赋值的操作（mov ip, 0045H ;这样的是非法操作），改变他们内容的有一套专门的指令，被称为跳转指令。</p>
<pre><code>;跳转指令的用法
jmp 6000H:0984H ;同时修改CS段地址和IP地址 jmp CS段地址:IP地址
jmp 0984H       ;只修改IP地址,直接常数赋值
jmp AX          ;只修改IP地址,把ax的内容赋值给IP 
</code></pre>
<h2 id="数据在内存中的存储">数据在内存中的存储</h2>
<p>以8086CPU为例，在16位的寄存器，高8位储存高位字节，低8位储存低位字节。在内存里，16位的数据，高八位储存在高地址，低八位储存在低地址。</p>
<pre><code>mov ax,2000H ;将2000h放入ax
mov ds,ax    ;令ds为2000h
mov [0],8967H;把8967h放入2000:0000的位置
mov [2],3457H;把8967h放入2000:0002的位置

假想内存
|67|    20000
|89|    20001
|57|    20002
|34|    20003
</code></pre>
<p>CPU要读写一个内存单元的时候， 必须先给出这个内存单元的地址， 在8086PC 中，内存地址由段地址和偏移地址组成。8086CPU中有一个DS寄存器，通常用来存放耍访问数据的段地址。比如我们要读取20000H单元的字内容（取一个字，16bit）， 可以用如下的程序段进行。</p>
<pre><code>mov ax,2000H ;将2000h放入ax
mov ds,ax    ;令ds为2000h
mov ax,[0]   ;把8967h放入ax的位置
</code></pre>
<h2 id="计算机中的栈">计算机中的栈</h2>
<p>栈是一种很常用的数据结构，在计算机系统中通常用于函数嵌套时，保存调用函数的临时变量，8086 CPU同样也提供了栈功能，用指令push入栈，pop出栈。</p>
<pre><code>mov ax,2000H ;将2000h放入ax
push ax      ;将ax寄存器中的值压入栈中
pop bx       ;从栈中取出一个字放入bx中
</code></pre>
<p>和上面谈到数据如何储存在内存中，以及指令如何储存在内存中一样，栈是通过段寄存器 SS 和寄存器 SP，栈顶的段地址存放在 SS 中，偏移地址存放在 SP 中。任意时刻，SS:SP 指向栈顶元素。push 指令和 pop 指令执行时，CPU 从 SS 和 SP 中得到栈顶的地址。与指令与数据存储不同，计算机中的栈空间是从地址高位储存向低位，每次push压入元素，SP都会自减2，每次POP出栈，SP都会自增2。</p>
<pre><code>mov ax,1000H ;将2000h放入ax
mov ss,ax
mov ax,000FH
mov sp,ax
mov ax,7892H
push ax
pop bx

---------------PUSH前----------------
|  |10007
|  |10008
|  |10009
|  |1000A			SS=1000
|  |1000B			SP=000F
|  |1000C
|  |1000D
|  |1000E
|  |1000F
---------------PUSH后----------------
|  |10007
|  |10008
|  |10009
|  |1000A			SS=1000
|  |1000B			SP=000D
|  |1000C
|92|1000D
|78|1000E
|  |1000F
----------------POP后----------------
|  |10007
|  |10008
|  |10009
|  |1000A			SS=1000
|  |1000B			SP=000F
|  |1000C
|92|1000D
|78|1000E
|  |1000F
------------------------------------
</code></pre>
<p>可以注意到在执行PUSH操作时，SP是先自减2，然后再将SS：SP所指的内存地址中放入ax寄存器中的值，依旧遵照高位放在高地址，低位放在低地址。而执行POP操作时，并不改变内存中的值，只是将将SS：SP所指的内存地址中的值放入bx寄存器，随后SP自增2。</p>
<p>使用栈还有可能出现超出栈空间的问题，比如我们将10000-1000F设为栈地址，当连续10几次PUSH或POP的时候，SS：SP所指向的位置已经偏移出了栈地址，在8086CPU中并未对栈越界提供保护，只能靠自己小心不要超出。</p>
<p>除了上面用到的对通用寄存器PUSH和POP，还支持对段寄存器的操作，如PUSH DS，以以及对内存数据的操作 PUSH [0].</p>
<p>如何设置栈段：假如说我们希望将10000-1FFFF这块儿内存设为栈，初始的SS和SP应该设备多少呢？SS毋庸置疑为1000，上面说过SS：SP指所指向的地址是栈顶元素，当有一个16位的数据在栈中时，SP为FFFE，出栈后，SP=SP+2，SP=0，初始的SP应该是0。</p>

</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2021-04-01 16:51</span>&nbsp;
<a href="https://www.cnblogs.com/cs-Miscellaneous/">W&B</a>&nbsp;
阅读(<span id="post_view_count">396</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14607089" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(14607089);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/10.3.1/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 594405, cb_blogApp = 'cs-Miscellaneous', cb_blogUserGuid = '7c9ab77f-ea01-4350-99e2-08d7d7b52bb0';
    var cb_entryId = 14607089, cb_entryCreatedDate = '2021-04-01 16:51', cb_postType = 1;
    updatePostStats(
        [cb_entryId],
        function(id, count) { $("#post_view_count").text(count) },
        function(id, count) { $("#post_comment_count").text(count) })
    zoomManager.apply("#cnblogs_post_body img:not(.code_img_closed):not(.code_img_opened)");
</script>
<a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <div id="cnblogs_c1" class="under-post-card">
        <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>
    </div>
    <div id="under_post_card1"></div>
    <div id="cnblogs_c2" class="under-post-card">
        <div id='div-gpt-ad-1592366332455-0' style='width: 468px; height: 60px;'></div>
    </div>
    <div id="under_post_card2"></div>
    <div id="HistoryToday" class="under-post-card"></div>
    <script type="text/javascript">
       var commentManager = new blogCommentManager();
       commentManager.renderComments(0);
       fixPostBody();
       deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);       deliverT2();
       deliverC1C2();
       loadNewsAndKb();
       loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);       LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
       GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
       loadOptUnderPost();
       GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>

	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2021 W&amp;B
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAjs9SrM3SzchMs5GlQQeX2mEeivfFxbM0ctrfCHGr2vYKzn4oy4_ypO59-TVGYJ2OSyVeelnOEEQ5AZSiKXiIG3t60L69oiKXnf1mYqmqghi0cS1a-RpS5N3umTknHtf4ns" />
</body>
</html>
