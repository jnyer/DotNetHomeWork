<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-crossorigin" />
    
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>crossoverJie - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=Y1yBNCRf3ODEjYGJn208vPUnnX-rIyYVsZ75AvRbzGM" />
    <link id="MainCss" rel="stylesheet" href="/skins/loveisintheair/bundle-loveisintheair.min.css?v=2eeF5VFetkv0ebUrveBo_MjLCMmhO1B4PudZOUBLn1Y" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/crossoverJie/custom.css?v=H/XiXITCicADmCaA3IlWnJkLhys=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/loveisintheair/bundle-loveisintheair-mobile.min.css?v=YRGfW14H7zygWA_SxKeRyr-kyP2kOiJ7vj7-MC3lxPs" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/crossoverJie/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/crossoverJie/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/crossoverJie/wlwmanifest.xml" />
    <script>
        var currentBlogId = 441144;
        var currentBlogApp = 'crossoverJie';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'LoveIsIntheAir';
        var visitorUserId = '';
    </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=2Mic1VLeHXarpdzASbXqFMIMVLEBiWXNO5yiTHUcmhw"></script>
    
    
    
</head>
<body class="has-navbar">
    <a name="top"></a>
    <div id="top_nav" class="navbar forpc">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    <div id="page_begin_html">
        <a class="git-link" href="https://github.com/crossoverjie"></a>
    </div>
    
<!--done-->
<center>
<div id="home">
<div id="header">
	<div id="blogTitle">
	<a href="https://www.cnblogs.com/crossoverJie/"><img id="blogLogo" src="/skins/loveisintheair/images/logo.gif" alt="" /></a>			
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/crossoverJie/">crossoverJie</a>
</h1>
<h2>You never know what you can do till you try.</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
	<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
	<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/crossoverJie/">
首页</a>
</li>
	<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
	<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/crossoverJie">
联系</a></li>
	<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
	<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/crossoverJie/rss/">
订阅</a>
	
<a id="blog_nav_rss_image" href="https://www.cnblogs.com/crossoverJie/rss/">
    <img src="/skins/loveisintheair/images/xml.gif" alt="订阅" />
</a></li>
</ul>


		<div class="blogStats">
			
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div class="clear"></div>
	<div id="topicList">
		





		


<div class="day">
	<div class="dayTitle">
		<a href="https://www.cnblogs.com/crossoverJie/archive/2019/01/02.html">2019年1月2日</a>				  
	</div>

	
			<div class="postTitle">
				

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/crossoverJie/p/10206724.html">
    <span>
            <span>[置顶]</span>
        为自己搭建一个分布式 IM(即时通讯) 系统
    </span>
    



</a>

			</div>
			<div class="postCon">

    <div class="c_b_p_desc">
摘要：新的一年第一篇技术文章希望开个好头，所以元旦三天我也没怎么闲着，希望给大家带来一篇比较感兴趣的干货内容。

老读者应该还记得我在去年国庆节前分享过一篇《设计一个百万级的消息推送系统》；虽然我在文中有贴一些伪代码，依然有些朋友希望能直接分享一些可以运行的源码；这么久了是时候把坑填上了。        <a href="https://www.cnblogs.com/crossoverJie/p/10206724.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2019-01-02 08:03
crossoverJie
<span data-post-id="10206724" class="post-view-count">阅读(12624)</span> 
<span data-post-id="10206724" class="post-comment-count">评论(29)</span> 
<span data-post-id="10206724" class="post-digg-count">推荐(41)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=10206724" rel="nofollow">
    编辑
</a>
</div>
			<div class="clear"></div>

</div>


		


<div class="day">
	<div class="dayTitle">
		<a href="https://www.cnblogs.com/crossoverJie/archive/2018/09/25.html">2018年9月25日</a>				  
	</div>

	
			<div class="postTitle">
				

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/crossoverJie/p/9696674.html">
    <span>
            <span>[置顶]</span>
        设计一个百万级的消息推送系统
    </span>
    



</a>

			</div>
			<div class="postCon">

    <div class="c_b_p_desc">
摘要：首先迟到的祝大家中秋快乐。

最近一周多没有更新了。其实我一直想憋一个大招，分享一些大家感兴趣的干货。

鉴于最近我个人的工作内容，于是利用这三天小长假憋了一个出来（其实是玩了两天🤣）。        <a href="https://www.cnblogs.com/crossoverJie/p/9696674.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2018-09-25 08:22
crossoverJie
<span data-post-id="9696674" class="post-view-count">阅读(10867)</span> 
<span data-post-id="9696674" class="post-comment-count">评论(33)</span> 
<span data-post-id="9696674" class="post-digg-count">推荐(28)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=9696674" rel="nofollow">
    编辑
</a>
</div>
			<div class="clear"></div>

</div>


		


<div class="day">
	<div class="dayTitle">
		<a href="https://www.cnblogs.com/crossoverJie/archive/2018/08/13.html">2018年8月13日</a>				  
	</div>

	
			<div class="postTitle">
				

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/crossoverJie/p/9464911.html">
    <span>
            <span>[置顶]</span>
        如何成为一位「不那么差」的程序员
    </span>
    



</a>

			</div>
			<div class="postCon">

    <div class="c_b_p_desc">
摘要：已经记不清有多少读者问过：

博主，你是怎么学习的？像我这样的情况有啥好的建议嘛？

也不知道啥时候我居然成人生导师了。当然我不排斥这些问题，和大家交流都是学习的过程。        <a href="https://www.cnblogs.com/crossoverJie/p/9464911.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2018-08-13 08:05
crossoverJie
<span data-post-id="9464911" class="post-view-count">阅读(3234)</span> 
<span data-post-id="9464911" class="post-comment-count">评论(16)</span> 
<span data-post-id="9464911" class="post-digg-count">推荐(25)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=9464911" rel="nofollow">
    编辑
</a>
</div>
			<div class="clear"></div>

</div>


		


<div class="day">
	<div class="dayTitle">
		<a href="https://www.cnblogs.com/crossoverJie/archive/2018/07/26.html">2018年7月26日</a>				  
	</div>

	
			<div class="postTitle">
				

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/crossoverJie/p/9367833.html">
    <span>
            <span>[置顶]</span>
        秒杀架构实践
    </span>
    



</a>

			</div>
			<div class="postCon">

    <div class="c_b_p_desc">
摘要：之前在 Java-Interview 中提到过秒杀架构的设计，这次基于其中的理论简单实现了一下。

本次采用循序渐进的方式逐步提高性能达到并发秒杀的效果，文章较长请准备好瓜子板凳(liushuizhang😂)。        <a href="https://www.cnblogs.com/crossoverJie/p/9367833.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2018-07-26 08:02
crossoverJie
<span data-post-id="9367833" class="post-view-count">阅读(2427)</span> 
<span data-post-id="9367833" class="post-comment-count">评论(12)</span> 
<span data-post-id="9367833" class="post-digg-count">推荐(14)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=9367833" rel="nofollow">
    编辑
</a>
</div>
			<div class="clear"></div>

</div>


		


<div class="day">
	<div class="dayTitle">
		<a href="https://www.cnblogs.com/crossoverJie/archive/2021/05/18.html">2021年5月18日</a>				  
	</div>

	
			<div class="postTitle">
				

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/crossoverJie/p/14782361.html">
    <span>
        自带的 print 函数居然会报错？
    </span>
    



</a>

			</div>
			<div class="postCon">

    <div class="c_b_p_desc">
摘要：前言 最近用 Python 写了几个简单的脚本来处理一些数据，因为只是简单功能所以我就直接使用 print 来打印日志。 任务运行时偶尔会出现一些异常： 因为我在不同地方都有打印日志，导致每次报错的地方都不太一样，从而导致程序运行结果非常诡异；有时候是这段代码没有运行，下一次就可能是另外一段代码没有        <a href="https://www.cnblogs.com/crossoverJie/p/14782361.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2021-05-18 19:35
crossoverJie
<span data-post-id="14782361" class="post-view-count">阅读(873)</span> 
<span data-post-id="14782361" class="post-comment-count">评论(4)</span> 
<span data-post-id="14782361" class="post-digg-count">推荐(2)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14782361" rel="nofollow">
    编辑
</a>
</div>
			<div class="clear"></div>

</div>


		


<div class="day">
	<div class="dayTitle">
		<a href="https://www.cnblogs.com/crossoverJie/archive/2021/03/29.html">2021年3月29日</a>				  
	</div>

	
			<div class="postTitle">
				

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/crossoverJie/p/14591124.html">
    <span>
        Github Actions 还能做这些事
    </span>
    



</a>

			</div>
			<div class="postCon">

    <div class="c_b_p_desc">
摘要：前言 最近公司内部项目的发布流程接入了 GitHub Actions，整个体验过程还是比较美好的；本文主要目的是对于没有还接触过 GitHub Actions的新手，能够利用它快速构建自动测试及打包推送 Docker 镜像等自动化流程。 创建项目 本文主要以 Go 语言为例，当然其他语言也是类似的，        <a href="https://www.cnblogs.com/crossoverJie/p/14591124.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2021-03-29 09:46
crossoverJie
<span data-post-id="14591124" class="post-view-count">阅读(239)</span> 
<span data-post-id="14591124" class="post-comment-count">评论(3)</span> 
<span data-post-id="14591124" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14591124" rel="nofollow">
    编辑
</a>
</div>
			<div class="clear"></div>

</div>


		


<div class="day">
	<div class="dayTitle">
		<a href="https://www.cnblogs.com/crossoverJie/archive/2021/03/17.html">2021年3月17日</a>				  
	</div>

	
			<div class="postTitle">
				

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/crossoverJie/p/14547776.html">
    <span>
        写了一个 gorm 乐观锁插件
    </span>
    



</a>

			</div>
			<div class="postCon">

    <div class="c_b_p_desc">
摘要：前言 最近在用 Go 写业务的时碰到了并发更新数据的场景，由于该业务并发度不高，只是为了防止出现并发时数据异常。 所以自然就想到了乐观锁的解决方案。 实现 乐观锁的实现比较简单，相信大部分有数据库使用经验的都能想到。 UPDATE `table` SET `amount`=100,`version`        <a href="https://www.cnblogs.com/crossoverJie/p/14547776.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2021-03-17 10:09
crossoverJie
<span data-post-id="14547776" class="post-view-count">阅读(293)</span> 
<span data-post-id="14547776" class="post-comment-count">评论(0)</span> 
<span data-post-id="14547776" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14547776" rel="nofollow">
    编辑
</a>
</div>
			<div class="clear"></div>

</div>


		


<div class="day">
	<div class="dayTitle">
		<a href="https://www.cnblogs.com/crossoverJie/archive/2021/02/23.html">2021年2月23日</a>				  
	</div>

	
			<div class="postTitle">
				

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/crossoverJie/p/14437496.html">
    <span>
        Go 去找个对象吧
    </span>
    



</a>

			</div>
			<div class="postCon">

    <div class="c_b_p_desc">
摘要：前言 我的读者中应该大部分都是 Java 从业者，不知道写 Java 这些年是否真的有找到对象？ 没找到也没关系，总不能在一棵树上吊死，我们也可以来 Go 这边看看，说不定会有新发现。 开个玩笑，本文会以一个 Javaer 的角度来聊聊 Go 语言中的面向对象。 OOP 面向对象这一词来源于Obje        <a href="https://www.cnblogs.com/crossoverJie/p/14437496.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2021-02-23 18:20
crossoverJie
<span data-post-id="14437496" class="post-view-count">阅读(269)</span> 
<span data-post-id="14437496" class="post-comment-count">评论(0)</span> 
<span data-post-id="14437496" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14437496" rel="nofollow">
    编辑
</a>
</div>
			<div class="clear"></div>

</div>


		


<div class="day">
	<div class="dayTitle">
		<a href="https://www.cnblogs.com/crossoverJie/archive/2021/01/15.html">2021年1月15日</a>				  
	</div>

	
			<div class="postTitle">
				

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/crossoverJie/p/14283237.html">
    <span>
        Python 中的面向接口编程
    </span>
    



</a>

			</div>
			<div class="postCon">

    <div class="c_b_p_desc">
摘要：前言 ”面向接口编程“写 Java 的朋友耳朵已经可以听出干茧了吧，当然这个思想在 Java 中非常重要，甚至几乎所有的编程语言都需要，毕竟程序具有良好的扩展性、维护性谁都不能拒绝。 最近无意间看到了我刚开始写 Python 时的部分代码，当时实现的需求有个很明显的特点： 不同对象具有公共的行为能力        <a href="https://www.cnblogs.com/crossoverJie/p/14283237.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2021-01-15 17:26
crossoverJie
<span data-post-id="14283237" class="post-view-count">阅读(282)</span> 
<span data-post-id="14283237" class="post-comment-count">评论(0)</span> 
<span data-post-id="14283237" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14283237" rel="nofollow">
    编辑
</a>
</div>
			<div class="clear"></div>

</div>


		


<div class="day">
	<div class="dayTitle">
		<a href="https://www.cnblogs.com/crossoverJie/archive/2021/01/12.html">2021年1月12日</a>				  
	</div>

	
			<div class="postTitle">
				

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/crossoverJie/p/14268885.html">
    <span>
        一文搞懂参数传递原理
    </span>
    



</a>

			</div>
			<div class="postCon">

    <div class="c_b_p_desc">
摘要：前言 最近一年多的时间陆续接触了一些对我来说陌生的语言，主要就是 Python 和 Go，期间为了快速实现需求只是依葫芦画瓢的撸代码；并没有深究一些细节与原理。 就拿参数传递一事来说各个语言的实现细节各不相同，但又有类似之处；在许多新手入门时容易搞不清楚，导致犯一些低级错误。 Java 基本类型传递        <a href="https://www.cnblogs.com/crossoverJie/p/14268885.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2021-01-12 19:19
crossoverJie
<span data-post-id="14268885" class="post-view-count">阅读(293)</span> 
<span data-post-id="14268885" class="post-comment-count">评论(0)</span> 
<span data-post-id="14268885" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14268885" rel="nofollow">
    编辑
</a>
</div>
			<div class="clear"></div>

</div>


		


<div class="day">
	<div class="dayTitle">
		<a href="https://www.cnblogs.com/crossoverJie/archive/2020/12/09.html">2020年12月9日</a>				  
	</div>

	
			<div class="postTitle">
				

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/crossoverJie/p/14109763.html">
    <span>
        一个小时学会用 Go 编写命令行工具
    </span>
    



</a>

			</div>
			<div class="postCon">

    <div class="c_b_p_desc">
摘要：前言 最近因为项目需要写了一段时间的 Go ，相对于 Java 来说语法简单同时又有着一些 Python 之类的语法糖，让人大呼”真香“。 但现阶段相对来说还是 Python 写的多一些，偶尔还得回炉写点 Java ；自然对 Go 也谈不上多熟悉。 于是便利用周末时间自己做个小项目来加深一些使用经验        <a href="https://www.cnblogs.com/crossoverJie/p/14109763.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2020-12-09 17:14
crossoverJie
<span data-post-id="14109763" class="post-view-count">阅读(495)</span> 
<span data-post-id="14109763" class="post-comment-count">评论(0)</span> 
<span data-post-id="14109763" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14109763" rel="nofollow">
    编辑
</a>
</div>
			<div class="clear"></div>

</div>


		


<div class="day">
	<div class="dayTitle">
		<a href="https://www.cnblogs.com/crossoverJie/archive/2020/10/10.html">2020年10月10日</a>				  
	</div>

	
			<div class="postTitle">
				

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/crossoverJie/p/13783491.html">
    <span>
        不同语言对单例模式的不同实现
    </span>
    



</a>

			</div>
			<div class="postCon">

    <div class="c_b_p_desc">
摘要：前言 前段时间在用 Python 实现业务的时候发现一个坑，准确的来说是对于 Python 门外汉容易踩的坑； 大概代码如下： class Mom(object): name = &#39;&#39; sons = [] if __name__ == &#39;__main__&#39;: m1 = Mom() m1.name =        <a href="https://www.cnblogs.com/crossoverJie/p/13783491.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2020-10-10 11:16
crossoverJie
<span data-post-id="13783491" class="post-view-count">阅读(108)</span> 
<span data-post-id="13783491" class="post-comment-count">评论(0)</span> 
<span data-post-id="13783491" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13783491" rel="nofollow">
    编辑
</a>
</div>
			<div class="clear"></div>

</div>


		


<div class="day">
	<div class="dayTitle">
		<a href="https://www.cnblogs.com/crossoverJie/archive/2020/10/09.html">2020年10月9日</a>				  
	</div>

	
			<div class="postTitle">
				

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/crossoverJie/p/13783463.html">
    <span>
        ElasticSearch 索引 VS MySQL 索引
    </span>
    



</a>

			</div>
			<div class="postCon">

    <div class="c_b_p_desc">
摘要：前言 这段时间在维护产品的搜索功能，每次在管理台看到 elasticsearch 这么高效的查询效率我都很好奇他是如何做到的。 这甚至比在我本地使用 MySQL 通过主键的查询速度还快。 为此我搜索了相关资料： 这类问题网上很多答案，大概意思呢如下： ES 是基于 Lucene 的全文检索引擎，它会        <a href="https://www.cnblogs.com/crossoverJie/p/13783463.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2020-10-09 01:11
crossoverJie
<span data-post-id="13783463" class="post-view-count">阅读(2635)</span> 
<span data-post-id="13783463" class="post-comment-count">评论(6)</span> 
<span data-post-id="13783463" class="post-digg-count">推荐(17)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13783463" rel="nofollow">
    编辑
</a>
</div>
			<div class="clear"></div>

</div>


		


<div class="day">
	<div class="dayTitle">
		<a href="https://www.cnblogs.com/crossoverJie/archive/2020/07/30.html">2020年7月30日</a>				  
	</div>

	
			<div class="postTitle">
				

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/crossoverJie/p/13401740.html">
    <span>
        撸了一个 Feign 增强包
    </span>
    



</a>

			</div>
			<div class="postCon">

    <div class="c_b_p_desc">
摘要：前言 最近准备将公司的一个核心业务系统用 Java 进行重构，大半年没写 Java ，JDK 都更新到 14 了，考虑到稳定性等问题最终还是选择的 JDK11。 在整体架构选型时，由于是一个全新的系统，所以没有历史包袱，同时团队中也有多位大牛坐镇，因此我们的选项便大胆起来。 最终结果就是直接一把梭，        <a href="https://www.cnblogs.com/crossoverJie/p/13401740.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2020-07-30 08:26
crossoverJie
<span data-post-id="13401740" class="post-view-count">阅读(622)</span> 
<span data-post-id="13401740" class="post-comment-count">评论(5)</span> 
<span data-post-id="13401740" class="post-digg-count">推荐(3)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13401740" rel="nofollow">
    编辑
</a>
</div>
			<div class="clear"></div>

</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        
    <a href="https://www.cnblogs.com/crossoverJie/default.html?page=2">
        下一页
    </a>

    </div>    
</div>






<script>
    updatePostStats(
        $(".post-view-count").map(function () { return this.dataset.postId }).get(),
        function(id, count) { $(".post-view-count[data-post-id=" + id + "]").text("阅读(" + count + ")") },
        function(id, count) { $(".post-comment-count[data-post-id=" + id + "]").text("评论(" + count + ")") },
        function(id, count) { $(".post-digg-count[data-post-id=" + id + "]").text("推荐(" + count + ")") });
</script>
	</div><!--end: topicList 文章列表容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="calendar"><div id="calendar"><div id="blog-calendar" style="display:none"></div></div>                
                    <script>loadBlogDefaultCalendar();</script></div>
			
			<DIV id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</DIV>
			
		</div><!--end: sideBarMain -->
		<div class="clear"></div>
		<div id="footer">
			<!--done-->
Copyright &copy; 2021 crossoverJie
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



		</div><!--end: footer -->
	</div><!--end: sideBar 侧边栏容器 -->
</div><!--end: home 自定义的最大容器 -->
</center>


    

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAjsHvJHL-f9XBLQ0LnotdTt0-90EM4UZGwhPVJkJT2nxuPaFr4Z7GOV5TSuxoyPMNh_TFUaoE6YLl8JjH7M1fLbEQ7_bhEhLIZvWyWZ6-p_acTtZ4mWQxJsNRZtyGhLvqeM" />
</body>
</html>
